

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Wed Apr 11 14:41:59 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    17                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    18                           	psect	text0,global,reloc=2,class=CODE,delta=1
    19                           	psect	text1,global,reloc=2,class=CODE,delta=1
    20                           	psect	text2,global,reloc=2,class=CODE,delta=1
    21                           	psect	text3,global,reloc=2,class=CODE,delta=1
    22                           	psect	text4,global,reloc=2,class=CODE,delta=1
    23                           	psect	text5,global,reloc=2,class=CODE,delta=1
    24                           	psect	text6,global,reloc=2,class=CODE,delta=1
    25                           	psect	text7,global,reloc=2,class=CODE,delta=1
    26                           	psect	text8,global,reloc=2,class=CODE,delta=1
    27                           	psect	text9,global,reloc=2,class=CODE,delta=1
    28                           	psect	text10,global,reloc=2,class=CODE,delta=1
    29                           	psect	text11,global,reloc=2,class=CODE,delta=1
    30                           	psect	text12,global,reloc=2,class=CODE,delta=1
    31                           	psect	text13,global,reloc=2,class=CODE,delta=1
    32                           	psect	text14,global,reloc=2,class=CODE,delta=1
    33                           	psect	text15,global,reloc=2,class=CODE,delta=1
    34                           	psect	text16,global,reloc=2,class=CODE,delta=1
    35                           	psect	text17,global,reloc=2,class=CODE,delta=1
    36                           	psect	text18,global,reloc=2,class=CODE,delta=1
    37                           	psect	text19,global,reloc=2,class=CODE,delta=1
    38                           	psect	text20,global,reloc=2,class=CODE,delta=1
    39                           	psect	text21,global,reloc=2,class=CODE,delta=1
    40                           	psect	text22,global,reloc=2,class=CODE,delta=1
    41                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text26,global,reloc=2,class=CODE,delta=1
    45                           	psect	text27,global,reloc=2,class=CODE,delta=1
    46                           	psect	text28,global,reloc=2,class=CODE,delta=1
    47                           	psect	text29,global,reloc=2,class=CODE,delta=1
    48                           	psect	text30,global,reloc=2,class=CODE,delta=1
    49                           	psect	text31,global,reloc=2,class=CODE,delta=1
    50                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=1
    51                           	psect	text33,global,reloc=2,class=CODE,delta=1
    52                           	psect	text34,global,reloc=2,class=CODE,delta=1
    53                           	psect	text35,global,reloc=2,class=CODE,delta=1
    54                           	psect	text36,global,reloc=2,class=CODE,delta=1
    55                           	psect	text37,global,reloc=2,class=CODE,delta=1
    56                           	psect	text38,global,reloc=2,class=CODE,delta=1
    57                           	psect	text39,global,reloc=2,class=CODE,delta=1
    58                           	psect	text40,global,reloc=2,class=CODE,delta=1
    59                           	psect	text41,global,reloc=2,class=CODE,delta=1
    60                           	psect	text42,global,reloc=2,class=CODE,delta=1
    61                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=1
    62                           	psect	text44,global,reloc=2,class=CODE,delta=1
    63                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=1
    64                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    65                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    66  0000                     
    67                           ; Version 1.45
    68                           ; Generated 16/11/2017 GMT
    69                           ; 
    70                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    71                           ; All rights reserved.
    72                           ; 
    73                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    74                           ; 
    75                           ; Redistribution and use in source and binary forms, with or without modification, are
    76                           ; permitted provided that the following conditions are met:
    77                           ; 
    78                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    79                           ;        conditions and the following disclaimer.
    80                           ; 
    81                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    82                           ;        of conditions and the following disclaimer in the documentation and/or other
    83                           ;        materials provided with the distribution.
    84                           ; 
    85                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    86                           ;        software without specific prior written permission.
    87                           ; 
    88                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    89                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    90                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    91                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    92                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    93                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    94                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    95                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    96                           ; 
    97                           ; 
    98                           ; Code-generator required, PIC18F4620 Definitions
    99                           ; 
   100                           ; SFR Addresses
   101  0000                     
   102                           	psect	idataCOMRAM
   103  00A872                     __pidataCOMRAM:
   104                           	opt stack 0
   105                           
   106                           ;initializer for _data
   107  00A872  30                 	db	48
   108                           
   109                           	psect	idataBANK2
   110  00A873                     __pidataBANK2:
   111                           	opt stack 0
   112                           
   113                           ;initializer for main@F3248
   114  00A873  0002               	dw	2
   115  00A875  0003               	dw	3
   116  00A877  0003               	dw	3
   117  00A879  0003               	dw	3
   118                           
   119                           ;initializer for main@F3246
   120  00A87B  0001               	dw	1
   121  00A87D  0003               	dw	3
   122  00A87F  0003               	dw	3
   123  00A881  0003               	dw	3
   124                           
   125                           ;initializer for main@F3244
   126  00A883  0001               	dw	1
   127  00A885  0002               	dw	2
   128  00A887  0003               	dw	3
   129  00A889  0003               	dw	3
   130                           
   131                           ;initializer for main@F3242
   132  00A88B  0001               	dw	1
   133  00A88D  0002               	dw	2
   134  00A88F  0002               	dw	2
   135  00A891  0003               	dw	3
   136                           
   137                           ;initializer for main@F3240
   138  00A893  0001               	dw	1
   139  00A895  0001               	dw	1
   140  00A897  0002               	dw	2
   141  00A899  0003               	dw	3
   142                           
   143                           ;initializer for main@F3238
   144  00A89B  0002               	dw	2
   145  00A89D  0003               	dw	3
   146  00A89F  0003               	dw	3
   147  00A8A1  0000               	dw	0
   148                           
   149                           ;initializer for main@F3236
   150  00A8A3  0002               	dw	2
   151  00A8A5  0002               	dw	2
   152  00A8A7  0003               	dw	3
   153  00A8A9  0000               	dw	0
   154                           
   155                           ;initializer for main@F3234
   156  00A8AB  0001               	dw	1
   157  00A8AD  0002               	dw	2
   158  00A8AF  0003               	dw	3
   159  00A8B1  0000               	dw	0
   160                           
   161                           ;initializer for main@F3232
   162  00A8B3  0001               	dw	1
   163  00A8B5  0003               	dw	3
   164  00A8B7  0003               	dw	3
   165  00A8B9  0000               	dw	0
   166                           
   167                           ;initializer for main@F3230
   168  00A8BB  0001               	dw	1
   169  00A8BD  0002               	dw	2
   170  00A8BF  0002               	dw	2
   171  00A8C1  0000               	dw	0
   172                           
   173                           ;initializer for main@F3228
   174  00A8C3  0001               	dw	1
   175  00A8C5  0001               	dw	1
   176  00A8C7  0003               	dw	3
   177  00A8C9  0000               	dw	0
   178                           
   179                           ;initializer for main@F3226
   180  00A8CB  0001               	dw	1
   181  00A8CD  0001               	dw	1
   182  00A8CF  0002               	dw	2
   183  00A8D1  0000               	dw	0
   184                           
   185                           ;initializer for main@F3224
   186  00A8D3  0002               	dw	2
   187  00A8D5  0003               	dw	3
   188  00A8D7  0000               	dw	0
   189  00A8D9  0000               	dw	0
   190                           
   191                           ;initializer for main@F3222
   192  00A8DB  0001               	dw	1
   193  00A8DD  0003               	dw	3
   194  00A8DF  0000               	dw	0
   195  00A8E1  0000               	dw	0
   196                           
   197                           ;initializer for main@F3220
   198  00A8E3  0001               	dw	1
   199  00A8E5  0002               	dw	2
   200  00A8E7  0000               	dw	0
   201  00A8E9  0000               	dw	0
   202                           
   203                           ;initializer for main@F3218
   204  00A8EB  0003               	dw	3
   205  00A8ED  0000               	dw	0
   206  00A8EF  0000               	dw	0
   207  00A8F1  0000               	dw	0
   208                           
   209                           ;initializer for main@F3216
   210  00A8F3  0002               	dw	2
   211  00A8F5  0000               	dw	0
   212  00A8F7  0000               	dw	0
   213  00A8F9  0000               	dw	0
   214                           
   215                           ;initializer for main@F3214
   216  00A8FB  0001               	dw	1
   217  00A8FD  0000               	dw	0
   218  00A8FF  0000               	dw	0
   219  00A901  0000               	dw	0
   220                           
   221                           ;initializer for printRTC@F3193
   222  00A903  4D                 	db	77
   223  00A904  4D                 	db	77
   224  00A905  4D                 	db	77
   225  00A906  00                 	db	0
   226                           
   227                           ;initializer for _UART
   228  00A907  D8                 	db	low _uart
   229  00A908  02                 	db	high _uart
   230                           
   231                           ;initializer for _data_RX
   232  00A909  30                 	db	48
   233                           
   234                           	psect	mediumconst
   235  00FB80                     __pmediumconst:
   236                           	opt stack 0
   237  00FB80  00                 	db	0
   238  00FB81                     operation_summary@F3196:
   239                           	opt stack 0
   240  00FB81  31                 	db	49
   241  00FB82  32                 	db	50
   242  00FB83  33                 	db	51
   243  00FB84  41                 	db	65
   244  00FB85  34                 	db	52
   245  00FB86  35                 	db	53
   246  00FB87  36                 	db	54
   247  00FB88  42                 	db	66
   248  00FB89  37                 	db	55
   249  00FB8A  38                 	db	56
   250  00FB8B  39                 	db	57
   251  00FB8C  43                 	db	67
   252  00FB8D  2A                 	db	42
   253  00FB8E  30                 	db	48
   254  00FB8F  23                 	db	35
   255  00FB90  44                 	db	68
   256  00FB91  00                 	db	0
   257  00FB92                     __end_ofoperation_summary@F3196:
   258                           	opt stack 0
   259  00FB92                     _keys:
   260                           	opt stack 0
   261  00FB92  31                 	db	49
   262  00FB93  32                 	db	50
   263  00FB94  33                 	db	51
   264  00FB95  41                 	db	65
   265  00FB96  34                 	db	52
   266  00FB97  35                 	db	53
   267  00FB98  36                 	db	54
   268  00FB99  42                 	db	66
   269  00FB9A  37                 	db	55
   270  00FB9B  38                 	db	56
   271  00FB9C  39                 	db	57
   272  00FB9D  43                 	db	67
   273  00FB9E  2A                 	db	42
   274  00FB9F  30                 	db	48
   275  00FBA0  23                 	db	35
   276  00FBA1  44                 	db	68
   277  00FBA2  00                 	db	0
   278  00FBA3                     __end_of_keys:
   279                           	opt stack 0
   280  00FBA3                     _dpowers:
   281                           	opt stack 0
   282  00FBA3  0001               	dw	1
   283  00FBA5  000A               	dw	10
   284  00FBA7  0064               	dw	100
   285  00FBA9  03E8               	dw	1000
   286  00FBAB  2710               	dw	10000
   287  00FBAD                     __end_of_dpowers:
   288                           	opt stack 0
   289  00FBAD                     _hexpowers:
   290                           	opt stack 0
   291  00FBAD  0001               	dw	1
   292  00FBAF  0010               	dw	16
   293  00FBB1  0100               	dw	256
   294  00FBB3  1000               	dw	4096
   295  00FBB5                     __end_of_hexpowers:
   296                           	opt stack 0
   297  00FBB5                     _LCD_LEFT:
   298                           	opt stack 0
   299  00FBB5  00                 	db	0
   300  00FBB6                     __end_of_LCD_LEFT:
   301                           	opt stack 0
   302  00FBB6                     _LCD_RIGHT:
   303                           	opt stack 0
   304  00FBB6  01                 	db	1
   305  00FBB7                     __end_of_LCD_RIGHT:
   306                           	opt stack 0
   307  00FBB7                     _LCD_SIZE_VERT:
   308                           	opt stack 0
   309  00FBB7  02                 	db	2
   310  00FBB8                     __end_of_LCD_SIZE_VERT:
   311                           	opt stack 0
   312  00FBB8                     _LCD_SIZE_HORZ:
   313                           	opt stack 0
   314  00FBB8  10                 	db	16
   315  00FBB9                     __end_of_LCD_SIZE_HORZ:
   316                           	opt stack 0
   317  00FBB9                     _LCD_VERT_LIMIT:
   318                           	opt stack 0
   319  00FBB9  02                 	db	2
   320  00FBBA                     __end_of_LCD_VERT_LIMIT:
   321                           	opt stack 0
   322  00FBBA                     _LCD_HORZ_LIMIT:
   323                           	opt stack 0
   324  00FBBA  28                 	db	40
   325  00FBBB                     __end_of_LCD_HORZ_LIMIT:
   326                           	opt stack 0
   327  0000                     _SPBRG	set	4015
   328  0000                     _RCREG	set	4014
   329  0000                     _RCSTAbits	set	4011
   330  0000                     _TXREG	set	4013
   331  0000                     _TXSTAbits	set	4012
   332  0000                     _EECON2	set	4007
   333  0000                     _EEDATA	set	4008
   334  0000                     _EEADR	set	4009
   335  0000                     _EECON1bits	set	4006
   336  0000                     _SSPBUF	set	4041
   337  0000                     _SSPCON2bits	set	4037
   338  0000                     _SSPADD	set	4040
   339  0000                     _SSPCON2	set	4037
   340  0000                     _SSPCON1	set	4038
   341  0000                     _SSPSTAT	set	4039
   342  0000                     _TRISCbits	set	3988
   343  0000                     _SSPCON1bits	set	4038
   344  0000                     _LATDbits	set	3980
   345  0000                     _PORTB	set	3969
   346  0000                     _PORTBbits	set	3969
   347  0000                     _INTCONbits	set	4082
   348  0000                     _ADCON1	set	4033
   349  0000                     _ADCON0	set	4034
   350  0000                     _TRISE	set	3990
   351  0000                     _TRISD	set	3989
   352  0000                     _TRISC	set	3988
   353  0000                     _TRISB	set	3987
   354  0000                     _TRISA	set	3986
   355  0000                     _LATE	set	3981
   356  0000                     _LATD	set	3980
   357  0000                     _LATC	set	3979
   358  0000                     _LATB	set	3978
   359  0000                     _LATA	set	3977
   360  0000                     _TRISC7	set	31911
   361  0000                     _TRISC6	set	31910
   362  0000                     _RCIE	set	31981
   363  0000                     _RCIF	set	31989
   364  0000                     _TXIE	set	31980
   365  0000                     _TRMT	set	32097
   366  0000                     _TXIF	set	31988
   367  00FBBB                     STR_3:
   368  00FBBB  48                 	db	72	;'H'
   369  00FBBC  69                 	db	105	;'i'
   370  00FBBD  21                 	db	33
   371  00FBBE  20                 	db	32
   372  00FBBF  49                 	db	73	;'I'
   373  00FBC0  20                 	db	32
   374  00FBC1  61                 	db	97	;'a'
   375  00FBC2  6D                 	db	109	;'m'
   376  00FBC3  20                 	db	32
   377  00FBC4  43                 	db	67	;'C'
   378  00FBC5  65                 	db	101	;'e'
   379  00FBC6  72                 	db	114	;'r'
   380  00FBC7  62                 	db	98	;'b'
   381  00FBC8  65                 	db	101	;'e'
   382  00FBC9  72                 	db	114	;'r'
   383  00FBCA  75                 	db	117	;'u'
   384  00FBCB  73                 	db	115	;'s'
   385  00FBCC  20                 	db	32
   386  00FBCD  76                 	db	118	;'v'
   387  00FBCE  31                 	db	49	;'1'
   388  00FBCF  2E                 	db	46
   389  00FBD0  20                 	db	32
   390  00FBD1  49                 	db	73	;'I'
   391  00FBD2  20                 	db	32
   392  00FBD3  61                 	db	97	;'a'
   393  00FBD4  6D                 	db	109	;'m'
   394  00FBD5  20                 	db	32
   395  00FBD6  61                 	db	97	;'a'
   396  00FBD7  6E                 	db	110	;'n'
   397  00FBD8  20                 	db	32
   398  00FBD9  61                 	db	97	;'a'
   399  00FBDA  75                 	db	117	;'u'
   400  00FBDB  74                 	db	116	;'t'
   401  00FBDC  6F                 	db	111	;'o'
   402  00FBDD  6E                 	db	110	;'n'
   403  00FBDE  6F                 	db	111	;'o'
   404  00FBDF  6D                 	db	109	;'m'
   405  00FBE0  6F                 	db	111	;'o'
   406  00FBE1  75                 	db	117	;'u'
   407  00FBE2  73                 	db	115	;'s'
   408  00FBE3  00                 	db	0
   409  00FBE4                     STR_5:
   410  00FBE4  6F                 	db	111	;'o'
   411  00FBE5  62                 	db	98	;'b'
   412  00FBE6  6F                 	db	111	;'o'
   413  00FBE7  74                 	db	116	;'t'
   414  00FBE8  20                 	db	32
   415  00FBE9  64                 	db	100	;'d'
   416  00FBEA  65                 	db	101	;'e'
   417  00FBEB  73                 	db	115	;'s'
   418  00FBEC  69                 	db	105	;'i'
   419  00FBED  67                 	db	103	;'g'
   420  00FBEE  6E                 	db	110	;'n'
   421  00FBEF  65                 	db	101	;'e'
   422  00FBF0  64                 	db	100	;'d'
   423  00FBF1  20                 	db	32
   424  00FBF2  74                 	db	116	;'t'
   425  00FBF3  6F                 	db	111	;'o'
   426  00FBF4  20                 	db	32
   427  00FBF5  70                 	db	112	;'p'
   428  00FBF6  61                 	db	97	;'a'
   429  00FBF7  63                 	db	99	;'c'
   430  00FBF8  6B                 	db	107	;'k'
   431  00FBF9  61                 	db	97	;'a'
   432  00FBFA  67                 	db	103	;'g'
   433  00FBFB  65                 	db	101	;'e'
   434  00FBFC  20                 	db	32
   435  00FBFD  64                 	db	100	;'d'
   436  00FBFE  61                 	db	97	;'a'
   437  00FBFF  69                 	db	105	;'i'
   438  00FC00  6C                 	db	108	;'l'
   439  00FC01  79                 	db	121	;'y'
   440  00FC02  20                 	db	32
   441  00FC03  64                 	db	100	;'d'
   442  00FC04  69                 	db	105	;'i'
   443  00FC05  65                 	db	101	;'e'
   444  00FC06  74                 	db	116	;'t'
   445  00FC07  61                 	db	97	;'a'
   446  00FC08  72                 	db	114	;'r'
   447  00FC09  79                 	db	121	;'y'
   448  00FC0A  00                 	db	0
   449  00FC0B                     STR_6:
   450  00FC0B  67                 	db	103	;'g'
   451  00FC0C  65                 	db	101	;'e'
   452  00FC0D  20                 	db	32
   453  00FC0E  64                 	db	100	;'d'
   454  00FC0F  61                 	db	97	;'a'
   455  00FC10  69                 	db	105	;'i'
   456  00FC11  6C                 	db	108	;'l'
   457  00FC12  79                 	db	121	;'y'
   458  00FC13  20                 	db	32
   459  00FC14  64                 	db	100	;'d'
   460  00FC15  69                 	db	105	;'i'
   461  00FC16  65                 	db	101	;'e'
   462  00FC17  74                 	db	116	;'t'
   463  00FC18  61                 	db	97	;'a'
   464  00FC19  72                 	db	114	;'r'
   465  00FC1A  79                 	db	121	;'y'
   466  00FC1B  20                 	db	32
   467  00FC1C  66                 	db	102	;'f'
   468  00FC1D  6F                 	db	111	;'o'
   469  00FC1E  6F                 	db	111	;'o'
   470  00FC1F  64                 	db	100	;'d'
   471  00FC20  73                 	db	115	;'s'
   472  00FC21  20                 	db	32
   473  00FC22  66                 	db	102	;'f'
   474  00FC23  6F                 	db	111	;'o'
   475  00FC24  72                 	db	114	;'r'
   476  00FC25  20                 	db	32
   477  00FC26  6C                 	db	108	;'l'
   478  00FC27  61                 	db	97	;'a'
   479  00FC28  62                 	db	98	;'b'
   480  00FC29  6F                 	db	111	;'o'
   481  00FC2A  72                 	db	114	;'r'
   482  00FC2B  61                 	db	97	;'a'
   483  00FC2C  74                 	db	116	;'t'
   484  00FC2D  6F                 	db	111	;'o'
   485  00FC2E  72                 	db	114	;'r'
   486  00FC2F  79                 	db	121	;'y'
   487  00FC30  00                 	db	0
   488  00FC31                     STR_4:
   489  00FC31  61                 	db	97	;'a'
   490  00FC32  6D                 	db	109	;'m'
   491  00FC33  20                 	db	32
   492  00FC34  61                 	db	97	;'a'
   493  00FC35  6E                 	db	110	;'n'
   494  00FC36  20                 	db	32
   495  00FC37  61                 	db	97	;'a'
   496  00FC38  75                 	db	117	;'u'
   497  00FC39  74                 	db	116	;'t'
   498  00FC3A  6F                 	db	111	;'o'
   499  00FC3B  6E                 	db	110	;'n'
   500  00FC3C  6F                 	db	111	;'o'
   501  00FC3D  6D                 	db	109	;'m'
   502  00FC3E  6F                 	db	111	;'o'
   503  00FC3F  75                 	db	117	;'u'
   504  00FC40  73                 	db	115	;'s'
   505  00FC41  20                 	db	32
   506  00FC42  72                 	db	114	;'r'
   507  00FC43  6F                 	db	111	;'o'
   508  00FC44  62                 	db	98	;'b'
   509  00FC45  6F                 	db	111	;'o'
   510  00FC46  74                 	db	116	;'t'
   511  00FC47  20                 	db	32
   512  00FC48  64                 	db	100	;'d'
   513  00FC49  65                 	db	101	;'e'
   514  00FC4A  73                 	db	115	;'s'
   515  00FC4B  69                 	db	105	;'i'
   516  00FC4C  67                 	db	103	;'g'
   517  00FC4D  6E                 	db	110	;'n'
   518  00FC4E  65                 	db	101	;'e'
   519  00FC4F  64                 	db	100	;'d'
   520  00FC50  20                 	db	32
   521  00FC51  74                 	db	116	;'t'
   522  00FC52  6F                 	db	111	;'o'
   523  00FC53  00                 	db	0
   524  00FC54                     STR_31:
   525  00FC54  45                 	db	69	;'E'
   526  00FC55  6E                 	db	110	;'n'
   527  00FC56  74                 	db	116	;'t'
   528  00FC57  65                 	db	101	;'e'
   529  00FC58  72                 	db	114	;'r'
   530  00FC59  20                 	db	32
   531  00FC5A  52                 	db	82	;'R'
   532  00FC5B  6F                 	db	111	;'o'
   533  00FC5C  77                 	db	119	;'w'
   534  00FC5D  3A                 	db	58	;':'
   535  00FC5E  20                 	db	32
   536  00FC5F  20                 	db	32
   537  00FC60  20                 	db	32
   538  00FC61  20                 	db	32
   539  00FC62  20                 	db	32
   540  00FC63  20                 	db	32
   541  00FC64  44                 	db	68	;'D'
   542  00FC65  72                 	db	114	;'r'
   543  00FC66  61                 	db	97	;'a'
   544  00FC67  77                 	db	119	;'w'
   545  00FC68  65                 	db	101	;'e'
   546  00FC69  72                 	db	114	;'r'
   547  00FC6A  73                 	db	115	;'s'
   548  00FC6B  20                 	db	32
   549  00FC6C  55                 	db	85	;'U'
   550  00FC6D  73                 	db	115	;'s'
   551  00FC6E  65                 	db	101	;'e'
   552  00FC6F  64                 	db	100	;'d'
   553  00FC70  3A                 	db	58	;':'
   554  00FC71  20                 	db	32
   555  00FC72  25                 	db	37
   556  00FC73  64                 	db	100	;'d'
   557  00FC74  00                 	db	0
   558  00FC75                     STR_42:
   559  00FC75  20                 	db	32
   560  00FC76  20                 	db	32
   561  00FC77  20                 	db	32
   562  00FC78  20                 	db	32
   563  00FC79  20                 	db	32
   564  00FC7A  20                 	db	32
   565  00FC7B  20                 	db	32
   566  00FC7C  20                 	db	32
   567  00FC7D  20                 	db	32
   568  00FC7E  20                 	db	32
   569  00FC7F  20                 	db	32
   570  00FC80  20                 	db	32
   571  00FC81  20                 	db	32
   572  00FC82  20                 	db	32
   573  00FC83  20                 	db	32
   574  00FC84  20                 	db	32
   575  00FC85  74                 	db	116	;'t'
   576  00FC86  6F                 	db	111	;'o'
   577  00FC87  20                 	db	32
   578  00FC88  73                 	db	115	;'s'
   579  00FC89  6B                 	db	107	;'k'
   580  00FC8A  69                 	db	105	;'i'
   581  00FC8B  70                 	db	112	;'p'
   582  00FC8C  20                 	db	32
   583  00FC8D  64                 	db	100	;'d'
   584  00FC8E  72                 	db	114	;'r'
   585  00FC8F  61                 	db	97	;'a'
   586  00FC90  77                 	db	119	;'w'
   587  00FC91  65                 	db	101	;'e'
   588  00FC92  72                 	db	114	;'r'
   589  00FC93  00                 	db	0
   590  00FC94                     STR_32:
   591  00FC94  50                 	db	80	;'P'
   592  00FC95  61                 	db	97	;'a'
   593  00FC96  63                 	db	99	;'c'
   594  00FC97  6B                 	db	107	;'k'
   595  00FC98  20                 	db	32
   596  00FC99  46                 	db	70	;'F'
   597  00FC9A  6F                 	db	111	;'o'
   598  00FC9B  6F                 	db	111	;'o'
   599  00FC9C  64                 	db	100	;'d'
   600  00FC9D  3A                 	db	58	;':'
   601  00FC9E  20                 	db	32
   602  00FC9F  23                 	db	35
   603  00FCA0  20                 	db	32
   604  00FCA1  20                 	db	32
   605  00FCA2  20                 	db	32
   606  00FCA3  20                 	db	32
   607  00FCA4  43                 	db	67	;'C'
   608  00FCA5  6C                 	db	108	;'l'
   609  00FCA6  65                 	db	101	;'e'
   610  00FCA7  61                 	db	97	;'a'
   611  00FCA8  72                 	db	114	;'r'
   612  00FCA9  20                 	db	32
   613  00FCAA  52                 	db	82	;'R'
   614  00FCAB  6F                 	db	111	;'o'
   615  00FCAC  77                 	db	119	;'w'
   616  00FCAD  73                 	db	115	;'s'
   617  00FCAE  3A                 	db	58	;':'
   618  00FCAF  20                 	db	32
   619  00FCB0  43                 	db	67	;'C'
   620  00FCB1  00                 	db	0
   621  00FCB2                     STR_41:
   622  00FCB2  52                 	db	82	;'R'
   623  00FCB3  6F                 	db	111	;'o'
   624  00FCB4  77                 	db	119	;'w'
   625  00FCB5  20                 	db	32
   626  00FCB6  25                 	db	37
   627  00FCB7  64                 	db	100	;'d'
   628  00FCB8  2E                 	db	46
   629  00FCB9  2E                 	db	46
   630  00FCBA  2E                 	db	46
   631  00FCBB  20                 	db	32
   632  00FCBC  20                 	db	32
   633  00FCBD  20                 	db	32
   634  00FCBE  20                 	db	32
   635  00FCBF  20                 	db	32
   636  00FCC0  20                 	db	32
   637  00FCC1  20                 	db	32
   638  00FCC2  20                 	db	32
   639  00FCC3  50                 	db	80	;'P'
   640  00FCC4  72                 	db	114	;'r'
   641  00FCC5  65                 	db	101	;'e'
   642  00FCC6  73                 	db	115	;'s'
   643  00FCC7  73                 	db	115	;'s'
   644  00FCC8  20                 	db	32
   645  00FCC9  2A                 	db	42
   646  00FCCA  00                 	db	0
   647  00FCCB  25                 	db	37
   648  00FCCC  30                 	db	48	;'0'
   649  00FCCD  32                 	db	50	;'2'
   650  00FCCE  64                 	db	100	;'d'
   651  00FCCF  25                 	db	37
   652  00FCD0  73                 	db	115	;'s'
   653  00FCD1  20                 	db	32
   654  00FCD2  7C                 	db	124
   655  00FCD3  20                 	db	32
   656  00FCD4  25                 	db	37
   657  00FCD5  30                 	db	48	;'0'
   658  00FCD6  32                 	db	50	;'2'
   659  00FCD7  64                 	db	100	;'d'
   660  00FCD8  3A                 	db	58	;':'
   661  00FCD9  25                 	db	37
   662  00FCDA  30                 	db	48	;'0'
   663  00FCDB  32                 	db	50	;'2'
   664  00FCDC  64                 	db	100	;'d'
   665  00FCDD  3A                 	db	58	;':'
   666  00FCDE  25                 	db	37
   667  00FCDF  30                 	db	48	;'0'
   668  00FCE0  32                 	db	50	;'2'
   669  00FCE1  64                 	db	100	;'d'
   670  00FCE2  00                 	db	0
   671  00FCE3                     STR_7:
   672  00FCE3  73                 	db	115	;'s'
   673  00FCE4  20                 	db	32
   674  00FCE5  66                 	db	102	;'f'
   675  00FCE6  6F                 	db	111	;'o'
   676  00FCE7  72                 	db	114	;'r'
   677  00FCE8  20                 	db	32
   678  00FCE9  6C                 	db	108	;'l'
   679  00FCEA  61                 	db	97	;'a'
   680  00FCEB  62                 	db	98	;'b'
   681  00FCEC  6F                 	db	111	;'o'
   682  00FCED  72                 	db	114	;'r'
   683  00FCEE  61                 	db	97	;'a'
   684  00FCEF  74                 	db	116	;'t'
   685  00FCF0  6F                 	db	111	;'o'
   686  00FCF1  72                 	db	114	;'r'
   687  00FCF2  79                 	db	121	;'y'
   688  00FCF3  20                 	db	32
   689  00FCF4  72                 	db	114	;'r'
   690  00FCF5  61                 	db	97	;'a'
   691  00FCF6  74                 	db	116	;'t'
   692  00FCF7  73                 	db	115	;'s'
   693  00FCF8  21                 	db	33
   694  00FCF9  00                 	db	0
   695  00FCFA                     STR_87:
   696  00FCFA  44                 	db	68	;'D'
   697  00FCFB  61                 	db	97	;'a'
   698  00FCFC  74                 	db	116	;'t'
   699  00FCFD  65                 	db	101	;'e'
   700  00FCFE  20                 	db	32
   701  00FCFF  25                 	db	37
   702  00FD00  30                 	db	48	;'0'
   703  00FD01  32                 	db	50	;'2'
   704  00FD02  78                 	db	120	;'x'
   705  00FD03  2F                 	db	47
   706  00FD04  25                 	db	37
   707  00FD05  30                 	db	48	;'0'
   708  00FD06  32                 	db	50	;'2'
   709  00FD07  78                 	db	120	;'x'
   710  00FD08  2F                 	db	47
   711  00FD09  25                 	db	37
   712  00FD0A  30                 	db	48	;'0'
   713  00FD0B  32                 	db	50	;'2'
   714  00FD0C  78                 	db	120	;'x'
   715  00FD0D  00                 	db	0
   716  00FD0E                     STR_88:
   717  00FD0E  54                 	db	84	;'T'
   718  00FD0F  69                 	db	105	;'i'
   719  00FD10  6D                 	db	109	;'m'
   720  00FD11  65                 	db	101	;'e'
   721  00FD12  20                 	db	32
   722  00FD13  25                 	db	37
   723  00FD14  30                 	db	48	;'0'
   724  00FD15  32                 	db	50	;'2'
   725  00FD16  78                 	db	120	;'x'
   726  00FD17  3A                 	db	58	;':'
   727  00FD18  25                 	db	37
   728  00FD19  30                 	db	48	;'0'
   729  00FD1A  32                 	db	50	;'2'
   730  00FD1B  78                 	db	120	;'x'
   731  00FD1C  3A                 	db	58	;':'
   732  00FD1D  25                 	db	37
   733  00FD1E  30                 	db	48	;'0'
   734  00FD1F  32                 	db	50	;'2'
   735  00FD20  78                 	db	120	;'x'
   736  00FD21  00                 	db	0
   737  00FD22                     STR_81:
   738  00FD22  44                 	db	68	;'D'
   739  00FD23  25                 	db	37
   740  00FD24  64                 	db	100	;'d'
   741  00FD25  2C                 	db	44
   742  00FD26  20                 	db	32
   743  00FD27  44                 	db	68	;'D'
   744  00FD28  25                 	db	37
   745  00FD29  64                 	db	100	;'d'
   746  00FD2A  2C                 	db	44
   747  00FD2B  20                 	db	32
   748  00FD2C  44                 	db	68	;'D'
   749  00FD2D  25                 	db	37
   750  00FD2E  64                 	db	100	;'d'
   751  00FD2F  2C                 	db	44
   752  00FD30  20                 	db	32
   753  00FD31  44                 	db	68	;'D'
   754  00FD32  25                 	db	37
   755  00FD33  64                 	db	100	;'d'
   756  00FD34  00                 	db	0
   757  00FD35                     STR_128:
   758  00FD35  30                 	db	48	;'0'
   759  00FD36  31                 	db	49	;'1'
   760  00FD37  32                 	db	50	;'2'
   761  00FD38  33                 	db	51	;'3'
   762  00FD39  34                 	db	52	;'4'
   763  00FD3A  35                 	db	53	;'5'
   764  00FD3B  36                 	db	54	;'6'
   765  00FD3C  37                 	db	55	;'7'
   766  00FD3D  38                 	db	56	;'8'
   767  00FD3E  39                 	db	57	;'9'
   768  00FD3F  61                 	db	97	;'a'
   769  00FD40  62                 	db	98	;'b'
   770  00FD41  63                 	db	99	;'c'
   771  00FD42  64                 	db	100	;'d'
   772  00FD43  65                 	db	101	;'e'
   773  00FD44  66                 	db	102	;'f'
   774  00FD45  00                 	db	0
   775  00FD46                     STR_126:
   776  00FD46  52                 	db	82	;'R'
   777  00FD47  20                 	db	32
   778  00FD48  25                 	db	37
   779  00FD49  64                 	db	100	;'d'
   780  00FD4A  20                 	db	32
   781  00FD4B  20                 	db	32
   782  00FD4C  46                 	db	70	;'F'
   783  00FD4D  20                 	db	32
   784  00FD4E  25                 	db	37
   785  00FD4F  64                 	db	100	;'d'
   786  00FD50  20                 	db	32
   787  00FD51  20                 	db	32
   788  00FD52  4C                 	db	76	;'L'
   789  00FD53  20                 	db	32
   790  00FD54  25                 	db	37
   791  00FD55  64                 	db	100	;'d'
   792  00FD56  00                 	db	0
   793  00FD57                     STR_59:
   794  00FD57  52                 	db	82	;'R'
   795  00FD58  75                 	db	117	;'u'
   796  00FD59  6E                 	db	110	;'n'
   797  00FD5A  73                 	db	115	;'s'
   798  00FD5B  20                 	db	32
   799  00FD5C  61                 	db	97	;'a'
   800  00FD5D  67                 	db	103	;'g'
   801  00FD5E  6F                 	db	111	;'o'
   802  00FD5F  20                 	db	32
   803  00FD60  28                 	db	40
   804  00FD61  31                 	db	49	;'1'
   805  00FD62  2D                 	db	45
   806  00FD63  36                 	db	54	;'6'
   807  00FD64  29                 	db	41
   808  00FD65  3A                 	db	58	;':'
   809  00FD66  20                 	db	32
   810  00FD67  00                 	db	0
   811  00FD68                     STR_50:
   812  00FD68  45                 	db	69	;'E'
   813  00FD69  6E                 	db	110	;'n'
   814  00FD6A  74                 	db	116	;'t'
   815  00FD6B  72                 	db	114	;'r'
   816  00FD6C  69                 	db	105	;'i'
   817  00FD6D  65                 	db	101	;'e'
   818  00FD6E  73                 	db	115	;'s'
   819  00FD6F  20                 	db	32
   820  00FD70  63                 	db	99	;'c'
   821  00FD71  6C                 	db	108	;'l'
   822  00FD72  65                 	db	101	;'e'
   823  00FD73  61                 	db	97	;'a'
   824  00FD74  72                 	db	114	;'r'
   825  00FD75  65                 	db	101	;'e'
   826  00FD76  64                 	db	100	;'d'
   827  00FD77  21                 	db	33
   828  00FD78  00                 	db	0
   829  00FD79                     STR_20:
   830  00FD79  48                 	db	72	;'H'
   831  00FD7A  65                 	db	101	;'e'
   832  00FD7B  69                 	db	105	;'i'
   833  00FD7C  67                 	db	103	;'g'
   834  00FD7D  68                 	db	104	;'h'
   835  00FD7E  74                 	db	116	;'t'
   836  00FD7F  3A                 	db	58	;':'
   837  00FD80  31                 	db	49	;'1'
   838  00FD81  20                 	db	32
   839  00FD82  20                 	db	32
   840  00FD83  48                 	db	72	;'H'
   841  00FD84  6F                 	db	111	;'o'
   842  00FD85  6F                 	db	111	;'o'
   843  00FD86  6B                 	db	107	;'k'
   844  00FD87  3A                 	db	58	;':'
   845  00FD88  32                 	db	50	;'2'
   846  00FD89  00                 	db	0
   847  00FD8A                     STR_29:
   848  00FD8A  52                 	db	82	;'R'
   849  00FD8B  3A                 	db	58	;':'
   850  00FD8C  20                 	db	32
   851  00FD8D  31                 	db	49	;'1'
   852  00FD8E  20                 	db	32
   853  00FD8F  20                 	db	32
   854  00FD90  46                 	db	70	;'F'
   855  00FD91  3A                 	db	58	;':'
   856  00FD92  20                 	db	32
   857  00FD93  32                 	db	50	;'2'
   858  00FD94  20                 	db	32
   859  00FD95  20                 	db	32
   860  00FD96  4C                 	db	76	;'L'
   861  00FD97  3A                 	db	58	;':'
   862  00FD98  20                 	db	32
   863  00FD99  33                 	db	51	;'3'
   864  00FD9A  00                 	db	0
   865  00FD9B                     STR_54:
   866  00FD9B  50                 	db	80	;'P'
   867  00FD9C  61                 	db	97	;'a'
   868  00FD9D  73                 	db	115	;'s'
   869  00FD9E  74                 	db	116	;'t'
   870  00FD9F  20                 	db	32
   871  00FDA0  52                 	db	82	;'R'
   872  00FDA1  75                 	db	117	;'u'
   873  00FDA2  6E                 	db	110	;'n'
   874  00FDA3  20                 	db	32
   875  00FDA4  4C                 	db	76	;'L'
   876  00FDA5  6F                 	db	111	;'o'
   877  00FDA6  67                 	db	103	;'g'
   878  00FDA7  73                 	db	115	;'s'
   879  00FDA8  3A                 	db	58	;':'
   880  00FDA9  20                 	db	32
   881  00FDAA  43                 	db	67	;'C'
   882  00FDAB  00                 	db	0
   883  00FDAC                     STR_65:
   884  00FDAC  52                 	db	82	;'R'
   885  00FDAD  3A                 	db	58	;':'
   886  00FDAE  25                 	db	37
   887  00FDAF  64                 	db	100	;'d'
   888  00FDB0  20                 	db	32
   889  00FDB1  20                 	db	32
   890  00FDB2  46                 	db	70	;'F'
   891  00FDB3  3A                 	db	58	;':'
   892  00FDB4  25                 	db	37
   893  00FDB5  64                 	db	100	;'d'
   894  00FDB6  20                 	db	32
   895  00FDB7  20                 	db	32
   896  00FDB8  4C                 	db	76	;'L'
   897  00FDB9  3A                 	db	58	;':'
   898  00FDBA  25                 	db	37
   899  00FDBB  64                 	db	100	;'d'
   900  00FDBC  00                 	db	0
   901  00FDBD                     STR_8:
   902  00FDBD  48                 	db	72	;'H'
   903  00FDBE  6F                 	db	111	;'o'
   904  00FDBF  6D                 	db	109	;'m'
   905  00FDC0  65                 	db	101	;'e'
   906  00FDC1  20                 	db	32
   907  00FDC2  53                 	db	83	;'S'
   908  00FDC3  63                 	db	99	;'c'
   909  00FDC4  72                 	db	114	;'r'
   910  00FDC5  65                 	db	101	;'e'
   911  00FDC6  65                 	db	101	;'e'
   912  00FDC7  6E                 	db	110	;'n'
   913  00FDC8  3A                 	db	58	;':'
   914  00FDC9  20                 	db	32
   915  00FDCA  31                 	db	49	;'1'
   916  00FDCB  20                 	db	32
   917  00FDCC  00                 	db	0
   918  00FDCD                     STR_18:
   919  00FDCD  4D                 	db	77	;'M'
   920  00FDCE  61                 	db	97	;'a'
   921  00FDCF  6E                 	db	110	;'n'
   922  00FDD0  75                 	db	117	;'u'
   923  00FDD1  61                 	db	97	;'a'
   924  00FDD2  6C                 	db	108	;'l'
   925  00FDD3  20                 	db	32
   926  00FDD4  43                 	db	67	;'C'
   927  00FDD5  6F                 	db	111	;'o'
   928  00FDD6  6E                 	db	110	;'n'
   929  00FDD7  74                 	db	116	;'t'
   930  00FDD8  72                 	db	114	;'r'
   931  00FDD9  6F                 	db	111	;'o'
   932  00FDDA  6C                 	db	108	;'l'
   933  00FDDB  3A                 	db	58	;':'
   934  00FDDC  00                 	db	0
   935  00FDDD                     STR_80:
   936  00FDDD  4D                 	db	77	;'M'
   937  00FDDE  61                 	db	97	;'a'
   938  00FDDF  72                 	db	114	;'r'
   939  00FDE0  6B                 	db	107	;'k'
   940  00FDE1  65                 	db	101	;'e'
   941  00FDE2  64                 	db	100	;'d'
   942  00FDE3  20                 	db	32
   943  00FDE4  44                 	db	68	;'D'
   944  00FDE5  72                 	db	114	;'r'
   945  00FDE6  61                 	db	97	;'a'
   946  00FDE7  77                 	db	119	;'w'
   947  00FDE8  65                 	db	101	;'e'
   948  00FDE9  72                 	db	114	;'r'
   949  00FDEA  73                 	db	115	;'s'
   950  00FDEB  3A                 	db	58	;':'
   951  00FDEC  00                 	db	0
   952  00FDED                     STR_85:
   953  00FDED  52                 	db	82	;'R'
   954  00FDEE  20                 	db	32
   955  00FDEF  25                 	db	37
   956  00FDF0  64                 	db	100	;'d'
   957  00FDF1  20                 	db	32
   958  00FDF2  46                 	db	70	;'F'
   959  00FDF3  20                 	db	32
   960  00FDF4  25                 	db	37
   961  00FDF5  64                 	db	100	;'d'
   962  00FDF6  20                 	db	32
   963  00FDF7  20                 	db	32
   964  00FDF8  4C                 	db	76	;'L'
   965  00FDF9  20                 	db	32
   966  00FDFA  25                 	db	37
   967  00FDFB  64                 	db	100	;'d'
   968  00FDFC  00                 	db	0
   969  00FDFD                     STR_83:
   970  00FDFD  4D                 	db	77	;'M'
   971  00FDFE  69                 	db	105	;'i'
   972  00FDFF  6E                 	db	110	;'n'
   973  00FE00  3A                 	db	58	;':'
   974  00FE01  53                 	db	83	;'S'
   975  00FE02  65                 	db	101	;'e'
   976  00FE03  63                 	db	99	;'c'
   977  00FE04  20                 	db	32
   978  00FE05  3D                 	db	61	;'='
   979  00FE06  20                 	db	32
   980  00FE07  25                 	db	37
   981  00FE08  64                 	db	100	;'d'
   982  00FE09  3A                 	db	58	;':'
   983  00FE0A  25                 	db	37
   984  00FE0B  64                 	db	100	;'d'
   985  00FE0C  00                 	db	0
   986  00FE0D                     STR_48:
   987  00FE0D  4D                 	db	77	;'M'
   988  00FE0E  61                 	db	97	;'a'
   989  00FE0F  78                 	db	120	;'x'
   990  00FE10  69                 	db	105	;'i'
   991  00FE11  6D                 	db	109	;'m'
   992  00FE12  75                 	db	117	;'u'
   993  00FE13  6D                 	db	109	;'m'
   994  00FE14  20                 	db	32
   995  00FE15  44                 	db	68	;'D'
   996  00FE16  72                 	db	114	;'r'
   997  00FE17  61                 	db	97	;'a'
   998  00FE18  77                 	db	119	;'w'
   999  00FE19  65                 	db	101	;'e'
  1000  00FE1A  72                 	db	114	;'r'
  1001  00FE1B  73                 	db	115	;'s'
  1002  00FE1C  00                 	db	0
  1003  00FE1D                     STR_51:
  1004  00FE1D  4D                 	db	77	;'M'
  1005  00FE1E  61                 	db	97	;'a'
  1006  00FE1F  78                 	db	120	;'x'
  1007  00FE20  69                 	db	105	;'i'
  1008  00FE21  6D                 	db	109	;'m'
  1009  00FE22  75                 	db	117	;'u'
  1010  00FE23  6D                 	db	109	;'m'
  1011  00FE24  20                 	db	32
  1012  00FE25  64                 	db	100	;'d'
  1013  00FE26  72                 	db	114	;'r'
  1014  00FE27  61                 	db	97	;'a'
  1015  00FE28  77                 	db	119	;'w'
  1016  00FE29  65                 	db	101	;'e'
  1017  00FE2A  72                 	db	114	;'r'
  1018  00FE2B  73                 	db	115	;'s'
  1019  00FE2C  00                 	db	0
  1020  00FE2D                     STR_84:
  1021  00FE2D  52                 	db	82	;'R'
  1022  00FE2E  65                 	db	101	;'e'
  1023  00FE2F  73                 	db	115	;'s'
  1024  00FE30  65                 	db	101	;'e'
  1025  00FE31  72                 	db	114	;'r'
  1026  00FE32  76                 	db	118	;'v'
  1027  00FE33  6F                 	db	111	;'o'
  1028  00FE34  69                 	db	105	;'i'
  1029  00FE35  72                 	db	114	;'r'
  1030  00FE36  20                 	db	32
  1031  00FE37  43                 	db	67	;'C'
  1032  00FE38  6F                 	db	111	;'o'
  1033  00FE39  75                 	db	117	;'u'
  1034  00FE3A  6E                 	db	110	;'n'
  1035  00FE3B  74                 	db	116	;'t'
  1036  00FE3C  00                 	db	0
  1037  00FE3D                     STR_9:
  1038  00FE3D  52                 	db	82	;'R'
  1039  00FE3E  65                 	db	101	;'e'
  1040  00FE3F  61                 	db	97	;'a'
  1041  00FE40  64                 	db	100	;'d'
  1042  00FE41  20                 	db	32
  1043  00FE42  41                 	db	65	;'A'
  1044  00FE43  67                 	db	103	;'g'
  1045  00FE44  61                 	db	97	;'a'
  1046  00FE45  69                 	db	105	;'i'
  1047  00FE46  6E                 	db	110	;'n'
  1048  00FE47  3A                 	db	58	;':'
  1049  00FE48  20                 	db	32
  1050  00FE49  32                 	db	50	;'2'
  1051  00FE4A  20                 	db	32
  1052  00FE4B  00                 	db	0
  1053  00FE4C                     STR_19:
  1054  00FE4C  59                 	db	89	;'Y'
  1055  00FE4D  65                 	db	101	;'e'
  1056  00FE4E  73                 	db	115	;'s'
  1057  00FE4F  3A                 	db	58	;':'
  1058  00FE50  20                 	db	32
  1059  00FE51  31                 	db	49	;'1'
  1060  00FE52  20                 	db	32
  1061  00FE53  20                 	db	32
  1062  00FE54  20                 	db	32
  1063  00FE55  4E                 	db	78	;'N'
  1064  00FE56  6F                 	db	111	;'o'
  1065  00FE57  3A                 	db	58	;':'
  1066  00FE58  20                 	db	32
  1067  00FE59  32                 	db	50	;'2'
  1068  00FE5A  00                 	db	0
  1069  00FE5B                     STR_21:
  1070  00FE5B  55                 	db	85	;'U'
  1071  00FE5C  6E                 	db	110	;'n'
  1072  00FE5D  6C                 	db	108	;'l'
  1073  00FE5E  6F                 	db	111	;'o'
  1074  00FE5F  61                 	db	97	;'a'
  1075  00FE60  64                 	db	100	;'d'
  1076  00FE61  20                 	db	32
  1077  00FE62  52                 	db	82	;'R'
  1078  00FE63  65                 	db	101	;'e'
  1079  00FE64  73                 	db	115	;'s'
  1080  00FE65  74                 	db	116	;'t'
  1081  00FE66  3A                 	db	58	;':'
  1082  00FE67  20                 	db	32
  1083  00FE68  33                 	db	51	;'3'
  1084  00FE69  00                 	db	0
  1085  00FE6A                     STR_57:
  1086  00FE6A  53                 	db	83	;'S'
  1087  00FE6B  74                 	db	116	;'t'
  1088  00FE6C  61                 	db	97	;'a'
  1089  00FE6D  6E                 	db	110	;'n'
  1090  00FE6E  64                 	db	100	;'d'
  1091  00FE6F  62                 	db	98	;'b'
  1092  00FE70  79                 	db	121	;'y'
  1093  00FE71  20                 	db	32
  1094  00FE72  53                 	db	83	;'S'
  1095  00FE73  63                 	db	99	;'c'
  1096  00FE74  72                 	db	114	;'r'
  1097  00FE75  65                 	db	101	;'e'
  1098  00FE76  65                 	db	101	;'e'
  1099  00FE77  6E                 	db	110	;'n'
  1100  00FE78  00                 	db	0
  1101  00FE79                     STR_17:
  1102  00FE79  4D                 	db	77	;'M'
  1103  00FE7A  6F                 	db	111	;'o'
  1104  00FE7B  64                 	db	100	;'d'
  1105  00FE7C  65                 	db	101	;'e'
  1106  00FE7D  20                 	db	32
  1107  00FE7E  53                 	db	83	;'S'
  1108  00FE7F  65                 	db	101	;'e'
  1109  00FE80  6C                 	db	108	;'l'
  1110  00FE81  65                 	db	101	;'e'
  1111  00FE82  63                 	db	99	;'c'
  1112  00FE83  74                 	db	116	;'t'
  1113  00FE84  69                 	db	105	;'i'
  1114  00FE85  6F                 	db	111	;'o'
  1115  00FE86  6E                 	db	110	;'n'
  1116  00FE87  00                 	db	0
  1117  00FE88                     STR_47:
  1118  00FE88  49                 	db	73	;'I'
  1119  00FE89  6E                 	db	110	;'n'
  1120  00FE8A  76                 	db	118	;'v'
  1121  00FE8B  61                 	db	97	;'a'
  1122  00FE8C  6C                 	db	108	;'l'
  1123  00FE8D  69                 	db	105	;'i'
  1124  00FE8E  64                 	db	100	;'d'
  1125  00FE8F  20                 	db	32
  1126  00FE90  49                 	db	73	;'I'
  1127  00FE91  6E                 	db	110	;'n'
  1128  00FE92  70                 	db	112	;'p'
  1129  00FE93  75                 	db	117	;'u'
  1130  00FE94  74                 	db	116	;'t'
  1131  00FE95  73                 	db	115	;'s'
  1132  00FE96  00                 	db	0
  1133  00FE97                     STR_37:
  1134  00FE97  56                 	db	86	;'V'
  1135  00FE98  69                 	db	105	;'i'
  1136  00FE99  65                 	db	101	;'e'
  1137  00FE9A  77                 	db	119	;'w'
  1138  00FE9B  20                 	db	32
  1139  00FE9C  53                 	db	83	;'S'
  1140  00FE9D  75                 	db	117	;'u'
  1141  00FE9E  6D                 	db	109	;'m'
  1142  00FE9F  6D                 	db	109	;'m'
  1143  00FEA0  61                 	db	97	;'a'
  1144  00FEA1  72                 	db	114	;'r'
  1145  00FEA2  79                 	db	121	;'y'
  1146  00FEA3  3A                 	db	58	;':'
  1147  00FEA4  00                 	db	0
  1148  00FEA5                     STR_63:
  1149  00FEA5  76                 	db	118	;'v'
  1150  00FEA6  69                 	db	105	;'i'
  1151  00FEA7  65                 	db	101	;'e'
  1152  00FEA8  77                 	db	119	;'w'
  1153  00FEA9  20                 	db	32
  1154  00FEAA  72                 	db	114	;'r'
  1155  00FEAB  75                 	db	117	;'u'
  1156  00FEAC  6E                 	db	110	;'n'
  1157  00FEAD  20                 	db	32
  1158  00FEAE  64                 	db	100	;'d'
  1159  00FEAF  61                 	db	97	;'a'
  1160  00FEB0  74                 	db	116	;'t'
  1161  00FEB1  61                 	db	97	;'a'
  1162  00FEB2  00                 	db	0
  1163  00FEB3                     STR_58:
  1164  00FEB3  52                 	db	82	;'R'
  1165  00FEB4  75                 	db	117	;'u'
  1166  00FEB5  6E                 	db	110	;'n'
  1167  00FEB6  20                 	db	32
  1168  00FEB7  53                 	db	83	;'S'
  1169  00FEB8  65                 	db	101	;'e'
  1170  00FEB9  6C                 	db	108	;'l'
  1171  00FEBA  65                 	db	101	;'e'
  1172  00FEBB  63                 	db	99	;'c'
  1173  00FEBC  74                 	db	116	;'t'
  1174  00FEBD  69                 	db	105	;'i'
  1175  00FEBE  6F                 	db	111	;'o'
  1176  00FEBF  6E                 	db	110	;'n'
  1177  00FEC0  00                 	db	0
  1178  00FEC1                     STR_10:
  1179  00FEC1  49                 	db	73	;'I'
  1180  00FEC2  6E                 	db	110	;'n'
  1181  00FEC3  76                 	db	118	;'v'
  1182  00FEC4  61                 	db	97	;'a'
  1183  00FEC5  6C                 	db	108	;'l'
  1184  00FEC6  69                 	db	105	;'i'
  1185  00FEC7  64                 	db	100	;'d'
  1186  00FEC8  20                 	db	32
  1187  00FEC9  49                 	db	73	;'I'
  1188  00FECA  6E                 	db	110	;'n'
  1189  00FECB  70                 	db	112	;'p'
  1190  00FECC  75                 	db	117	;'u'
  1191  00FECD  74                 	db	116	;'t'
  1192  00FECE  00                 	db	0
  1193  00FECF                     STR_55:
  1194  00FECF  44                 	db	68	;'D'
  1195  00FED0  61                 	db	97	;'a'
  1196  00FED1  74                 	db	116	;'t'
  1197  00FED2  65                 	db	101	;'e'
  1198  00FED3  2F                 	db	47
  1199  00FED4  54                 	db	84	;'T'
  1200  00FED5  69                 	db	105	;'i'
  1201  00FED6  6D                 	db	109	;'m'
  1202  00FED7  65                 	db	101	;'e'
  1203  00FED8  3A                 	db	58	;':'
  1204  00FED9  20                 	db	32
  1205  00FEDA  44                 	db	68	;'D'
  1206  00FEDB  00                 	db	0
  1207  00FEDC                     STR_44:
  1208  00FEDC  49                 	db	73	;'I'
  1209  00FEDD  6E                 	db	110	;'n'
  1210  00FEDE  76                 	db	118	;'v'
  1211  00FEDF  61                 	db	97	;'a'
  1212  00FEE0  6C                 	db	108	;'l'
  1213  00FEE1  69                 	db	105	;'i'
  1214  00FEE2  64                 	db	100	;'d'
  1215  00FEE3  20                 	db	32
  1216  00FEE4  44                 	db	68	;'D'
  1217  00FEE5  69                 	db	105	;'i'
  1218  00FEE6  65                 	db	101	;'e'
  1219  00FEE7  74                 	db	116	;'t'
  1220  00FEE8  00                 	db	0
  1221  00FEE9                     STR_27:
  1222  00FEE9  50                 	db	80	;'P'
  1223  00FEEA  72                 	db	114	;'r'
  1224  00FEEB  6F                 	db	111	;'o'
  1225  00FEEC  74                 	db	116	;'t'
  1226  00FEED  72                 	db	114	;'r'
  1227  00FEEE  61                 	db	97	;'a'
  1228  00FEEF  63                 	db	99	;'c'
  1229  00FEF0  74                 	db	116	;'t'
  1230  00FEF1  3A                 	db	58	;':'
  1231  00FEF2  20                 	db	32
  1232  00FEF3  32                 	db	50	;'2'
  1233  00FEF4  00                 	db	0
  1234  00FEF5                     STR_28:
  1235  00FEF5  55                 	db	85	;'U'
  1236  00FEF6  6E                 	db	110	;'n'
  1237  00FEF7  6C                 	db	108	;'l'
  1238  00FEF8  6F                 	db	111	;'o'
  1239  00FEF9  61                 	db	97	;'a'
  1240  00FEFA  64                 	db	100	;'d'
  1241  00FEFB  20                 	db	32
  1242  00FEFC  46                 	db	70	;'F'
  1243  00FEFD  6F                 	db	111	;'o'
  1244  00FEFE  6F                 	db	111	;'o'
  1245  00FEFF  64                 	db	100	;'d'
  1246  00FF00  00                 	db	0
  1247  00FF01                     STR_16:
  1248  00FF01  50                 	db	80	;'P'
  1249  00FF02  72                 	db	114	;'r'
  1250  00FF03  65                 	db	101	;'e'
  1251  00FF04  73                 	db	115	;'s'
  1252  00FF05  73                 	db	115	;'s'
  1253  00FF06  20                 	db	32
  1254  00FF07  42                 	db	66	;'B'
  1255  00FF08  20                 	db	32
  1256  00FF09  66                 	db	102	;'f'
  1257  00FF0A  6F                 	db	111	;'o'
  1258  00FF0B  72                 	db	114	;'r'
  1259  00FF0C  00                 	db	0
  1260  00FF0D                     STR_34:
  1261  00FF0D  69                 	db	105	;'i'
  1262  00FF0E  6E                 	db	110	;'n'
  1263  00FF0F  20                 	db	32
  1264  00FF10  70                 	db	112	;'p'
  1265  00FF11  72                 	db	114	;'r'
  1266  00FF12  6F                 	db	111	;'o'
  1267  00FF13  67                 	db	103	;'g'
  1268  00FF14  72                 	db	114	;'r'
  1269  00FF15  65                 	db	101	;'e'
  1270  00FF16  73                 	db	115	;'s'
  1271  00FF17  73                 	db	115	;'s'
  1272  00FF18  00                 	db	0
  1273  00FF19                     STR_1:
  1274  00FF19  42                 	db	66	;'B'
  1275  00FF1A  6F                 	db	111	;'o'
  1276  00FF1B  6F                 	db	111	;'o'
  1277  00FF1C  74                 	db	116	;'t'
  1278  00FF1D  69                 	db	105	;'i'
  1279  00FF1E  6E                 	db	110	;'n'
  1280  00FF1F  67                 	db	103	;'g'
  1281  00FF20  2E                 	db	46
  1282  00FF21  2E                 	db	46
  1283  00FF22  2E                 	db	46
  1284  00FF23  00                 	db	0
  1285  00FF24                     STR_12:
  1286  00FF24  4F                 	db	79	;'O'
  1287  00FF25  70                 	db	112	;'p'
  1288  00FF26  65                 	db	101	;'e'
  1289  00FF27  72                 	db	114	;'r'
  1290  00FF28  61                 	db	97	;'a'
  1291  00FF29  74                 	db	116	;'t'
  1292  00FF2A  65                 	db	101	;'e'
  1293  00FF2B  3A                 	db	58	;':'
  1294  00FF2C  20                 	db	32
  1295  00FF2D  31                 	db	49	;'1'
  1296  00FF2E  00                 	db	0
  1297  00FF2F                     STR_26:
  1298  00FF2F  52                 	db	82	;'R'
  1299  00FF30  65                 	db	101	;'e'
  1300  00FF31  74                 	db	116	;'t'
  1301  00FF32  72                 	db	114	;'r'
  1302  00FF33  61                 	db	97	;'a'
  1303  00FF34  63                 	db	99	;'c'
  1304  00FF35  74                 	db	116	;'t'
  1305  00FF36  3A                 	db	58	;':'
  1306  00FF37  20                 	db	32
  1307  00FF38  31                 	db	49	;'1'
  1308  00FF39  00                 	db	0
  1309  00FF3A                     STR_13:
  1310  00FF3A  53                 	db	83	;'S'
  1311  00FF3B  74                 	db	116	;'t'
  1312  00FF3C  61                 	db	97	;'a'
  1313  00FF3D  6E                 	db	110	;'n'
  1314  00FF3E  64                 	db	100	;'d'
  1315  00FF3F  62                 	db	98	;'b'
  1316  00FF40  79                 	db	121	;'y'
  1317  00FF41  3A                 	db	58	;':'
  1318  00FF42  20                 	db	32
  1319  00FF43  32                 	db	50	;'2'
  1320  00FF44  00                 	db	0
  1321  00FF45                     STR_64:
  1322  00FF45  44                 	db	68	;'D'
  1323  00FF46  72                 	db	114	;'r'
  1324  00FF47  61                 	db	97	;'a'
  1325  00FF48  77                 	db	119	;'w'
  1326  00FF49  65                 	db	101	;'e'
  1327  00FF4A  72                 	db	114	;'r'
  1328  00FF4B  3A                 	db	58	;':'
  1329  00FF4C  20                 	db	32
  1330  00FF4D  25                 	db	37
  1331  00FF4E  64                 	db	100	;'d'
  1332  00FF4F  00                 	db	0
  1333  00FF50                     STR_62:
  1334  00FF50  50                 	db	80	;'P'
  1335  00FF51  72                 	db	114	;'r'
  1336  00FF52  65                 	db	101	;'e'
  1337  00FF53  73                 	db	115	;'s'
  1338  00FF54  73                 	db	115	;'s'
  1339  00FF55  20                 	db	32
  1340  00FF56  2A                 	db	42
  1341  00FF57  20                 	db	32
  1342  00FF58  74                 	db	116	;'t'
  1343  00FF59  6F                 	db	111	;'o'
  1344  00FF5A  00                 	db	0
  1345  00FF5B                     STR_43:
  1346  00FF5B  44                 	db	68	;'D'
  1347  00FF5C  25                 	db	37
  1348  00FF5D  64                 	db	100	;'d'
  1349  00FF5E  20                 	db	32
  1350  00FF5F  44                 	db	68	;'D'
  1351  00FF60  69                 	db	105	;'i'
  1352  00FF61  65                 	db	101	;'e'
  1353  00FF62  74                 	db	116	;'t'
  1354  00FF63  3A                 	db	58	;':'
  1355  00FF64  00                 	db	0
  1356  00FF65                     STR_23:
  1357  00FF65  77                 	db	119	;'w'
  1358  00FF66  68                 	db	104	;'h'
  1359  00FF67  65                 	db	101	;'e'
  1360  00FF68  6E                 	db	110	;'n'
  1361  00FF69  20                 	db	32
  1362  00FF6A  64                 	db	100	;'d'
  1363  00FF6B  6F                 	db	111	;'o'
  1364  00FF6C  6E                 	db	110	;'n'
  1365  00FF6D  65                 	db	101	;'e'
  1366  00FF6E  00                 	db	0
  1367  00FF6F                     STR_33:
  1368  00FF6F  50                 	db	80	;'P'
  1369  00FF70  61                 	db	97	;'a'
  1370  00FF71  63                 	db	99	;'c'
  1371  00FF72  6B                 	db	107	;'k'
  1372  00FF73  61                 	db	97	;'a'
  1373  00FF74  67                 	db	103	;'g'
  1374  00FF75  69                 	db	105	;'i'
  1375  00FF76  6E                 	db	110	;'n'
  1376  00FF77  67                 	db	103	;'g'
  1377  00FF78  00                 	db	0
  1378  00FF79                     STR_46:
  1379  00FF79  50                 	db	80	;'P'
  1380  00FF7A  69                 	db	105	;'i'
  1381  00FF7B  65                 	db	101	;'e'
  1382  00FF7C  63                 	db	99	;'c'
  1383  00FF7D  65                 	db	101	;'e'
  1384  00FF7E  73                 	db	115	;'s'
  1385  00FF7F  3A                 	db	58	;':'
  1386  00FF80  20                 	db	32
  1387  00FF81  00                 	db	0
  1388  00FF82                     STR_24:
  1389  00FF82  52                 	db	82	;'R'
  1390  00FF83  61                 	db	97	;'a'
  1391  00FF84  69                 	db	105	;'i'
  1392  00FF85  73                 	db	115	;'s'
  1393  00FF86  65                 	db	101	;'e'
  1394  00FF87  3A                 	db	58	;':'
  1395  00FF88  20                 	db	32
  1396  00FF89  41                 	db	65	;'A'
  1397  00FF8A  00                 	db	0
  1398  00FF8B                     STR_25:
  1399  00FF8B  4C                 	db	76	;'L'
  1400  00FF8C  6F                 	db	111	;'o'
  1401  00FF8D  77                 	db	119	;'w'
  1402  00FF8E  65                 	db	101	;'e'
  1403  00FF8F  72                 	db	114	;'r'
  1404  00FF90  3A                 	db	58	;':'
  1405  00FF91  20                 	db	32
  1406  00FF92  42                 	db	66	;'B'
  1407  00FF93  00                 	db	0
  1408  00FF94                     STR_82:
  1409  00FF94  52                 	db	82	;'R'
  1410  00FF95  75                 	db	117	;'u'
  1411  00FF96  6E                 	db	110	;'n'
  1412  00FF97  20                 	db	32
  1413  00FF98  54                 	db	84	;'T'
  1414  00FF99  69                 	db	105	;'i'
  1415  00FF9A  6D                 	db	109	;'m'
  1416  00FF9B  65                 	db	101	;'e'
  1417  00FF9C  00                 	db	0
  1418  00FF9D                     STR_36:
  1419  00FF9D  43                 	db	67	;'C'
  1420  00FF9E  6F                 	db	111	;'o'
  1421  00FF9F  6D                 	db	109	;'m'
  1422  00FFA0  70                 	db	112	;'p'
  1423  00FFA1  6C                 	db	108	;'l'
  1424  00FFA2  65                 	db	101	;'e'
  1425  00FFA3  74                 	db	116	;'t'
  1426  00FFA4  65                 	db	101	;'e'
  1427  00FFA5  00                 	db	0
  1428  00FFA6                     STR_22:
  1429  00FFA6  50                 	db	80	;'P'
  1430  00FFA7  72                 	db	114	;'r'
  1431  00FFA8  65                 	db	101	;'e'
  1432  00FFA9  73                 	db	115	;'s'
  1433  00FFAA  73                 	db	115	;'s'
  1434  00FFAB  20                 	db	32
  1435  00FFAC  44                 	db	68	;'D'
  1436  00FFAD  00                 	db	0
  1437  00FFAE                     STR_127:
  1438  00FFAE  28                 	db	40
  1439  00FFAF  6E                 	db	110	;'n'
  1440  00FFB0  75                 	db	117	;'u'
  1441  00FFB1  6C                 	db	108	;'l'
  1442  00FFB2  6C                 	db	108	;'l'
  1443  00FFB3  29                 	db	41
  1444  00FFB4  00                 	db	0
  1445  00FFB5                     STR_39:
  1446  00FFB5  52                 	db	82	;'R'
  1447  00FFB6  65                 	db	101	;'e'
  1448  00FFB7  73                 	db	115	;'s'
  1449  00FFB8  65                 	db	101	;'e'
  1450  00FFB9  74                 	db	116	;'t'
  1451  00FFBA  3A                 	db	58	;':'
  1452  00FFBB  00                 	db	0
  1453  00FFBC                     STR_2:
  1454  00FFBC  52                 	db	82	;'R'
  1455  00FFBD  65                 	db	101	;'e'
  1456  00FFBE  61                 	db	97	;'a'
  1457  00FFBF  64                 	db	100	;'d'
  1458  00FFC0  79                 	db	121	;'y'
  1459  00FFC1  00                 	db	0
  1460  00FFC2                     STR_49:
  1461  00FFC2  55                 	db	85	;'U'
  1462  00FFC3  73                 	db	115	;'s'
  1463  00FFC4  65                 	db	101	;'e'
  1464  00FFC5  64                 	db	100	;'d'
  1465  00FFC6  00                 	db	0
  1466  00FFC7                     STR_52:
  1467  00FFC7  75                 	db	117	;'u'
  1468  00FFC8  73                 	db	115	;'s'
  1469  00FFC9  65                 	db	101	;'e'
  1470  00FFCA  64                 	db	100	;'d'
  1471  00FFCB  00                 	db	0
  1472  00FFCC  46                 	db	70	;'F'
  1473  00FFCD  45                 	db	69	;'E'
  1474  00FFCE  42                 	db	66	;'B'
  1475  00FFCF  00                 	db	0
  1476  00FFD0  44                 	db	68	;'D'
  1477  00FFD1  45                 	db	69	;'E'
  1478  00FFD2  43                 	db	67	;'C'
  1479  00FFD3  00                 	db	0
  1480  00FFD4  41                 	db	65	;'A'
  1481  00FFD5  55                 	db	85	;'U'
  1482  00FFD6  47                 	db	71	;'G'
  1483  00FFD7  00                 	db	0
  1484  00FFD8  4A                 	db	74	;'J'
  1485  00FFD9  55                 	db	85	;'U'
  1486  00FFDA  4C                 	db	76	;'L'
  1487  00FFDB  00                 	db	0
  1488  00FFDC  4A                 	db	74	;'J'
  1489  00FFDD  41                 	db	65	;'A'
  1490  00FFDE  4E                 	db	78	;'N'
  1491  00FFDF  00                 	db	0
  1492  00FFE0  4A                 	db	74	;'J'
  1493  00FFE1  55                 	db	85	;'U'
  1494  00FFE2  4E                 	db	78	;'N'
  1495  00FFE3  00                 	db	0
  1496  00FFE4  53                 	db	83	;'S'
  1497  00FFE5  45                 	db	69	;'E'
  1498  00FFE6  50                 	db	80	;'P'
  1499  00FFE7  00                 	db	0
  1500  00FFE8  4D                 	db	77	;'M'
  1501  00FFE9  41                 	db	65	;'A'
  1502  00FFEA  52                 	db	82	;'R'
  1503  00FFEB  00                 	db	0
  1504  00FFEC  41                 	db	65	;'A'
  1505  00FFED  50                 	db	80	;'P'
  1506  00FFEE  52                 	db	82	;'R'
  1507  00FFEF  00                 	db	0
  1508  00FFF0  4F                 	db	79	;'O'
  1509  00FFF1  43                 	db	67	;'C'
  1510  00FFF2  54                 	db	84	;'T'
  1511  00FFF3  00                 	db	0
  1512  00FFF4  4E                 	db	78	;'N'
  1513  00FFF5  4F                 	db	79	;'O'
  1514  00FFF6  56                 	db	86	;'V'
  1515  00FFF7  00                 	db	0
  1516  00FFF8  4D                 	db	77	;'M'
  1517  00FFF9  41                 	db	65	;'A'
  1518  00FFFA  59                 	db	89	;'Y'
  1519  00FFFB  00                 	db	0
  1520  00FFFC                     STR_11:
  1521  00FFFC  3C                 	db	60	;'<'
  1522  00FFFD  00                 	db	0
  1523  0000                     
  1524                           ; #config settings
  1525  00FFFE  00                 	db	0	; dummy byte at the end
  1526  0000                     
  1527                           	psect	cinit
  1528  00A5AC                     __pcinit:
  1529                           	opt stack 0
  1530  00A5AC                     start_initialization:
  1531                           	opt stack 0
  1532  00A5AC                     __initialization:
  1533                           	opt stack 0
  1534                           
  1535                           ; Initialize objects allocated to BANK2 (151 bytes)
  1536                           ; load TBLPTR registers with __pidataBANK2
  1537  00A5AC  0E73               	movlw	low __pidataBANK2
  1538  00A5AE  6EF6               	movwf	tblptrl,c
  1539  00A5B0  0EA8               	movlw	high __pidataBANK2
  1540  00A5B2  6EF7               	movwf	tblptrh,c
  1541  00A5B4  0E00               	movlw	low (__pidataBANK2 shr (0+16))
  1542  00A5B6  6EF8               	movwf	tblptru,c
  1543  00A5B8  EE02  F000         	lfsr	0,__pdataBANK2
  1544  00A5BC  EE10 F097          	lfsr	1,151
  1545  00A5C0                     copy_data0:
  1546  00A5C0  0009               	tblrd		*+
  1547  00A5C2  CFF5 FFEE          	movff	tablat,postinc0
  1548  00A5C6  50E5               	movf	postdec1,w,c
  1549  00A5C8  50E1               	movf	fsr1l,w,c
  1550  00A5CA  E1FA               	bnz	copy_data0
  1551                           
  1552                           ; Initialize objects allocated to COMRAM (1 bytes)
  1553                           ; load TBLPTR registers with __pidataCOMRAM
  1554  00A5CC  0E72               	movlw	low __pidataCOMRAM
  1555  00A5CE  6EF6               	movwf	tblptrl,c
  1556  00A5D0  0EA8               	movlw	high __pidataCOMRAM
  1557  00A5D2  6EF7               	movwf	tblptrh,c
  1558  00A5D4  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
  1559  00A5D6  6EF8               	movwf	tblptru,c
  1560  00A5D8  0009               	tblrd		*+	;fetch initializer
  1561  00A5DA  CFF5 F07F          	movff	tablat,__pdataCOMRAM
  1562                           
  1563                           ; Clear objects allocated to BANK4 (224 bytes)
  1564  00A5DE  EE04  F000         	lfsr	0,__pbssBANK4
  1565  00A5E2  0EE0               	movlw	224
  1566  00A5E4                     clear_0:
  1567  00A5E4  6AEE               	clrf	postinc0,c
  1568  00A5E6  06E8               	decf	wreg,f,c
  1569  00A5E8  E1FD               	bnz	clear_0
  1570                           
  1571                           ; Clear objects allocated to BANK3 (224 bytes)
  1572  00A5EA  EE03  F000         	lfsr	0,__pbssBANK3
  1573  00A5EE  0EE0               	movlw	224
  1574  00A5F0                     clear_1:
  1575  00A5F0  6AEE               	clrf	postinc0,c
  1576  00A5F2  06E8               	decf	wreg,f,c
  1577  00A5F4  E1FD               	bnz	clear_1
  1578                           
  1579                           ; Clear objects allocated to BANK2 (80 bytes)
  1580  00A5F6  EE02  F097         	lfsr	0,__pbssBANK2
  1581  00A5FA  0E50               	movlw	80
  1582  00A5FC                     clear_2:
  1583  00A5FC  6AEE               	clrf	postinc0,c
  1584  00A5FE  06E8               	decf	wreg,f,c
  1585  00A600  E1FD               	bnz	clear_2
  1586  00A602                     end_of_initialization:
  1587                           	opt stack 0
  1588  00A602                     __end_of__initialization:
  1589                           	opt stack 0
  1590  00A602  0100               	movlb	0
  1591  00A604  EF5E  F066         	goto	_main	;jump to C main() function
  1592                           tblptru	equ	0xFF8
  1593                           tblptrh	equ	0xFF7
  1594                           tblptrl	equ	0xFF6
  1595                           tablat	equ	0xFF5
  1596                           postinc0	equ	0xFEE
  1597                           wreg	equ	0xFE8
  1598                           postdec1	equ	0xFE5
  1599                           fsr1l	equ	0xFE1
  1600                           
  1601                           	psect	dataCOMRAM
  1602  00007F                     __pdataCOMRAM:
  1603                           	opt stack 0
  1604  00007F                     _data:
  1605                           	opt stack 0
  1606  00007F                     	ds	1
  1607                           tblptru	equ	0xFF8
  1608                           tblptrh	equ	0xFF7
  1609                           tblptrl	equ	0xFF6
  1610                           tablat	equ	0xFF5
  1611                           postinc0	equ	0xFEE
  1612                           wreg	equ	0xFE8
  1613                           postdec1	equ	0xFE5
  1614                           fsr1l	equ	0xFE1
  1615                           
  1616                           	psect	bssBANK2
  1617  000297                     __pbssBANK2:
  1618                           	opt stack 0
  1619  000297                     sensor_row_check@F3197:
  1620                           	opt stack 0
  1621  000297                     	ds	8
  1622  00029F                     main@F3250:
  1623                           	opt stack 0
  1624  00029F                     	ds	8
  1625  0002A7                     main@F3212:
  1626                           	opt stack 0
  1627  0002A7                     	ds	8
  1628  0002AF                     _marked_drawers:
  1629                           	opt stack 0
  1630  0002AF                     	ds	8
  1631  0002B7                     _time:
  1632                           	opt stack 0
  1633  0002B7                     	ds	7
  1634  0002BE                     _reservoir_count:
  1635                           	opt stack 0
  1636  0002BE                     	ds	6
  1637  0002C4                     _total_difference:
  1638                           	opt stack 0
  1639  0002C4                     	ds	4
  1640  0002C8                     _total_final_time:
  1641                           	opt stack 0
  1642  0002C8                     	ds	4
  1643  0002CC                     _total_init_time:
  1644                           	opt stack 0
  1645  0002CC                     	ds	4
  1646  0002D0                     _p_count:
  1647                           	opt stack 0
  1648  0002D0                     	ds	2
  1649  0002D2                     _run_time_seconds:
  1650                           	opt stack 0
  1651  0002D2                     	ds	2
  1652  0002D4                     _run_time_minutes:
  1653                           	opt stack 0
  1654  0002D4                     	ds	2
  1655  0002D6                     _LCDinterruptState:
  1656                           	opt stack 0
  1657  0002D6                     	ds	1
  1658  0002D7                     _UARTinterruptState:
  1659                           	opt stack 0
  1660  0002D7                     	ds	1
  1661  0002D8                     _uart:
  1662                           	opt stack 0
  1663  0002D8                     	ds	12
  1664  0002E4                     _curr_height:
  1665                           	opt stack 0
  1666  0002E4                     	ds	2
  1667  0002E6                     _man_cont_data:
  1668                           	opt stack 0
  1669  0002E6                     	ds	1
  1670                           tblptru	equ	0xFF8
  1671                           tblptrh	equ	0xFF7
  1672                           tblptrl	equ	0xFF6
  1673                           tablat	equ	0xFF5
  1674                           postinc0	equ	0xFEE
  1675                           wreg	equ	0xFE8
  1676                           postdec1	equ	0xFE5
  1677                           fsr1l	equ	0xFE1
  1678                           
  1679                           	psect	dataBANK2
  1680  000200                     __pdataBANK2:
  1681                           	opt stack 0
  1682  000200                     main@F3248:
  1683                           	opt stack 0
  1684  000200                     	ds	8
  1685  000208                     main@F3246:
  1686                           	opt stack 0
  1687  000208                     	ds	8
  1688  000210                     main@F3244:
  1689                           	opt stack 0
  1690  000210                     	ds	8
  1691  000218                     main@F3242:
  1692                           	opt stack 0
  1693  000218                     	ds	8
  1694  000220                     main@F3240:
  1695                           	opt stack 0
  1696  000220                     	ds	8
  1697  000228                     main@F3238:
  1698                           	opt stack 0
  1699  000228                     	ds	8
  1700  000230                     main@F3236:
  1701                           	opt stack 0
  1702  000230                     	ds	8
  1703  000238                     main@F3234:
  1704                           	opt stack 0
  1705  000238                     	ds	8
  1706  000240                     main@F3232:
  1707                           	opt stack 0
  1708  000240                     	ds	8
  1709  000248                     main@F3230:
  1710                           	opt stack 0
  1711  000248                     	ds	8
  1712  000250                     main@F3228:
  1713                           	opt stack 0
  1714  000250                     	ds	8
  1715  000258                     main@F3226:
  1716                           	opt stack 0
  1717  000258                     	ds	8
  1718  000260                     main@F3224:
  1719                           	opt stack 0
  1720  000260                     	ds	8
  1721  000268                     main@F3222:
  1722                           	opt stack 0
  1723  000268                     	ds	8
  1724  000270                     main@F3220:
  1725                           	opt stack 0
  1726  000270                     	ds	8
  1727  000278                     main@F3218:
  1728                           	opt stack 0
  1729  000278                     	ds	8
  1730  000280                     main@F3216:
  1731                           	opt stack 0
  1732  000280                     	ds	8
  1733  000288                     main@F3214:
  1734                           	opt stack 0
  1735  000288                     	ds	8
  1736  000290                     printRTC@F3193:
  1737                           	opt stack 0
  1738  000290                     	ds	4
  1739  000294                     _UART:
  1740                           	opt stack 0
  1741  000294                     	ds	2
  1742  000296                     _data_RX:
  1743                           	opt stack 0
  1744  000296                     	ds	1
  1745                           tblptru	equ	0xFF8
  1746                           tblptrh	equ	0xFF7
  1747                           tblptrl	equ	0xFF6
  1748                           tablat	equ	0xFF5
  1749                           postinc0	equ	0xFEE
  1750                           wreg	equ	0xFE8
  1751                           postdec1	equ	0xFE5
  1752                           fsr1l	equ	0xFE1
  1753                           
  1754                           	psect	bssBANK3
  1755  000300                     __pbssBANK3:
  1756                           	opt stack 0
  1757  000300                     _changed_mat:
  1758                           	opt stack 0
  1759  000300                     	ds	96
  1760  000360                     _EEPROM_mat:
  1761                           	opt stack 0
  1762  000360                     	ds	64
  1763  0003A0                     operation_summary@F3203:
  1764                           	opt stack 0
  1765  0003A0                     	ds	16
  1766  0003B0                     array_transition@F3190:
  1767                           	opt stack 0
  1768  0003B0                     	ds	16
  1769  0003C0                     main@F3254:
  1770                           	opt stack 0
  1771  0003C0                     	ds	16
  1772  0003D0                     _arr_dataRX:
  1773                           	opt stack 0
  1774  0003D0                     	ds	16
  1775                           tblptru	equ	0xFF8
  1776                           tblptrh	equ	0xFF7
  1777                           tblptrl	equ	0xFF6
  1778                           tablat	equ	0xFF5
  1779                           postinc0	equ	0xFEE
  1780                           wreg	equ	0xFE8
  1781                           postdec1	equ	0xFE5
  1782                           fsr1l	equ	0xFE1
  1783                           
  1784                           	psect	bssBANK4
  1785  000400                     __pbssBANK4:
  1786                           	opt stack 0
  1787  000400                     main@F3210:
  1788                           	opt stack 0
  1789  000400                     	ds	128
  1790  000480                     main@F3207:
  1791                           	opt stack 0
  1792  000480                     	ds	96
  1793                           tblptru	equ	0xFF8
  1794                           tblptrh	equ	0xFF7
  1795                           tblptrl	equ	0xFF6
  1796                           tablat	equ	0xFF5
  1797                           postinc0	equ	0xFEE
  1798                           wreg	equ	0xFE8
  1799                           postdec1	equ	0xFE5
  1800                           fsr1l	equ	0xFE1
  1801                           
  1802                           	psect	cstackBANK2
  1803  0002E7                     __pcstackBANK2:
  1804                           	opt stack 0
  1805  0002E7                     main@row_check:
  1806                           	opt stack 0
  1807                           
  1808                           ; 8 bytes @ 0x0
  1809  0002E7                     	ds	8
  1810  0002EF                     main@k:
  1811                           	opt stack 0
  1812                           
  1813                           ; 2 bytes @ 0x8
  1814  0002EF                     	ds	2
  1815  0002F1                     main@past_run_count:
  1816                           	opt stack 0
  1817                           
  1818                           ; 2 bytes @ 0xA
  1819  0002F1                     	ds	2
  1820  0002F3                     main@temp_int:
  1821                           	opt stack 0
  1822                           
  1823                           ; 2 bytes @ 0xC
  1824  0002F3                     	ds	2
  1825  0002F5                     main@row:
  1826                           	opt stack 0
  1827                           
  1828                           ; 2 bytes @ 0xE
  1829  0002F5                     	ds	2
  1830  0002F7                     main@keypress:
  1831                           	opt stack 0
  1832                           
  1833                           ; 1 bytes @ 0x10
  1834  0002F7                     	ds	1
  1835  0002F8                     main@EEPROM_ind:
  1836                           	opt stack 0
  1837                           
  1838                           ; 1 bytes @ 0x11
  1839  0002F8                     	ds	1
  1840  0002F9                     main@j:
  1841                           	opt stack 0
  1842                           
  1843                           ; 2 bytes @ 0x12
  1844  0002F9                     	ds	2
  1845  0002FB                     main@temp:
  1846                           	opt stack 0
  1847                           
  1848                           ; 1 bytes @ 0x14
  1849  0002FB                     	ds	1
  1850  0002FC                     main@i:
  1851                           	opt stack 0
  1852                           
  1853                           ; 2 bytes @ 0x15
  1854  0002FC                     	ds	2
  1855                           tblptru	equ	0xFF8
  1856                           tblptrh	equ	0xFF7
  1857                           tblptrl	equ	0xFF6
  1858                           tablat	equ	0xFF5
  1859                           postinc0	equ	0xFEE
  1860                           wreg	equ	0xFE8
  1861                           postdec1	equ	0xFE5
  1862                           fsr1l	equ	0xFE1
  1863                           
  1864                           	psect	cstackBANK1
  1865  000100                     __pcstackBANK1:
  1866                           	opt stack 0
  1867  000100                     main@diet:
  1868                           	opt stack 0
  1869                           
  1870                           ; 128 bytes @ 0x0
  1871  000100                     	ds	128
  1872  000180                     main@x:
  1873                           	opt stack 0
  1874                           
  1875                           ; 8 bytes @ 0x80
  1876  000180                     	ds	8
  1877  000188                     main@y:
  1878                           	opt stack 0
  1879                           
  1880                           ; 8 bytes @ 0x88
  1881  000188                     	ds	8
  1882  000190                     main@z:
  1883                           	opt stack 0
  1884                           
  1885                           ; 8 bytes @ 0x90
  1886  000190                     	ds	8
  1887  000198                     main@l:
  1888                           	opt stack 0
  1889                           
  1890                           ; 8 bytes @ 0x98
  1891  000198                     	ds	8
  1892  0001A0                     main@m:
  1893                           	opt stack 0
  1894                           
  1895                           ; 8 bytes @ 0xA0
  1896  0001A0                     	ds	8
  1897  0001A8                     main@n:
  1898                           	opt stack 0
  1899                           
  1900                           ; 8 bytes @ 0xA8
  1901  0001A8                     	ds	8
  1902  0001B0                     main@o:
  1903                           	opt stack 0
  1904                           
  1905                           ; 8 bytes @ 0xB0
  1906  0001B0                     	ds	8
  1907  0001B8                     main@p:
  1908                           	opt stack 0
  1909                           
  1910                           ; 8 bytes @ 0xB8
  1911  0001B8                     	ds	8
  1912  0001C0                     main@q:
  1913                           	opt stack 0
  1914                           
  1915                           ; 8 bytes @ 0xC0
  1916  0001C0                     	ds	8
  1917  0001C8                     main@r:
  1918                           	opt stack 0
  1919                           
  1920                           ; 8 bytes @ 0xC8
  1921  0001C8                     	ds	8
  1922  0001D0                     main@s:
  1923                           	opt stack 0
  1924                           
  1925                           ; 8 bytes @ 0xD0
  1926  0001D0                     	ds	8
  1927  0001D8                     main@EEPROM_print:
  1928                           	opt stack 0
  1929                           
  1930                           ; 16 bytes @ 0xD8
  1931  0001D8                     	ds	16
  1932  0001E8                     main@timer_count:
  1933                           	opt stack 0
  1934                           
  1935                           ; 2 bytes @ 0xE8
  1936  0001E8                     	ds	2
  1937  0001EA                     main@copy_EEPROM_ind:
  1938                           	opt stack 0
  1939                           
  1940                           ; 1 bytes @ 0xEA
  1941  0001EA                     	ds	1
  1942  0001EB                     main@drawer_used:
  1943                           	opt stack 0
  1944                           
  1945                           ; 2 bytes @ 0xEB
  1946  0001EB                     	ds	2
  1947  0001ED                     main@row_sum:
  1948                           	opt stack 0
  1949                           
  1950                           ; 2 bytes @ 0xED
  1951  0001ED                     	ds	2
  1952  0001EF                     main@legit_pieces:
  1953                           	opt stack 0
  1954                           
  1955                           ; 2 bytes @ 0xEF
  1956  0001EF                     	ds	2
  1957  0001F1                     main@amtR:
  1958                           	opt stack 0
  1959                           
  1960                           ; 2 bytes @ 0xF1
  1961  0001F1                     	ds	2
  1962  0001F3                     main@amtF:
  1963                           	opt stack 0
  1964                           
  1965                           ; 2 bytes @ 0xF3
  1966  0001F3                     	ds	2
  1967  0001F5                     main@amtL:
  1968                           	opt stack 0
  1969                           
  1970                           ; 2 bytes @ 0xF5
  1971  0001F5                     	ds	2
  1972  0001F7                     main@manual_unload_slide:
  1973                           	opt stack 0
  1974                           
  1975                           ; 2 bytes @ 0xF7
  1976  0001F7                     	ds	2
  1977  0001F9                     main@mode_bool:
  1978                           	opt stack 0
  1979                           
  1980                           ; 2 bytes @ 0xF9
  1981  0001F9                     	ds	2
  1982  0001FB                     main@letter:
  1983                           	opt stack 0
  1984                           
  1985                           ; 1 bytes @ 0xFB
  1986  0001FB                     	ds	1
  1987  0001FC                     main@tot_drawers:
  1988                           	opt stack 0
  1989                           
  1990                           ; 2 bytes @ 0xFC
  1991  0001FC                     	ds	2
  1992  0001FE                     main@legit_diet:
  1993                           	opt stack 0
  1994                           
  1995                           ; 2 bytes @ 0xFE
  1996  0001FE                     	ds	2
  1997                           tblptru	equ	0xFF8
  1998                           tblptrh	equ	0xFF7
  1999                           tblptrl	equ	0xFF6
  2000                           tablat	equ	0xFF5
  2001                           postinc0	equ	0xFEE
  2002                           wreg	equ	0xFE8
  2003                           postdec1	equ	0xFE5
  2004                           fsr1l	equ	0xFE1
  2005                           
  2006                           	psect	cstackBANK0
  2007  000080                     __pcstackBANK0:
  2008                           	opt stack 0
  2009  000080                     main@mat:
  2010                           	opt stack 0
  2011                           
  2012                           ; 96 bytes @ 0x0
  2013  000080                     	ds	96
  2014  0000E0                     main@e:
  2015                           	opt stack 0
  2016                           
  2017                           ; 8 bytes @ 0x60
  2018  0000E0                     	ds	8
  2019  0000E8                     main@f:
  2020                           	opt stack 0
  2021                           
  2022                           ; 8 bytes @ 0x68
  2023  0000E8                     	ds	8
  2024  0000F0                     main@g:
  2025                           	opt stack 0
  2026                           
  2027                           ; 8 bytes @ 0x70
  2028  0000F0                     	ds	8
  2029  0000F8                     main@h:
  2030                           	opt stack 0
  2031                           
  2032                           ; 8 bytes @ 0x78
  2033  0000F8                     	ds	8
  2034                           tblptru	equ	0xFF8
  2035                           tblptrh	equ	0xFF7
  2036                           tblptrl	equ	0xFF6
  2037                           tablat	equ	0xFF5
  2038                           postinc0	equ	0xFEE
  2039                           wreg	equ	0xFE8
  2040                           postdec1	equ	0xFE5
  2041                           fsr1l	equ	0xFE1
  2042                           
  2043                           	psect	cstackCOMRAM
  2044  000001                     __pcstackCOMRAM:
  2045                           	opt stack 0
  2046  000001                     ??_uartReceiveBlocking:
  2047  000001                     ??_isdigit:
  2048  000001                     ??_I2C_Master_Wait:
  2049  000001                     ?_compare_arrays:
  2050                           	opt stack 0
  2051  000001                     ?___wmul:
  2052                           	opt stack 0
  2053  000001                     ?___lwdiv:
  2054                           	opt stack 0
  2055  000001                     ?___aldiv:
  2056                           	opt stack 0
  2057  000001                     ?___lldiv:
  2058                           	opt stack 0
  2059  000001                     lcdNibble@temp:
  2060                           	opt stack 0
  2061  000001                     initTime@m:
  2062                           	opt stack 0
  2063  000001                     write_EEPROM@data:
  2064                           	opt stack 0
  2065  000001                     read_EEPROM@address:
  2066                           	opt stack 0
  2067  000001                     compare_arrays@array1:
  2068                           	opt stack 0
  2069  000001                     uartTransmitBlocking@data:
  2070                           	opt stack 0
  2071  000001                     ___wmul@multiplier:
  2072                           	opt stack 0
  2073  000001                     ___lwdiv@dividend:
  2074                           	opt stack 0
  2075  000001                     ___aldiv@dividend:
  2076                           	opt stack 0
  2077  000001                     ___lldiv@dividend:
  2078                           	opt stack 0
  2079                           
  2080                           ; 4 bytes @ 0x0
  2081  000001                     	ds	1
  2082  000002                     lcdNibble@data:
  2083                           	opt stack 0
  2084  000002                     initTime@h:
  2085                           	opt stack 0
  2086  000002                     I2C_Master_Read@ackBit:
  2087                           	opt stack 0
  2088  000002                     write_EEPROM@address:
  2089                           	opt stack 0
  2090  000002                     _isdigit$1786:
  2091                           	opt stack 0
  2092  000002                     I2C_Master_Write@byteToWrite:
  2093                           	opt stack 0
  2094                           
  2095                           ; 2 bytes @ 0x1
  2096  000002                     	ds	1
  2097  000003                     ??_shift_EEPROM:
  2098  000003                     ??_store_EEPROM:
  2099  000003                     lcdInst@data:
  2100                           	opt stack 0
  2101  000003                     putch@data:
  2102                           	opt stack 0
  2103  000003                     initTime@w:
  2104                           	opt stack 0
  2105  000003                     I2C_Master_Read@receivedByte:
  2106                           	opt stack 0
  2107  000003                     uartTransmitBlocking@numBytes:
  2108                           	opt stack 0
  2109  000003                     uartReceiveBlocking@temp:
  2110                           	opt stack 0
  2111  000003                     isdigit@c:
  2112                           	opt stack 0
  2113  000003                     compare_arrays@array2:
  2114                           	opt stack 0
  2115  000003                     ___wmul@multiplicand:
  2116                           	opt stack 0
  2117  000003                     ___lwdiv@divisor:
  2118                           	opt stack 0
  2119                           
  2120                           ; 2 bytes @ 0x2
  2121  000003                     	ds	1
  2122  000004                     ??_initLCD:
  2123  000004                     ??_uartTransmitBlocking:
  2124  000004                     lcd_shift_cursor@direction:
  2125                           	opt stack 0
  2126  000004                     lcd_shift_display@direction:
  2127                           	opt stack 0
  2128  000004                     initTime@DD:
  2129                           	opt stack 0
  2130  000004                     uartReceiveBlocking@numBytes:
  2131                           	opt stack 0
  2132  000004                     shift_EEPROM@val:
  2133                           	opt stack 0
  2134                           
  2135                           ; 2 bytes @ 0x3
  2136  000004                     	ds	1
  2137  000005                     lcd_shift_cursor@numChars:
  2138                           	opt stack 0
  2139  000005                     lcd_shift_display@numChars:
  2140                           	opt stack 0
  2141  000005                     initTime@MM:
  2142                           	opt stack 0
  2143  000005                     uartTransmitBlocking@numTransmits:
  2144                           	opt stack 0
  2145  000005                     uartReceiveBlocking@numReceives:
  2146                           	opt stack 0
  2147  000005                     ___wmul@product:
  2148                           	opt stack 0
  2149  000005                     ___lwdiv@quotient:
  2150                           	opt stack 0
  2151  000005                     ___aldiv@divisor:
  2152                           	opt stack 0
  2153  000005                     ___lldiv@divisor:
  2154                           	opt stack 0
  2155                           
  2156                           ; 4 bytes @ 0x4
  2157  000005                     	ds	1
  2158  000006                     lcd_shift_cursor@n:
  2159                           	opt stack 0
  2160  000006                     lcd_shift_display@n:
  2161                           	opt stack 0
  2162  000006                     initTime@YY:
  2163                           	opt stack 0
  2164  000006                     servo_slide@x:
  2165                           	opt stack 0
  2166  000006                     hook_mech@z:
  2167                           	opt stack 0
  2168  000006                     shift_EEPROM@i:
  2169                           	opt stack 0
  2170                           
  2171                           ; 2 bytes @ 0x5
  2172  000006                     	ds	1
  2173  000007                     ??_comp_EEPROM_time:
  2174  000007                     ?_sensor_row_check:
  2175                           	opt stack 0
  2176  000007                     lcd_set_cursor@y:
  2177                           	opt stack 0
  2178  000007                     initTime@s:
  2179                           	opt stack 0
  2180  000007                     ___lwdiv@counter:
  2181                           	opt stack 0
  2182  000007                     sensor_row_check@row_ind:
  2183                           	opt stack 0
  2184  000007                     load_mech@row:
  2185                           	opt stack 0
  2186  000007                     initialize@mat:
  2187                           	opt stack 0
  2188  000007                     array_transition@mat:
  2189                           	opt stack 0
  2190  000007                     store_EEPROM@j:
  2191                           	opt stack 0
  2192                           
  2193                           ; 2 bytes @ 0x6
  2194  000007                     	ds	1
  2195  000008                     ??_lcd_set_cursor:
  2196  000008                     ??_servo_slide:
  2197  000008                     ?___lwmod:
  2198                           	opt stack 0
  2199  000008                     height_mech@dy:
  2200                           	opt stack 0
  2201  000008                     ___lwmod@dividend:
  2202                           	opt stack 0
  2203                           
  2204                           ; 2 bytes @ 0x7
  2205  000008                     	ds	1
  2206  000009                     ??_array_transition:
  2207  000009                     ??_initialize:
  2208  000009                     lcd_set_cursor@i:
  2209                           	opt stack 0
  2210  000009                     ___aldiv@counter:
  2211                           	opt stack 0
  2212  000009                     sensor_row_check@count:
  2213                           	opt stack 0
  2214  000009                     load_mech@j:
  2215                           	opt stack 0
  2216  000009                     compare_arrays@i:
  2217                           	opt stack 0
  2218  000009                     store_EEPROM@i:
  2219                           	opt stack 0
  2220  000009                     ___lldiv@quotient:
  2221                           	opt stack 0
  2222                           
  2223                           ; 4 bytes @ 0x8
  2224  000009                     	ds	1
  2225  00000A                     lcd_set_cursor@x:
  2226                           	opt stack 0
  2227  00000A                     ___aldiv@sign:
  2228                           	opt stack 0
  2229  00000A                     height_mech@curr_height:
  2230                           	opt stack 0
  2231  00000A                     ___lwmod@divisor:
  2232                           	opt stack 0
  2233                           
  2234                           ; 2 bytes @ 0x9
  2235  00000A                     	ds	1
  2236  00000B                     ??_sensor_row_check:
  2237  00000B                     ??_load_mech:
  2238  00000B                     ___aldiv@quotient:
  2239                           	opt stack 0
  2240                           
  2241                           ; 4 bytes @ 0xA
  2242  00000B                     	ds	1
  2243  00000C                     ??_height_mech:
  2244  00000C                     ___lwmod@counter:
  2245                           	opt stack 0
  2246                           
  2247                           ; 1 bytes @ 0xB
  2248  00000C                     	ds	1
  2249  00000D                     ?_printf:
  2250                           	opt stack 0
  2251  00000D                     ___lldiv@counter:
  2252                           	opt stack 0
  2253  00000D                     load_mech@pieces:
  2254                           	opt stack 0
  2255  00000D                     initialize@j:
  2256                           	opt stack 0
  2257  00000D                     printf@f:
  2258                           	opt stack 0
  2259  00000D                     sensor_row_check@marked_row:
  2260                           	opt stack 0
  2261                           
  2262                           ; 8 bytes @ 0xC
  2263  00000D                     	ds	1
  2264  00000E                     I2C_Master_Init@clockFreq:
  2265                           	opt stack 0
  2266                           
  2267                           ; 4 bytes @ 0xD
  2268  00000E                     	ds	1
  2269  00000F                     load_mech@i:
  2270                           	opt stack 0
  2271  00000F                     initialize@i:
  2272                           	opt stack 0
  2273  00000F                     comp_EEPROM_time@i:
  2274                           	opt stack 0
  2275  00000F                     UART_Init@baud:
  2276                           	opt stack 0
  2277                           
  2278                           ; 4 bytes @ 0xE
  2279  00000F                     	ds	1
  2280  000010                     height_mech@lower_row_count:
  2281                           	opt stack 0
  2282                           
  2283                           ; 2 bytes @ 0xF
  2284  000010                     	ds	2
  2285  000012                     ??_I2C_Master_Init:
  2286  000012                     height_mech@dy_cpy:
  2287                           	opt stack 0
  2288                           
  2289                           ; 2 bytes @ 0x11
  2290  000012                     	ds	1
  2291  000013                     ??_UART_Init:
  2292  000013                     array_transition@d_numbers:
  2293                           	opt stack 0
  2294                           
  2295                           ; 16 bytes @ 0x12
  2296  000013                     	ds	2
  2297  000015                     sensor_row_check@drawer_bool:
  2298                           	opt stack 0
  2299                           
  2300                           ; 2 bytes @ 0x14
  2301  000015                     	ds	1
  2302  000016                     ??_loadRTC:
  2303  000016                     ??_set_total_init_time:
  2304  000016                     ??_comp_time_difference:
  2305                           
  2306                           ; 1 bytes @ 0x15
  2307  000016                     	ds	1
  2308  000017                     sensor_row_check@pieces:
  2309                           	opt stack 0
  2310  000017                     loadRTC@i:
  2311                           	opt stack 0
  2312                           
  2313                           ; 2 bytes @ 0x16
  2314  000017                     	ds	2
  2315  000019                     ??_printf:
  2316  000019                     sensor_row_check@j:
  2317                           	opt stack 0
  2318                           
  2319                           ; 2 bytes @ 0x18
  2320  000019                     	ds	2
  2321  00001B                     sensor_row_check@i:
  2322                           	opt stack 0
  2323                           
  2324                           ; 2 bytes @ 0x1A
  2325  00001B                     	ds	2
  2326  00001D                     printf@idx:
  2327                           	opt stack 0
  2328  00001D                     set_total_init_time@i:
  2329                           	opt stack 0
  2330  00001D                     comp_time_difference@i:
  2331                           	opt stack 0
  2332                           
  2333                           ; 2 bytes @ 0x1C
  2334  00001D                     	ds	1
  2335  00001E                     printf@prec:
  2336                           	opt stack 0
  2337                           
  2338                           ; 1 bytes @ 0x1D
  2339  00001E                     	ds	1
  2340  00001F                     ??_unload_reservoir:
  2341  00001F                     printf@cp:
  2342                           	opt stack 0
  2343                           
  2344                           ; 2 bytes @ 0x1E
  2345  00001F                     	ds	2
  2346  000021                     unload_reservoir@res_index:
  2347                           	opt stack 0
  2348  000021                     printf@ap:
  2349                           	opt stack 0
  2350                           
  2351                           ; 2 bytes @ 0x20
  2352  000021                     	ds	2
  2353  000023                     unload_reservoir@pill_unload:
  2354                           	opt stack 0
  2355  000023                     array_transition@k:
  2356                           	opt stack 0
  2357  000023                     printf@len:
  2358                           	opt stack 0
  2359                           
  2360                           ; 2 bytes @ 0x22
  2361  000023                     	ds	1
  2362  000024                     unload_reservoir@unload_count:
  2363                           	opt stack 0
  2364                           
  2365                           ; 2 bytes @ 0x23
  2366  000024                     	ds	1
  2367  000025                     array_transition@j:
  2368                           	opt stack 0
  2369  000025                     printf@val:
  2370                           	opt stack 0
  2371                           
  2372                           ; 2 bytes @ 0x24
  2373  000025                     	ds	1
  2374  000026                     unload_reservoir@pill:
  2375                           	opt stack 0
  2376                           
  2377                           ; 1 bytes @ 0x25
  2378  000026                     	ds	1
  2379  000027                     printf@flag:
  2380                           	opt stack 0
  2381  000027                     finalize@curr_height:
  2382                           	opt stack 0
  2383  000027                     array_transition@i:
  2384                           	opt stack 0
  2385                           
  2386                           ; 2 bytes @ 0x26
  2387  000027                     	ds	1
  2388  000028                     printf@width:
  2389                           	opt stack 0
  2390                           
  2391                           ; 2 bytes @ 0x27
  2392  000028                     	ds	1
  2393  000029                     finalize@mat:
  2394                           	opt stack 0
  2395                           
  2396                           ; 2 bytes @ 0x28
  2397  000029                     	ds	1
  2398  00002A                     printf@c:
  2399                           	opt stack 0
  2400                           
  2401                           ; 1 bytes @ 0x29
  2402  00002A                     	ds	1
  2403  00002B                     ??_operation_summary:
  2404  00002B                     ??_finalize:
  2405                           
  2406                           ; 1 bytes @ 0x2A
  2407  00002B                     	ds	2
  2408  00002D                     finalize@i:
  2409                           	opt stack 0
  2410                           
  2411                           ; 2 bytes @ 0x2C
  2412  00002D                     	ds	1
  2413  00002E                     operation_summary@keys:
  2414                           	opt stack 0
  2415                           
  2416                           ; 17 bytes @ 0x2D
  2417  00002E                     	ds	1
  2418  00002F                     finalize@j:
  2419                           	opt stack 0
  2420                           
  2421                           ; 2 bytes @ 0x2E
  2422  00002F                     	ds	2
  2423  000031                     package_food@mat:
  2424                           	opt stack 0
  2425                           
  2426                           ; 2 bytes @ 0x30
  2427  000031                     	ds	2
  2428  000033                     ??_package_food:
  2429                           
  2430                           ; 1 bytes @ 0x32
  2431  000033                     	ds	2
  2432  000035                     package_food@count:
  2433                           	opt stack 0
  2434                           
  2435                           ; 2 bytes @ 0x34
  2436  000035                     	ds	2
  2437  000037                     package_food@row_used:
  2438                           	opt stack 0
  2439                           
  2440                           ; 2 bytes @ 0x36
  2441  000037                     	ds	2
  2442  000039                     package_food@i:
  2443                           	opt stack 0
  2444                           
  2445                           ; 2 bytes @ 0x38
  2446  000039                     	ds	2
  2447  00003B                     package_food@row_ind:
  2448                           	opt stack 0
  2449                           
  2450                           ; 2 bytes @ 0x3A
  2451  00003B                     	ds	2
  2452  00003D                     package_food@j:
  2453                           	opt stack 0
  2454                           
  2455                           ; 2 bytes @ 0x3C
  2456  00003D                     	ds	2
  2457  00003F                     operation_summary@EEPROM_print:
  2458                           	opt stack 0
  2459                           
  2460                           ; 16 bytes @ 0x3E
  2461  00003F                     	ds	16
  2462  00004F                     operation_summary@temp:
  2463                           	opt stack 0
  2464                           
  2465                           ; 1 bytes @ 0x4E
  2466  00004F                     	ds	1
  2467  000050                     operation_summary@keypress:
  2468                           	opt stack 0
  2469                           
  2470                           ; 1 bytes @ 0x4F
  2471  000050                     	ds	1
  2472  000051                     operation_summary@past_run_count:
  2473                           	opt stack 0
  2474                           
  2475                           ; 2 bytes @ 0x50
  2476  000051                     	ds	2
  2477  000053                     operation_summary@i:
  2478                           	opt stack 0
  2479                           
  2480                           ; 2 bytes @ 0x52
  2481  000053                     	ds	2
  2482  000055                     operation_summary@EEPROM_ind:
  2483                           	opt stack 0
  2484                           
  2485                           ; 2 bytes @ 0x54
  2486  000055                     	ds	2
  2487  000057                     ??_main:
  2488                           
  2489                           ; 1 bytes @ 0x56
  2490  000057                     	ds	8
  2491  00005F                     main@a:
  2492                           	opt stack 0
  2493                           
  2494                           ; 8 bytes @ 0x5E
  2495  00005F                     	ds	8
  2496  000067                     main@b:
  2497                           	opt stack 0
  2498                           
  2499                           ; 8 bytes @ 0x66
  2500  000067                     	ds	8
  2501  00006F                     main@c:
  2502                           	opt stack 0
  2503                           
  2504                           ; 8 bytes @ 0x6E
  2505  00006F                     	ds	8
  2506  000077                     main@d:
  2507                           	opt stack 0
  2508                           
  2509                           ; 8 bytes @ 0x76
  2510  000077                     	ds	8
  2511                           tblptru	equ	0xFF8
  2512                           tblptrh	equ	0xFF7
  2513                           tblptrl	equ	0xFF6
  2514                           tablat	equ	0xFF5
  2515                           postinc0	equ	0xFEE
  2516                           wreg	equ	0xFE8
  2517                           postdec1	equ	0xFE5
  2518                           fsr1l	equ	0xFE1
  2519                           
  2520 ;;
  2521 ;;Main: autosize = 0, tempsize = 8, incstack = 0, save=0
  2522 ;;
  2523 ;; *************** function _main *****************
  2524 ;; Defined at:
  2525 ;;		line 29 in file "interface_main.c"
  2526 ;; Parameters:    Size  Location     Type
  2527 ;;		None
  2528 ;; Auto vars:     Size  Location     Type
  2529 ;;  diet          128    0[BANK1 ] int [4][16]
  2530 ;;  mat            96    0[BANK0 ] int [3][16]
  2531 ;;  EEPROM_print   16  216[BANK1 ] unsigned char [16]
  2532 ;;  row_check       8    0[BANK2 ] int [4]
  2533 ;;  s               8  208[BANK1 ] int [4]
  2534 ;;  r               8  200[BANK1 ] int [4]
  2535 ;;  q               8  192[BANK1 ] int [4]
  2536 ;;  p               8  184[BANK1 ] int [4]
  2537 ;;  o               8  176[BANK1 ] int [4]
  2538 ;;  n               8  168[BANK1 ] int [4]
  2539 ;;  m               8  160[BANK1 ] int [4]
  2540 ;;  l               8  152[BANK1 ] int [4]
  2541 ;;  z               8  144[BANK1 ] int [4]
  2542 ;;  y               8  136[BANK1 ] int [4]
  2543 ;;  x               8  128[BANK1 ] int [4]
  2544 ;;  h               8  120[BANK0 ] int [4]
  2545 ;;  g               8  112[BANK0 ] int [4]
  2546 ;;  f               8  104[BANK0 ] int [4]
  2547 ;;  e               8   96[BANK0 ] int [4]
  2548 ;;  d               8  118[COMRAM] int [4]
  2549 ;;  c               8  110[COMRAM] int [4]
  2550 ;;  b               8  102[COMRAM] int [4]
  2551 ;;  a               8   94[COMRAM] int [4]
  2552 ;;  i               2   21[BANK2 ] short 
  2553 ;;  j               2   18[BANK2 ] short 
  2554 ;;  row             2   14[BANK2 ] short 
  2555 ;;  temp_int        2   12[BANK2 ] short 
  2556 ;;  past_run_cou    2   10[BANK2 ] short 
  2557 ;;  k               2    8[BANK2 ] short 
  2558 ;;  legit_diet      2  254[BANK1 ] short 
  2559 ;;  tot_drawers     2  252[BANK1 ] short 
  2560 ;;  mode_bool       2  249[BANK1 ] short 
  2561 ;;  manual_unloa    2  247[BANK1 ] short 
  2562 ;;  amtL            2  245[BANK1 ] short 
  2563 ;;  amtF            2  243[BANK1 ] short 
  2564 ;;  amtR            2  241[BANK1 ] short 
  2565 ;;  legit_pieces    2  239[BANK1 ] short 
  2566 ;;  row_sum         2  237[BANK1 ] short 
  2567 ;;  drawer_used     2  235[BANK1 ] short 
  2568 ;;  timer_count     2  232[BANK1 ] short 
  2569 ;;  temp            1   20[BANK2 ] unsigned char 
  2570 ;;  EEPROM_ind      1   17[BANK2 ] unsigned char 
  2571 ;;  keypress        1   16[BANK2 ] unsigned char 
  2572 ;;  letter          1  251[BANK1 ] unsigned char 
  2573 ;;  copy_EEPROM_    1  234[BANK1 ] unsigned char 
  2574 ;; Return value:  Size  Location     Type
  2575 ;;                  1    wreg      void 
  2576 ;; Registers used:
  2577 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2578 ;; Tracked objects:
  2579 ;;		On entry : 0/0
  2580 ;;		On exit  : 0/0
  2581 ;;		Unchanged: 0/0
  2582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2583 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2584 ;;      Locals:        32     128     256      23       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2585 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2586 ;;      Totals:        40     128     256      23       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2587 ;;Total ram usage:      447 bytes
  2588 ;; Hardware stack levels required when called:    6
  2589 ;; This function calls:
  2590 ;;		_I2C_Master_Init
  2591 ;;		_I2C_Master_Read
  2592 ;;		_I2C_Master_Start
  2593 ;;		_I2C_Master_Stop
  2594 ;;		_I2C_Master_Write
  2595 ;;		_UART_Init
  2596 ;;		___wmul
  2597 ;;		_array_transition
  2598 ;;		_comp_EEPROM_time
  2599 ;;		_comp_time_difference
  2600 ;;		_compare_arrays
  2601 ;;		_height_mech
  2602 ;;		_initLCD
  2603 ;;		_initTime
  2604 ;;		_lcdInst
  2605 ;;		_lcd_set_cursor
  2606 ;;		_lcd_shift_display
  2607 ;;		_loadRTC
  2608 ;;		_operation_summary
  2609 ;;		_package_food
  2610 ;;		_printf
  2611 ;;		_putch
  2612 ;;		_read_EEPROM
  2613 ;;		_set_total_init_time
  2614 ;;		_shift_EEPROM
  2615 ;;		_store_EEPROM
  2616 ;;		_uartTransmitBlocking
  2617 ;; This function is called by:
  2618 ;;		Startup code after reset
  2619 ;; This function uses a non-reentrant model
  2620 ;;
  2621                           
  2622                           	psect	text0
  2623  00CCBC                     __ptext0:
  2624                           	opt stack 0
  2625  00CCBC                     _main:
  2626                           	opt stack 25
  2627                           
  2628                           ;interface_main.c: 35: LATA = 0x00;
  2629                           
  2630                           ;incstack = 0
  2631  00CCBC  0E00               	movlw	0
  2632  00CCBE  6E89               	movwf	3977,c	;volatile
  2633                           
  2634                           ;interface_main.c: 36: LATB = 0x00;
  2635  00CCC0  0E00               	movlw	0
  2636  00CCC2  6E8A               	movwf	3978,c	;volatile
  2637                           
  2638                           ;interface_main.c: 37: LATC = 0x00;
  2639  00CCC4  0E00               	movlw	0
  2640  00CCC6  6E8B               	movwf	3979,c	;volatile
  2641                           
  2642                           ;interface_main.c: 38: LATD = 0x00;
  2643  00CCC8  0E00               	movlw	0
  2644  00CCCA  6E8C               	movwf	3980,c	;volatile
  2645                           
  2646                           ;interface_main.c: 39: LATE = 0x00;
  2647  00CCCC  0E00               	movlw	0
  2648  00CCCE  6E8D               	movwf	3981,c	;volatile
  2649                           
  2650                           ;interface_main.c: 43: TRISA = 0xFF;
  2651  00CCD0  6892               	setf	3986,c	;volatile
  2652                           
  2653                           ;interface_main.c: 44: TRISB = 0xFF;
  2654  00CCD2  6893               	setf	3987,c	;volatile
  2655                           
  2656                           ;interface_main.c: 45: TRISC = 0b10000000;
  2657  00CCD4  0E80               	movlw	128
  2658  00CCD6  6E94               	movwf	3988,c	;volatile
  2659                           
  2660                           ;interface_main.c: 46: TRISD = 0x00;
  2661  00CCD8  0E00               	movlw	0
  2662  00CCDA  6E95               	movwf	3989,c	;volatile
  2663                           
  2664                           ;interface_main.c: 47: TRISE = 0x00;
  2665  00CCDC  0E00               	movlw	0
  2666  00CCDE  6E96               	movwf	3990,c	;volatile
  2667                           
  2668                           ;interface_main.c: 50: ADCON0 = 0x00;
  2669  00CCE0  0E00               	movlw	0
  2670  00CCE2  6EC2               	movwf	4034,c	;volatile
  2671                           
  2672                           ;interface_main.c: 51: ADCON1 = 0b00001111;
  2673  00CCE4  0E0F               	movlw	15
  2674  00CCE6  6EC1               	movwf	4033,c	;volatile
  2675                           
  2676                           ;interface_main.c: 54: initLCD();
  2677  00CCE8  EC59  F052         	call	_initLCD	;wreg free
  2678                           
  2679                           ;interface_main.c: 56: I2C_Master_Init(100000);
  2680  00CCEC  0EA0               	movlw	160
  2681  00CCEE  6E0E               	movwf	I2C_Master_Init@clockFreq,c
  2682  00CCF0  0E86               	movlw	134
  2683  00CCF2  6E0F               	movwf	I2C_Master_Init@clockFreq+1,c
  2684  00CCF4  0E01               	movlw	1
  2685  00CCF6  6E10               	movwf	I2C_Master_Init@clockFreq+2,c
  2686  00CCF8  0E00               	movlw	0
  2687  00CCFA  6E11               	movwf	I2C_Master_Init@clockFreq+3,c
  2688  00CCFC  ECA8  F052         	call	_I2C_Master_Init	;wreg free
  2689                           
  2690                           ;interface_main.c: 58: initTime(0x00, 0x50, 0x2, 0x03, 0x11, 0x04, 0x18);
  2691  00CD00  0E50               	movlw	80
  2692  00CD02  6E01               	movwf	initTime@m,c
  2693  00CD04  0E02               	movlw	2
  2694  00CD06  6E02               	movwf	initTime@h,c
  2695  00CD08  0E03               	movlw	3
  2696  00CD0A  6E03               	movwf	initTime@w,c
  2697  00CD0C  0E11               	movlw	17
  2698  00CD0E  6E04               	movwf	initTime@DD,c
  2699  00CD10  0E04               	movlw	4
  2700  00CD12  6E05               	movwf	initTime@MM,c
  2701  00CD14  0E18               	movlw	24
  2702  00CD16  6E06               	movwf	initTime@YY,c
  2703  00CD18  0E00               	movlw	0
  2704  00CD1A  EC95  F051         	call	_initTime
  2705                           
  2706                           ;interface_main.c: 59: loadRTC();
  2707  00CD1E  EC3A  F053         	call	_loadRTC	;wreg free
  2708                           
  2709                           ;interface_main.c: 62: UART_Init(9600);
  2710  00CD22  0E80               	movlw	128
  2711  00CD24  6E0F               	movwf	UART_Init@baud,c
  2712  00CD26  0E25               	movlw	37
  2713  00CD28  6E10               	movwf	UART_Init@baud+1,c
  2714  00CD2A  0E00               	movlw	0
  2715  00CD2C  6E11               	movwf	UART_Init@baud+2,c
  2716  00CD2E  0E00               	movlw	0
  2717  00CD30  6E12               	movwf	UART_Init@baud+3,c
  2718  00CD32  ECB4  F053         	call	_UART_Init	;wreg free
  2719                           
  2720                           ;interface_main.c: 64: (INTCONbits.GIE = 0);
  2721  00CD36  9EF2               	bcf	intcon,7,c	;volatile
  2722                           
  2723                           ;interface_main.c: 112: short int i=0, j=0, k=0, row=0, temp_int, row_sum, amtR, amtF, a
      +                          mtL, tot_drawers, legit_diet, legit_pieces, drawer_used, mode_bool, timer_count, past_ru
      +                          n_count, manual_unload_slide;
  2724  00CD38  0E00               	movlw	0
  2725  00CD3A  0102               	movlb	2	; () banked
  2726  00CD3C  6FFD               	movwf	(main@i+1)& (0+255),b
  2727  00CD3E  0E00               	movlw	0
  2728  00CD40  6FFC               	movwf	main@i& (0+255),b
  2729                           
  2730                           ; BSR set to: 2
  2731  00CD42  0E00               	movlw	0
  2732  00CD44  6FFA               	movwf	(main@j+1)& (0+255),b
  2733  00CD46  0E00               	movlw	0
  2734  00CD48  6FF9               	movwf	main@j& (0+255),b
  2735                           
  2736                           ; BSR set to: 2
  2737  00CD4A  0E00               	movlw	0
  2738  00CD4C  6FF0               	movwf	(main@k+1)& (0+255),b
  2739  00CD4E  0E00               	movlw	0
  2740  00CD50  6FEF               	movwf	main@k& (0+255),b
  2741                           
  2742                           ; BSR set to: 2
  2743  00CD52  0E00               	movlw	0
  2744  00CD54  6FF6               	movwf	(main@row+1)& (0+255),b
  2745  00CD56  0E00               	movlw	0
  2746  00CD58  6FF5               	movwf	main@row& (0+255),b
  2747                           
  2748                           ; BSR set to: 2
  2749                           ;interface_main.c: 113: unsigned char temp, keypress, letter;
  2750                           ;interface_main.c: 114: int mat[16][3] = {0};
  2751  00CD5A  EE24  F080         	lfsr	2,main@F3207
  2752  00CD5E  EE10  F080         	lfsr	1,main@mat
  2753  00CD62  0E5F               	movlw	95
  2754  00CD64                     u6601:
  2755  00CD64  CFDB FFE3          	movff	plusw2,plusw1
  2756  00CD68  06E8               	decf	wreg,f,c
  2757  00CD6A  E2FC               	bc	u6601
  2758                           
  2759                           ; BSR set to: 2
  2760                           ;interface_main.c: 115: int diet[16][4] = {0};
  2761  00CD6C  EE24  F000         	lfsr	2,main@F3210
  2762  00CD70  EE11  F000         	lfsr	1,main@diet
  2763  00CD74  0E7F               	movlw	127
  2764  00CD76                     u6611:
  2765  00CD76  CFDB FFE3          	movff	plusw2,plusw1
  2766  00CD7A  06E8               	decf	wreg,f,c
  2767  00CD7C  E2FC               	bc	u6611
  2768                           
  2769                           ; BSR set to: 2
  2770                           ;interface_main.c: 116: int row_check[4] = {0,0,0,0};
  2771  00CD7E  EE22  F0A7         	lfsr	2,main@F3212
  2772  00CD82  EE12  F0E7         	lfsr	1,main@row_check
  2773  00CD86  0E07               	movlw	7
  2774  00CD88                     u6621:
  2775  00CD88  CFDB FFE3          	movff	plusw2,plusw1
  2776  00CD8C  06E8               	decf	wreg,f,c
  2777  00CD8E  E2FC               	bc	u6621
  2778                           
  2779                           ; BSR set to: 2
  2780                           ;interface_main.c: 118: int a[4] = {1,0,0,0};
  2781  00CD90  EE22  F088         	lfsr	2,main@F3214
  2782  00CD94  EE10  F05F         	lfsr	1,main@a
  2783  00CD98  0E07               	movlw	7
  2784  00CD9A                     u6631:
  2785  00CD9A  CFDB FFE3          	movff	plusw2,plusw1
  2786  00CD9E  06E8               	decf	wreg,f,c
  2787  00CDA0  E2FC               	bc	u6631
  2788                           
  2789                           ; BSR set to: 2
  2790                           ;interface_main.c: 119: int b[4] = {2,0,0,0};
  2791  00CDA2  EE22  F080         	lfsr	2,main@F3216
  2792  00CDA6  EE10  F067         	lfsr	1,main@b
  2793  00CDAA  0E07               	movlw	7
  2794  00CDAC                     u6641:
  2795  00CDAC  CFDB FFE3          	movff	plusw2,plusw1
  2796  00CDB0  06E8               	decf	wreg,f,c
  2797  00CDB2  E2FC               	bc	u6641
  2798                           
  2799                           ; BSR set to: 2
  2800                           ;interface_main.c: 120: int c[4] = {3,0,0,0};
  2801  00CDB4  EE22  F078         	lfsr	2,main@F3218
  2802  00CDB8  EE10  F06F         	lfsr	1,main@c
  2803  00CDBC  0E07               	movlw	7
  2804  00CDBE                     u6651:
  2805  00CDBE  CFDB FFE3          	movff	plusw2,plusw1
  2806  00CDC2  06E8               	decf	wreg,f,c
  2807  00CDC4  E2FC               	bc	u6651
  2808                           
  2809                           ; BSR set to: 2
  2810                           ;interface_main.c: 121: int d[4] = {1,2,0,0};
  2811  00CDC6  EE22  F070         	lfsr	2,main@F3220
  2812  00CDCA  EE10  F077         	lfsr	1,main@d
  2813  00CDCE  0E07               	movlw	7
  2814  00CDD0                     u6661:
  2815  00CDD0  CFDB FFE3          	movff	plusw2,plusw1
  2816  00CDD4  06E8               	decf	wreg,f,c
  2817  00CDD6  E2FC               	bc	u6661
  2818                           
  2819                           ; BSR set to: 2
  2820                           ;interface_main.c: 122: int e[4] = {1,3,0,0};
  2821  00CDD8  EE22  F068         	lfsr	2,main@F3222
  2822  00CDDC  EE10  F0E0         	lfsr	1,main@e
  2823  00CDE0  0E07               	movlw	7
  2824  00CDE2                     u6671:
  2825  00CDE2  CFDB FFE3          	movff	plusw2,plusw1
  2826  00CDE6  06E8               	decf	wreg,f,c
  2827  00CDE8  E2FC               	bc	u6671
  2828                           
  2829                           ; BSR set to: 2
  2830                           ;interface_main.c: 123: int f[4] = {2,3,0,0};
  2831  00CDEA  EE22  F060         	lfsr	2,main@F3224
  2832  00CDEE  EE10  F0E8         	lfsr	1,main@f
  2833  00CDF2  0E07               	movlw	7
  2834  00CDF4                     u6681:
  2835  00CDF4  CFDB FFE3          	movff	plusw2,plusw1
  2836  00CDF8  06E8               	decf	wreg,f,c
  2837  00CDFA  E2FC               	bc	u6681
  2838                           
  2839                           ; BSR set to: 2
  2840                           ;interface_main.c: 124: int g[4] = {1,1,2,0};
  2841  00CDFC  EE22  F058         	lfsr	2,main@F3226
  2842  00CE00  EE10  F0F0         	lfsr	1,main@g
  2843  00CE04  0E07               	movlw	7
  2844  00CE06                     u6691:
  2845  00CE06  CFDB FFE3          	movff	plusw2,plusw1
  2846  00CE0A  06E8               	decf	wreg,f,c
  2847  00CE0C  E2FC               	bc	u6691
  2848                           
  2849                           ; BSR set to: 2
  2850                           ;interface_main.c: 125: int h[4] = {1,1,3,0};
  2851  00CE0E  EE22  F050         	lfsr	2,main@F3228
  2852  00CE12  EE10  F0F8         	lfsr	1,main@h
  2853  00CE16  0E07               	movlw	7
  2854  00CE18                     u6701:
  2855  00CE18  CFDB FFE3          	movff	plusw2,plusw1
  2856  00CE1C  06E8               	decf	wreg,f,c
  2857  00CE1E  E2FC               	bc	u6701
  2858                           
  2859                           ; BSR set to: 2
  2860                           ;interface_main.c: 126: int x[4] = {1,2,2,0};
  2861  00CE20  EE22  F048         	lfsr	2,main@F3230
  2862  00CE24  EE11  F080         	lfsr	1,main@x
  2863  00CE28  0E07               	movlw	7
  2864  00CE2A                     u6711:
  2865  00CE2A  CFDB FFE3          	movff	plusw2,plusw1
  2866  00CE2E  06E8               	decf	wreg,f,c
  2867  00CE30  E2FC               	bc	u6711
  2868                           
  2869                           ; BSR set to: 2
  2870                           ;interface_main.c: 127: int y[4] = {1,3,3,0};
  2871  00CE32  EE22  F040         	lfsr	2,main@F3232
  2872  00CE36  EE11  F088         	lfsr	1,main@y
  2873  00CE3A  0E07               	movlw	7
  2874  00CE3C                     u6721:
  2875  00CE3C  CFDB FFE3          	movff	plusw2,plusw1
  2876  00CE40  06E8               	decf	wreg,f,c
  2877  00CE42  E2FC               	bc	u6721
  2878                           
  2879                           ; BSR set to: 2
  2880                           ;interface_main.c: 128: int z[4] = {1,2,3,0};
  2881  00CE44  EE22  F038         	lfsr	2,main@F3234
  2882  00CE48  EE11  F090         	lfsr	1,main@z
  2883  00CE4C  0E07               	movlw	7
  2884  00CE4E                     u6731:
  2885  00CE4E  CFDB FFE3          	movff	plusw2,plusw1
  2886  00CE52  06E8               	decf	wreg,f,c
  2887  00CE54  E2FC               	bc	u6731
  2888                           
  2889                           ; BSR set to: 2
  2890                           ;interface_main.c: 129: int l[4] = {2,2,3,0};
  2891  00CE56  EE22  F030         	lfsr	2,main@F3236
  2892  00CE5A  EE11  F098         	lfsr	1,main@l
  2893  00CE5E  0E07               	movlw	7
  2894  00CE60                     u6741:
  2895  00CE60  CFDB FFE3          	movff	plusw2,plusw1
  2896  00CE64  06E8               	decf	wreg,f,c
  2897  00CE66  E2FC               	bc	u6741
  2898                           
  2899                           ; BSR set to: 2
  2900                           ;interface_main.c: 130: int m[4] = {2,3,3,0};
  2901  00CE68  EE22  F028         	lfsr	2,main@F3238
  2902  00CE6C  EE11  F0A0         	lfsr	1,main@m
  2903  00CE70  0E07               	movlw	7
  2904  00CE72                     u6751:
  2905  00CE72  CFDB FFE3          	movff	plusw2,plusw1
  2906  00CE76  06E8               	decf	wreg,f,c
  2907  00CE78  E2FC               	bc	u6751
  2908                           
  2909                           ; BSR set to: 2
  2910                           ;interface_main.c: 131: int n[4] = {1,1,2,3};
  2911  00CE7A  EE22  F020         	lfsr	2,main@F3240
  2912  00CE7E  EE11  F0A8         	lfsr	1,main@n
  2913  00CE82  0E07               	movlw	7
  2914  00CE84                     u6761:
  2915  00CE84  CFDB FFE3          	movff	plusw2,plusw1
  2916  00CE88  06E8               	decf	wreg,f,c
  2917  00CE8A  E2FC               	bc	u6761
  2918                           
  2919                           ; BSR set to: 2
  2920                           ;interface_main.c: 132: int o[4] = {1,2,2,3};
  2921  00CE8C  EE22  F018         	lfsr	2,main@F3242
  2922  00CE90  EE11  F0B0         	lfsr	1,main@o
  2923  00CE94  0E07               	movlw	7
  2924  00CE96                     u6771:
  2925  00CE96  CFDB FFE3          	movff	plusw2,plusw1
  2926  00CE9A  06E8               	decf	wreg,f,c
  2927  00CE9C  E2FC               	bc	u6771
  2928                           
  2929                           ; BSR set to: 2
  2930                           ;interface_main.c: 133: int p[4] = {1,2,3,3};
  2931  00CE9E  EE22  F010         	lfsr	2,main@F3244
  2932  00CEA2  EE11  F0B8         	lfsr	1,main@p
  2933  00CEA6  0E07               	movlw	7
  2934  00CEA8                     u6781:
  2935  00CEA8  CFDB FFE3          	movff	plusw2,plusw1
  2936  00CEAC  06E8               	decf	wreg,f,c
  2937  00CEAE  E2FC               	bc	u6781
  2938                           
  2939                           ; BSR set to: 2
  2940                           ;interface_main.c: 134: int q[4] = {1,3,3,3};
  2941  00CEB0  EE22  F008         	lfsr	2,main@F3246
  2942  00CEB4  EE11  F0C0         	lfsr	1,main@q
  2943  00CEB8  0E07               	movlw	7
  2944  00CEBA                     u6791:
  2945  00CEBA  CFDB FFE3          	movff	plusw2,plusw1
  2946  00CEBE  06E8               	decf	wreg,f,c
  2947  00CEC0  E2FC               	bc	u6791
  2948                           
  2949                           ; BSR set to: 2
  2950                           ;interface_main.c: 135: int r[4] = {2,3,3,3};
  2951  00CEC2  EE22  F000         	lfsr	2,main@F3248
  2952  00CEC6  EE11  F0C8         	lfsr	1,main@r
  2953  00CECA  0E07               	movlw	7
  2954  00CECC                     u6801:
  2955  00CECC  CFDB FFE3          	movff	plusw2,plusw1
  2956  00CED0  06E8               	decf	wreg,f,c
  2957  00CED2  E2FC               	bc	u6801
  2958                           
  2959                           ; BSR set to: 2
  2960                           ;interface_main.c: 136: int s[4] = {0,0,0,0};
  2961  00CED4  EE22  F09F         	lfsr	2,main@F3250
  2962  00CED8  EE11  F0D0         	lfsr	1,main@s
  2963  00CEDC  0E07               	movlw	7
  2964  00CEDE                     u6811:
  2965  00CEDE  CFDB FFE3          	movff	plusw2,plusw1
  2966  00CEE2  06E8               	decf	wreg,f,c
  2967  00CEE4  E2FC               	bc	u6811
  2968                           
  2969                           ; BSR set to: 2
  2970                           ;interface_main.c: 137: unsigned char EEPROM_ind, copy_EEPROM_ind;
  2971                           ;interface_main.c: 138: unsigned char EEPROM_print[16] = {0};
  2972  00CEE6  EE23  F0C0         	lfsr	2,main@F3254
  2973  00CEEA  EE11  F0D8         	lfsr	1,main@EEPROM_print
  2974  00CEEE  0E0F               	movlw	15
  2975  00CEF0                     u6821:
  2976  00CEF0  CFDB FFE3          	movff	plusw2,plusw1
  2977  00CEF4  06E8               	decf	wreg,f,c
  2978  00CEF6  E2FC               	bc	u6821
  2979                           
  2980                           ; BSR set to: 2
  2981                           ;interface_main.c: 141: lcdInst(8 | (1 << 2) | (0 << 1)| 0);;
  2982  00CEF8  0E0C               	movlw	12
  2983  00CEFA  EC3E  F051         	call	_lcdInst
  2984                           
  2985                           ;interface_main.c: 142: printf("Booting...");
  2986  00CEFE  0E19               	movlw	low STR_1
  2987  00CF00  6E0D               	movwf	printf@f,c
  2988  00CF02  0EFF               	movlw	high STR_1
  2989  00CF04  6E0E               	movwf	printf@f+1,c
  2990  00CF06  EC66  F061         	call	_printf	;wreg free
  2991                           
  2992                           ;interface_main.c: 143: _delay((unsigned long)((2000)*(40000000/4000.0)));
  2993  00CF0A  0E66               	movlw	102
  2994  00CF0C  6E58               	movwf	(??_main+1)& (0+255),c
  2995  00CF0E  0E76               	movlw	118
  2996  00CF10  6E57               	movwf	??_main& (0+255),c
  2997  00CF12  0EC1               	movlw	193
  2998  00CF14                     u8627:
  2999  00CF14  2EE8               	decfsz	wreg,f,c
  3000  00CF16  D7FE               	bra	u8627
  3001  00CF18  2E57               	decfsz	??_main& (0+255),f,c
  3002  00CF1A  D7FC               	bra	u8627
  3003  00CF1C  2E58               	decfsz	(??_main+1)& (0+255),f,c
  3004  00CF1E  D7FA               	bra	u8627
  3005  00CF20  F000               	nop	
  3006                           
  3007                           ;interface_main.c: 144: lcdInst(0xC0);;
  3008  00CF22  0EC0               	movlw	192
  3009  00CF24  EC3E  F051         	call	_lcdInst
  3010                           
  3011                           ;interface_main.c: 145: printf("Ready");
  3012  00CF28  0EBC               	movlw	low STR_2
  3013  00CF2A  6E0D               	movwf	printf@f,c
  3014  00CF2C  0EFF               	movlw	high STR_2
  3015  00CF2E  6E0E               	movwf	printf@f+1,c
  3016  00CF30  EC66  F061         	call	_printf	;wreg free
  3017                           
  3018                           ;interface_main.c: 146: _delay((unsigned long)((1000)*(40000000/4000.0)));
  3019  00CF34  0E33               	movlw	51
  3020  00CF36  6E58               	movwf	(??_main+1)& (0+255),c
  3021  00CF38  0EBB               	movlw	187
  3022  00CF3A  6E57               	movwf	??_main& (0+255),c
  3023  00CF3C  0EE0               	movlw	224
  3024  00CF3E                     u8637:
  3025  00CF3E  2EE8               	decfsz	wreg,f,c
  3026  00CF40  D7FE               	bra	u8637
  3027  00CF42  2E57               	decfsz	??_main& (0+255),f,c
  3028  00CF44  D7FC               	bra	u8637
  3029  00CF46  2E58               	decfsz	(??_main+1)& (0+255),f,c
  3030  00CF48  D7FA               	bra	u8637
  3031                           
  3032                           ;interface_main.c: 147: lcdInst(0x01);_delay((unsigned long)((15)*(40000000/4000.0)));;
  3033  00CF4A  0E01               	movlw	1
  3034  00CF4C  EC3E  F051         	call	_lcdInst
  3035  00CF50  0EC3               	movlw	195
  3036  00CF52  6E57               	movwf	??_main& (0+255),c
  3037  00CF54  0ECD               	movlw	205
  3038  00CF56                     u8647:
  3039  00CF56  2EE8               	decfsz	wreg,f,c
  3040  00CF58  D7FE               	bra	u8647
  3041  00CF5A  2E57               	decfsz	??_main& (0+255),f,c
  3042  00CF5C  D7FC               	bra	u8647
  3043  00CF5E  F000               	nop	
  3044                           
  3045                           ;interface_main.c: 148: lcdInst(0x80);_delay((unsigned long)((5)*(40000000/4000.0)));;
  3046  00CF60  0E80               	movlw	128
  3047  00CF62  EC3E  F051         	call	_lcdInst
  3048  00CF66  0E41               	movlw	65
  3049  00CF68  6E57               	movwf	??_main& (0+255),c
  3050  00CF6A  0EEE               	movlw	238
  3051  00CF6C                     u8657:
  3052  00CF6C  2EE8               	decfsz	wreg,f,c
  3053  00CF6E  D7FE               	bra	u8657
  3054  00CF70  2E57               	decfsz	??_main& (0+255),f,c
  3055  00CF72  D7FC               	bra	u8657
  3056  00CF74  D000               	nop2	
  3057  00CF76                     
  3058                           ;interface_main.c: 157: lcdInst(0x80);_delay((unsigned long)((5)*(40000000/4000.0)));;
  3059  00CF76  0E80               	movlw	128
  3060  00CF78  EC3E  F051         	call	_lcdInst
  3061  00CF7C  0E41               	movlw	65
  3062  00CF7E  6E57               	movwf	??_main& (0+255),c
  3063  00CF80  0EEE               	movlw	238
  3064  00CF82                     u8667:
  3065  00CF82  2EE8               	decfsz	wreg,f,c
  3066  00CF84  D7FE               	bra	u8667
  3067  00CF86  2E57               	decfsz	??_main& (0+255),f,c
  3068  00CF88  D7FC               	bra	u8667
  3069  00CF8A  D000               	nop2	
  3070                           
  3071                           ;interface_main.c: 158: lcdInst(0x01);_delay((unsigned long)((15)*(40000000/4000.0)));;
  3072  00CF8C  0E01               	movlw	1
  3073  00CF8E  EC3E  F051         	call	_lcdInst
  3074  00CF92  0EC3               	movlw	195
  3075  00CF94  6E57               	movwf	??_main& (0+255),c
  3076  00CF96  0ECD               	movlw	205
  3077  00CF98                     u8677:
  3078  00CF98  2EE8               	decfsz	wreg,f,c
  3079  00CF9A  D7FE               	bra	u8677
  3080  00CF9C  2E57               	decfsz	??_main& (0+255),f,c
  3081  00CF9E  D7FC               	bra	u8677
  3082  00CFA0  F000               	nop	
  3083                           
  3084                           ;interface_main.c: 159: lcd_set_cursor(0, 0);
  3085  00CFA2  0E00               	movlw	0
  3086  00CFA4  6E07               	movwf	lcd_set_cursor@y,c
  3087  00CFA6  0E00               	movlw	0
  3088  00CFA8  EC18  F052         	call	_lcd_set_cursor
  3089                           
  3090                           ;interface_main.c: 160: printf("Hi! I am Cerberus v1. I am an autonomous");
  3091  00CFAC  0EBB               	movlw	low STR_3
  3092  00CFAE  6E0D               	movwf	printf@f,c
  3093  00CFB0  0EFB               	movlw	high STR_3
  3094  00CFB2  6E0E               	movwf	printf@f+1,c
  3095  00CFB4  EC66  F061         	call	_printf	;wreg free
  3096                           
  3097                           ;interface_main.c: 161: _delay((unsigned long)((1500)*(40000000/4000.0)));
  3098  00CFB8  0E4D               	movlw	77
  3099  00CFBA  6E58               	movwf	(??_main+1)& (0+255),c
  3100  00CFBC  0E19               	movlw	25
  3101  00CFBE  6E57               	movwf	??_main& (0+255),c
  3102  00CFC0  0E50               	movlw	80
  3103  00CFC2                     u8687:
  3104  00CFC2  2EE8               	decfsz	wreg,f,c
  3105  00CFC4  D7FE               	bra	u8687
  3106  00CFC6  2E57               	decfsz	??_main& (0+255),f,c
  3107  00CFC8  D7FC               	bra	u8687
  3108  00CFCA  2E58               	decfsz	(??_main+1)& (0+255),f,c
  3109  00CFCC  D7FA               	bra	u8687
  3110                           
  3111                           ;interface_main.c: 162: for (i = 0; i < 24; i++){
  3112  00CFCE  0E00               	movlw	0
  3113  00CFD0  0102               	movlb	2	; () banked
  3114  00CFD2  6FFD               	movwf	(main@i+1)& (0+255),b
  3115  00CFD4  0E00               	movlw	0
  3116  00CFD6  6FFC               	movwf	main@i& (0+255),b
  3117  00CFD8                     l7082:
  3118                           
  3119                           ; BSR set to: 2
  3120  00CFD8  BFFD               	btfsc	(main@i+1)& (0+255),7,b
  3121  00CFDA  D006               	goto	l188
  3122  00CFDC  51FD               	movf	(main@i+1)& (0+255),w,b
  3123  00CFDE  E118               	bnz	l7094
  3124  00CFE0  0E18               	movlw	24
  3125  00CFE2  5DFC               	subwf	main@i& (0+255),w,b
  3126  00CFE4  B0D8               	btfsc	status,0,c
  3127  00CFE6  D014               	goto	u6840
  3128  00CFE8                     l188:
  3129                           
  3130                           ; BSR set to: 2
  3131                           ;interface_main.c: 163: lcd_shift_display(1, 0);
  3132                           
  3133                           ; BSR set to: 2
  3134  00CFE8  0E00               	movlw	0
  3135  00CFEA  6E04               	movwf	lcd_shift_display@direction,c
  3136  00CFEC  0E01               	movlw	1
  3137  00CFEE  EC6A  F051         	call	_lcd_shift_display
  3138                           
  3139                           ;interface_main.c: 164: _delay((unsigned long)((100)*(40000000/4000.0)));
  3140  00CFF2  0E06               	movlw	6
  3141  00CFF4  6E58               	movwf	(??_main+1)& (0+255),c
  3142  00CFF6  0E13               	movlw	19
  3143  00CFF8  6E57               	movwf	??_main& (0+255),c
  3144  00CFFA  0EAE               	movlw	174
  3145  00CFFC                     u8697:
  3146  00CFFC  2EE8               	decfsz	wreg,f,c
  3147  00CFFE  D7FE               	bra	u8697
  3148  00D000  2E57               	decfsz	??_main& (0+255),f,c
  3149  00D002  D7FC               	bra	u8697
  3150  00D004  2E58               	decfsz	(??_main+1)& (0+255),f,c
  3151  00D006  D7FA               	bra	u8697
  3152  00D008  0102               	movlb	2	; () banked
  3153  00D00A  4BFC               	infsnz	main@i& (0+255),f,b
  3154  00D00C  2BFD               	incf	(main@i+1)& (0+255),f,b
  3155  00D00E  D7E4               	goto	l7082
  3156  00D010                     u6840:
  3157  00D010                     l7094:
  3158                           
  3159                           ; BSR set to: 2
  3160                           ;interface_main.c: 165: }
  3161                           ;interface_main.c: 166: lcdInst(0x01);_delay((unsigned long)((15)*(40000000/4000.0)));;
  3162  00D010  0E01               	movlw	1
  3163  00D012  EC3E  F051         	call	_lcdInst
  3164  00D016  0EC3               	movlw	195
  3165  00D018  6E57               	movwf	??_main& (0+255),c
  3166  00D01A  0ECD               	movlw	205
  3167  00D01C                     u8707:
  3168  00D01C  2EE8               	decfsz	wreg,f,c
  3169  00D01E  D7FE               	bra	u8707
  3170  00D020  2E57               	decfsz	??_main& (0+255),f,c
  3171  00D022  D7FC               	bra	u8707
  3172  00D024  F000               	nop	
  3173                           
  3174                           ;interface_main.c: 167: lcdInst(0x80);_delay((unsigned long)((5)*(40000000/4000.0)));;
  3175  00D026  0E80               	movlw	128
  3176  00D028  EC3E  F051         	call	_lcdInst
  3177  00D02C  0E41               	movlw	65
  3178  00D02E  6E57               	movwf	??_main& (0+255),c
  3179  00D030  0EEE               	movlw	238
  3180  00D032                     u8717:
  3181  00D032  2EE8               	decfsz	wreg,f,c
  3182  00D034  D7FE               	bra	u8717
  3183  00D036  2E57               	decfsz	??_main& (0+255),f,c
  3184  00D038  D7FC               	bra	u8717
  3185  00D03A  D000               	nop2	
  3186                           
  3187                           ;interface_main.c: 168: printf("am an autonomous robot designed to");
  3188  00D03C  0E31               	movlw	low STR_4
  3189  00D03E  6E0D               	movwf	printf@f,c
  3190  00D040  0EFC               	movlw	high STR_4
  3191  00D042  6E0E               	movwf	printf@f+1,c
  3192  00D044  EC66  F061         	call	_printf	;wreg free
  3193                           
  3194                           ;interface_main.c: 169: for (i = 0; i < 18; i++){
  3195  00D048  0E00               	movlw	0
  3196  00D04A  0102               	movlb	2	; () banked
  3197  00D04C  6FFD               	movwf	(main@i+1)& (0+255),b
  3198  00D04E  0E00               	movlw	0
  3199  00D050  6FFC               	movwf	main@i& (0+255),b
  3200  00D052                     l7104:
  3201                           
  3202                           ; BSR set to: 2
  3203  00D052  BFFD               	btfsc	(main@i+1)& (0+255),7,b
  3204  00D054  D006               	goto	l190
  3205  00D056  51FD               	movf	(main@i+1)& (0+255),w,b
  3206  00D058  E118               	bnz	l7116
  3207  00D05A  0E12               	movlw	18
  3208  00D05C  5DFC               	subwf	main@i& (0+255),w,b
  3209  00D05E  B0D8               	btfsc	status,0,c
  3210  00D060  D014               	goto	u6860
  3211  00D062                     l190:
  3212                           
  3213                           ; BSR set to: 2
  3214                           ;interface_main.c: 170: lcd_shift_display(1, 0);
  3215                           
  3216                           ; BSR set to: 2
  3217  00D062  0E00               	movlw	0
  3218  00D064  6E04               	movwf	lcd_shift_display@direction,c
  3219  00D066  0E01               	movlw	1
  3220  00D068  EC6A  F051         	call	_lcd_shift_display
  3221                           
  3222                           ;interface_main.c: 171: _delay((unsigned long)((100)*(40000000/4000.0)));
  3223  00D06C  0E06               	movlw	6
  3224  00D06E  6E58               	movwf	(??_main+1)& (0+255),c
  3225  00D070  0E13               	movlw	19
  3226  00D072  6E57               	movwf	??_main& (0+255),c
  3227  00D074  0EAE               	movlw	174
  3228  00D076                     u8727:
  3229  00D076  2EE8               	decfsz	wreg,f,c
  3230  00D078  D7FE               	bra	u8727
  3231  00D07A  2E57               	decfsz	??_main& (0+255),f,c
  3232  00D07C  D7FC               	bra	u8727
  3233  00D07E  2E58               	decfsz	(??_main+1)& (0+255),f,c
  3234  00D080  D7FA               	bra	u8727
  3235  00D082  0102               	movlb	2	; () banked
  3236  00D084  4BFC               	infsnz	main@i& (0+255),f,b
  3237  00D086  2BFD               	incf	(main@i+1)& (0+255),f,b
  3238  00D088  D7E4               	goto	l7104
  3239  00D08A                     u6860:
  3240  00D08A                     l7116:
  3241                           
  3242                           ; BSR set to: 2
  3243                           ;interface_main.c: 172: }
  3244                           ;interface_main.c: 173: lcdInst(0x01);_delay((unsigned long)((15)*(40000000/4000.0)));;
  3245  00D08A  0E01               	movlw	1
  3246  00D08C  EC3E  F051         	call	_lcdInst
  3247  00D090  0EC3               	movlw	195
  3248  00D092  6E57               	movwf	??_main& (0+255),c
  3249  00D094  0ECD               	movlw	205
  3250  00D096                     u8737:
  3251  00D096  2EE8               	decfsz	wreg,f,c
  3252  00D098  D7FE               	bra	u8737
  3253  00D09A  2E57               	decfsz	??_main& (0+255),f,c
  3254  00D09C  D7FC               	bra	u8737
  3255  00D09E  F000               	nop	
  3256                           
  3257                           ;interface_main.c: 174: lcdInst(0x80);_delay((unsigned long)((5)*(40000000/4000.0)));;
  3258  00D0A0  0E80               	movlw	128
  3259  00D0A2  EC3E  F051         	call	_lcdInst
  3260  00D0A6  0E41               	movlw	65
  3261  00D0A8  6E57               	movwf	??_main& (0+255),c
  3262  00D0AA  0EEE               	movlw	238
  3263  00D0AC                     u8747:
  3264  00D0AC  2EE8               	decfsz	wreg,f,c
  3265  00D0AE  D7FE               	bra	u8747
  3266  00D0B0  2E57               	decfsz	??_main& (0+255),f,c
  3267  00D0B2  D7FC               	bra	u8747
  3268  00D0B4  D000               	nop2	
  3269                           
  3270                           ;interface_main.c: 175: printf("obot designed to package daily dietary");
  3271  00D0B6  0EE4               	movlw	low STR_5
  3272  00D0B8  6E0D               	movwf	printf@f,c
  3273  00D0BA  0EFB               	movlw	high STR_5
  3274  00D0BC  6E0E               	movwf	printf@f+1,c
  3275  00D0BE  EC66  F061         	call	_printf	;wreg free
  3276                           
  3277                           ;interface_main.c: 176: for (i = 0; i < 22; i++){
  3278  00D0C2  0E00               	movlw	0
  3279  00D0C4  0102               	movlb	2	; () banked
  3280  00D0C6  6FFD               	movwf	(main@i+1)& (0+255),b
  3281  00D0C8  0E00               	movlw	0
  3282  00D0CA  6FFC               	movwf	main@i& (0+255),b
  3283  00D0CC                     l7126:
  3284                           
  3285                           ; BSR set to: 2
  3286  00D0CC  BFFD               	btfsc	(main@i+1)& (0+255),7,b
  3287  00D0CE  D006               	goto	l192
  3288  00D0D0  51FD               	movf	(main@i+1)& (0+255),w,b
  3289  00D0D2  E118               	bnz	l7138
  3290  00D0D4  0E16               	movlw	22
  3291  00D0D6  5DFC               	subwf	main@i& (0+255),w,b
  3292  00D0D8  B0D8               	btfsc	status,0,c
  3293  00D0DA  D014               	goto	u6880
  3294  00D0DC                     l192:
  3295                           
  3296                           ; BSR set to: 2
  3297                           ;interface_main.c: 177: lcd_shift_display(1, 0);
  3298                           
  3299                           ; BSR set to: 2
  3300  00D0DC  0E00               	movlw	0
  3301  00D0DE  6E04               	movwf	lcd_shift_display@direction,c
  3302  00D0E0  0E01               	movlw	1
  3303  00D0E2  EC6A  F051         	call	_lcd_shift_display
  3304                           
  3305                           ;interface_main.c: 178: _delay((unsigned long)((100)*(40000000/4000.0)));
  3306  00D0E6  0E06               	movlw	6
  3307  00D0E8  6E58               	movwf	(??_main+1)& (0+255),c
  3308  00D0EA  0E13               	movlw	19
  3309  00D0EC  6E57               	movwf	??_main& (0+255),c
  3310  00D0EE  0EAE               	movlw	174
  3311  00D0F0                     u8757:
  3312  00D0F0  2EE8               	decfsz	wreg,f,c
  3313  00D0F2  D7FE               	bra	u8757
  3314  00D0F4  2E57               	decfsz	??_main& (0+255),f,c
  3315  00D0F6  D7FC               	bra	u8757
  3316  00D0F8  2E58               	decfsz	(??_main+1)& (0+255),f,c
  3317  00D0FA  D7FA               	bra	u8757
  3318  00D0FC  0102               	movlb	2	; () banked
  3319  00D0FE  4BFC               	infsnz	main@i& (0+255),f,b
  3320  00D100  2BFD               	incf	(main@i+1)& (0+255),f,b
  3321  00D102  D7E4               	goto	l7126
  3322  00D104                     u6880:
  3323  00D104                     l7138:
  3324                           
  3325                           ; BSR set to: 2
  3326                           ;interface_main.c: 179: }
  3327                           ;interface_main.c: 180: lcdInst(0x01);_delay((unsigned long)((15)*(40000000/4000.0)));;
  3328  00D104  0E01               	movlw	1
  3329  00D106  EC3E  F051         	call	_lcdInst
  3330  00D10A  0EC3               	movlw	195
  3331  00D10C  6E57               	movwf	??_main& (0+255),c
  3332  00D10E  0ECD               	movlw	205
  3333  00D110                     u8767:
  3334  00D110  2EE8               	decfsz	wreg,f,c
  3335  00D112  D7FE               	bra	u8767
  3336  00D114  2E57               	decfsz	??_main& (0+255),f,c
  3337  00D116  D7FC               	bra	u8767
  3338  00D118  F000               	nop	
  3339                           
  3340                           ;interface_main.c: 181: lcdInst(0x80);_delay((unsigned long)((5)*(40000000/4000.0)));;
  3341  00D11A  0E80               	movlw	128
  3342  00D11C  EC3E  F051         	call	_lcdInst
  3343  00D120  0E41               	movlw	65
  3344  00D122  6E57               	movwf	??_main& (0+255),c
  3345  00D124  0EEE               	movlw	238
  3346  00D126                     u8777:
  3347  00D126  2EE8               	decfsz	wreg,f,c
  3348  00D128  D7FE               	bra	u8777
  3349  00D12A  2E57               	decfsz	??_main& (0+255),f,c
  3350  00D12C  D7FC               	bra	u8777
  3351  00D12E  D000               	nop2	
  3352                           
  3353                           ;interface_main.c: 182: printf("ge daily dietary foods for laboratory");
  3354  00D130  0E0B               	movlw	low STR_6
  3355  00D132  6E0D               	movwf	printf@f,c
  3356  00D134  0EFC               	movlw	high STR_6
  3357  00D136  6E0E               	movwf	printf@f+1,c
  3358  00D138  EC66  F061         	call	_printf	;wreg free
  3359                           
  3360                           ;interface_main.c: 183: for (i = 0; i <21 ; i++){
  3361  00D13C  0E00               	movlw	0
  3362  00D13E  0102               	movlb	2	; () banked
  3363  00D140  6FFD               	movwf	(main@i+1)& (0+255),b
  3364  00D142  0E00               	movlw	0
  3365  00D144  6FFC               	movwf	main@i& (0+255),b
  3366  00D146                     l7148:
  3367                           
  3368                           ; BSR set to: 2
  3369  00D146  BFFD               	btfsc	(main@i+1)& (0+255),7,b
  3370  00D148  D006               	goto	l194
  3371  00D14A  51FD               	movf	(main@i+1)& (0+255),w,b
  3372  00D14C  E118               	bnz	l7160
  3373  00D14E  0E15               	movlw	21
  3374  00D150  5DFC               	subwf	main@i& (0+255),w,b
  3375  00D152  B0D8               	btfsc	status,0,c
  3376  00D154  D014               	goto	u6900
  3377  00D156                     l194:
  3378                           
  3379                           ; BSR set to: 2
  3380                           ;interface_main.c: 184: lcd_shift_display(1, 0);
  3381                           
  3382                           ; BSR set to: 2
  3383  00D156  0E00               	movlw	0
  3384  00D158  6E04               	movwf	lcd_shift_display@direction,c
  3385  00D15A  0E01               	movlw	1
  3386  00D15C  EC6A  F051         	call	_lcd_shift_display
  3387                           
  3388                           ;interface_main.c: 185: _delay((unsigned long)((100)*(40000000/4000.0)));
  3389  00D160  0E06               	movlw	6
  3390  00D162  6E58               	movwf	(??_main+1)& (0+255),c
  3391  00D164  0E13               	movlw	19
  3392  00D166  6E57               	movwf	??_main& (0+255),c
  3393  00D168  0EAE               	movlw	174
  3394  00D16A                     u8787:
  3395  00D16A  2EE8               	decfsz	wreg,f,c
  3396  00D16C  D7FE               	bra	u8787
  3397  00D16E  2E57               	decfsz	??_main& (0+255),f,c
  3398  00D170  D7FC               	bra	u8787
  3399  00D172  2E58               	decfsz	(??_main+1)& (0+255),f,c
  3400  00D174  D7FA               	bra	u8787
  3401  00D176  0102               	movlb	2	; () banked
  3402  00D178  4BFC               	infsnz	main@i& (0+255),f,b
  3403  00D17A  2BFD               	incf	(main@i+1)& (0+255),f,b
  3404  00D17C  D7E4               	goto	l7148
  3405  00D17E                     u6900:
  3406  00D17E                     l7160:
  3407                           
  3408                           ; BSR set to: 2
  3409                           ;interface_main.c: 186: }
  3410                           ;interface_main.c: 187: lcdInst(0x01);_delay((unsigned long)((15)*(40000000/4000.0)));;
  3411  00D17E  0E01               	movlw	1
  3412  00D180  EC3E  F051         	call	_lcdInst
  3413  00D184  0EC3               	movlw	195
  3414  00D186  6E57               	movwf	??_main& (0+255),c
  3415  00D188  0ECD               	movlw	205
  3416  00D18A                     u8797:
  3417  00D18A  2EE8               	decfsz	wreg,f,c
  3418  00D18C  D7FE               	bra	u8797
  3419  00D18E  2E57               	decfsz	??_main& (0+255),f,c
  3420  00D190  D7FC               	bra	u8797
  3421  00D192  F000               	nop	
  3422                           
  3423                           ;interface_main.c: 188: lcdInst(0x80);_delay((unsigned long)((5)*(40000000/4000.0)));;
  3424  00D194  0E80               	movlw	128
  3425  00D196  EC3E  F051         	call	_lcdInst
  3426  00D19A  0E41               	movlw	65
  3427  00D19C  6E57               	movwf	??_main& (0+255),c
  3428  00D19E  0EEE               	movlw	238
  3429  00D1A0                     u8807:
  3430  00D1A0  2EE8               	decfsz	wreg,f,c
  3431  00D1A2  D7FE               	bra	u8807
  3432  00D1A4  2E57               	decfsz	??_main& (0+255),f,c
  3433  00D1A6  D7FC               	bra	u8807
  3434  00D1A8  D000               	nop2	
  3435                           
  3436                           ;interface_main.c: 189: printf("s for laboratory rats!");
  3437  00D1AA  0EE3               	movlw	low STR_7
  3438  00D1AC  6E0D               	movwf	printf@f,c
  3439  00D1AE  0EFC               	movlw	high STR_7
  3440  00D1B0  6E0E               	movwf	printf@f+1,c
  3441  00D1B2  EC66  F061         	call	_printf	;wreg free
  3442                           
  3443                           ;interface_main.c: 190: for (i = 0; i <6 ; i++){
  3444  00D1B6  0E00               	movlw	0
  3445  00D1B8  0102               	movlb	2	; () banked
  3446  00D1BA  6FFD               	movwf	(main@i+1)& (0+255),b
  3447  00D1BC  0E00               	movlw	0
  3448  00D1BE  6FFC               	movwf	main@i& (0+255),b
  3449  00D1C0                     l7170:
  3450                           
  3451                           ; BSR set to: 2
  3452  00D1C0  BFFD               	btfsc	(main@i+1)& (0+255),7,b
  3453  00D1C2  D006               	goto	l196
  3454  00D1C4  51FD               	movf	(main@i+1)& (0+255),w,b
  3455  00D1C6  E118               	bnz	l7182
  3456  00D1C8  0E06               	movlw	6
  3457  00D1CA  5DFC               	subwf	main@i& (0+255),w,b
  3458  00D1CC  B0D8               	btfsc	status,0,c
  3459  00D1CE  D014               	goto	u6920
  3460  00D1D0                     l196:
  3461                           
  3462                           ; BSR set to: 2
  3463                           ;interface_main.c: 191: lcd_shift_display(1, 0);
  3464                           
  3465                           ; BSR set to: 2
  3466  00D1D0  0E00               	movlw	0
  3467  00D1D2  6E04               	movwf	lcd_shift_display@direction,c
  3468  00D1D4  0E01               	movlw	1
  3469  00D1D6  EC6A  F051         	call	_lcd_shift_display
  3470                           
  3471                           ;interface_main.c: 192: _delay((unsigned long)((100)*(40000000/4000.0)));
  3472  00D1DA  0E06               	movlw	6
  3473  00D1DC  6E58               	movwf	(??_main+1)& (0+255),c
  3474  00D1DE  0E13               	movlw	19
  3475  00D1E0  6E57               	movwf	??_main& (0+255),c
  3476  00D1E2  0EAE               	movlw	174
  3477  00D1E4                     u8817:
  3478  00D1E4  2EE8               	decfsz	wreg,f,c
  3479  00D1E6  D7FE               	bra	u8817
  3480  00D1E8  2E57               	decfsz	??_main& (0+255),f,c
  3481  00D1EA  D7FC               	bra	u8817
  3482  00D1EC  2E58               	decfsz	(??_main+1)& (0+255),f,c
  3483  00D1EE  D7FA               	bra	u8817
  3484  00D1F0  0102               	movlb	2	; () banked
  3485  00D1F2  4BFC               	infsnz	main@i& (0+255),f,b
  3486  00D1F4  2BFD               	incf	(main@i+1)& (0+255),f,b
  3487  00D1F6  D7E4               	goto	l7170
  3488  00D1F8                     u6920:
  3489  00D1F8                     l7182:
  3490                           
  3491                           ; BSR set to: 2
  3492                           ;interface_main.c: 193: }
  3493                           ;interface_main.c: 194: _delay((unsigned long)((1500)*(40000000/4000.0)));
  3494  00D1F8  0E4D               	movlw	77
  3495  00D1FA  6E58               	movwf	(??_main+1)& (0+255),c
  3496  00D1FC  0E19               	movlw	25
  3497  00D1FE  6E57               	movwf	??_main& (0+255),c
  3498  00D200  0E50               	movlw	80
  3499  00D202                     u8827:
  3500  00D202  2EE8               	decfsz	wreg,f,c
  3501  00D204  D7FE               	bra	u8827
  3502  00D206  2E57               	decfsz	??_main& (0+255),f,c
  3503  00D208  D7FC               	bra	u8827
  3504  00D20A  2E58               	decfsz	(??_main+1)& (0+255),f,c
  3505  00D20C  D7FA               	bra	u8827
  3506                           
  3507                           ;interface_main.c: 195: lcdInst(0x01);_delay((unsigned long)((15)*(40000000/4000.0)));;
  3508  00D20E  0E01               	movlw	1
  3509  00D210  EC3E  F051         	call	_lcdInst
  3510  00D214  0EC3               	movlw	195
  3511  00D216  6E57               	movwf	??_main& (0+255),c
  3512  00D218  0ECD               	movlw	205
  3513  00D21A                     u8837:
  3514  00D21A  2EE8               	decfsz	wreg,f,c
  3515  00D21C  D7FE               	bra	u8837
  3516  00D21E  2E57               	decfsz	??_main& (0+255),f,c
  3517  00D220  D7FC               	bra	u8837
  3518  00D222  F000               	nop	
  3519                           
  3520                           ;interface_main.c: 196: lcdInst(0x80);_delay((unsigned long)((5)*(40000000/4000.0)));;
  3521  00D224  0E80               	movlw	128
  3522  00D226  EC3E  F051         	call	_lcdInst
  3523  00D22A  0E41               	movlw	65
  3524  00D22C  6E57               	movwf	??_main& (0+255),c
  3525  00D22E  0EEE               	movlw	238
  3526  00D230                     u8847:
  3527  00D230  2EE8               	decfsz	wreg,f,c
  3528  00D232  D7FE               	bra	u8847
  3529  00D234  2E57               	decfsz	??_main& (0+255),f,c
  3530  00D236  D7FC               	bra	u8847
  3531  00D238  D000               	nop2	
  3532  00D23A                     
  3533                           ;interface_main.c: 199: lcdInst(0x01);_delay((unsigned long)((15)*(40000000/4000.0)));;
  3534  00D23A  0E01               	movlw	1
  3535  00D23C  EC3E  F051         	call	_lcdInst
  3536  00D240  0EC3               	movlw	195
  3537  00D242  6E57               	movwf	??_main& (0+255),c
  3538  00D244  0ECD               	movlw	205
  3539  00D246                     u8857:
  3540  00D246  2EE8               	decfsz	wreg,f,c
  3541  00D248  D7FE               	bra	u8857
  3542  00D24A  2E57               	decfsz	??_main& (0+255),f,c
  3543  00D24C  D7FC               	bra	u8857
  3544  00D24E  F000               	nop	
  3545                           
  3546                           ;interface_main.c: 200: lcdInst(0x80);_delay((unsigned long)((5)*(40000000/4000.0)));;
  3547  00D250  0E80               	movlw	128
  3548  00D252  EC3E  F051         	call	_lcdInst
  3549  00D256  0E41               	movlw	65
  3550  00D258  6E57               	movwf	??_main& (0+255),c
  3551  00D25A  0EEE               	movlw	238
  3552  00D25C                     u8867:
  3553  00D25C  2EE8               	decfsz	wreg,f,c
  3554  00D25E  D7FE               	bra	u8867
  3555  00D260  2E57               	decfsz	??_main& (0+255),f,c
  3556  00D262  D7FC               	bra	u8867
  3557  00D264  D000               	nop2	
  3558                           
  3559                           ;interface_main.c: 201: printf("Home Screen: 1 ");
  3560  00D266  0EBD               	movlw	low STR_8
  3561  00D268  6E0D               	movwf	printf@f,c
  3562  00D26A  0EFD               	movlw	high STR_8
  3563  00D26C  6E0E               	movwf	printf@f+1,c
  3564  00D26E  EC66  F061         	call	_printf	;wreg free
  3565                           
  3566                           ;interface_main.c: 202: lcdInst(0xC0);;
  3567  00D272  0EC0               	movlw	192
  3568  00D274  EC3E  F051         	call	_lcdInst
  3569                           
  3570                           ;interface_main.c: 203: printf("Read Again: 2 ");
  3571  00D278  0E3D               	movlw	low STR_9
  3572  00D27A  6E0D               	movwf	printf@f,c
  3573  00D27C  0EFE               	movlw	high STR_9
  3574  00D27E  6E0E               	movwf	printf@f+1,c
  3575  00D280  EC66  F061         	call	_printf	;wreg free
  3576  00D284  A281               	btfss	3969,1,c	;volatile
  3577  00D286  D7FE               	goto	l200
  3578                           
  3579                           ;interface_main.c: 205: keypress = (PORTB & 0xF0) >> 4;
  3580  00D288  3881               	swapf	3969,w,c	;volatile
  3581  00D28A  0B0F               	andlw	15
  3582  00D28C  0B0F               	andlw	15
  3583  00D28E  0102               	movlb	2	; () banked
  3584  00D290  6FF7               	movwf	main@keypress& (0+255),b
  3585  00D292                     
  3586                           ; BSR set to: 2
  3587  00D292  B281               	btfsc	3969,1,c	;volatile
  3588  00D294  D7FE               	goto	l203
  3589                           
  3590                           ;interface_main.c: 207: __nop();
  3591  00D296  F000               	nop	
  3592                           
  3593                           ;interface_main.c: 208: temp = keys[keypress];
  3594  00D298  0102               	movlb	2	; () banked
  3595  00D29A  51F7               	movf	main@keypress& (0+255),w,b
  3596  00D29C  0D01               	mullw	1
  3597  00D29E  0E92               	movlw	low _keys
  3598  00D2A0  24F3               	addwf	prodl,w,c
  3599  00D2A2  6EF6               	movwf	tblptrl,c
  3600  00D2A4  0EFB               	movlw	high _keys
  3601  00D2A6  20F4               	addwfc	prodh,w,c
  3602  00D2A8  6EF7               	movwf	tblptrh,c
  3603  00D2AA                     	if	1	;There are 3 active tblptr bytes
  3604  00D2AA  6AF8               	clrf	tblptru,c
  3605  00D2AC  0E00               	movlw	low (__mediumconst shr (0+16))
  3606  00D2AE  22F8               	addwfc	tblptru,f,c
  3607  00D2B0                     	endif
  3608  00D2B0  0008               	tblrd		*
  3609  00D2B2  CFF5 F2FB          	movff	tablat,main@temp
  3610                           
  3611                           ; BSR set to: 2
  3612                           ;interface_main.c: 209: temp_int = (temp - '0');
  3613  00D2B6  0ED0               	movlw	208
  3614  00D2B8  25FB               	addwf	main@temp& (0+255),w,b
  3615  00D2BA  6FF3               	movwf	main@temp_int& (0+255),b
  3616  00D2BC  6BF4               	clrf	(main@temp_int+1)& (0+255),b
  3617  00D2BE  0EFF               	movlw	255
  3618  00D2C0  23F4               	addwfc	(main@temp_int+1)& (0+255),f,b
  3619                           
  3620                           ; BSR set to: 2
  3621                           ;interface_main.c: 210: if (temp_int == 1){
  3622  00D2C2  05F3               	decf	main@temp_int& (0+255),w,b
  3623  00D2C4  11F4               	iorwf	(main@temp_int+1)& (0+255),w,b
  3624  00D2C6  A4D8               	btfss	status,2,c
  3625  00D2C8  D006               	goto	l205
  3626                           
  3627                           ; BSR set to: 2
  3628                           ;interface_main.c: 211: lcd_set_cursor(15, 0);
  3629  00D2CA  0E00               	movlw	0
  3630  00D2CC  6E07               	movwf	lcd_set_cursor@y,c
  3631  00D2CE  0E0F               	movlw	15
  3632  00D2D0  EC18  F052         	call	_lcd_set_cursor
  3633                           
  3634                           ;interface_main.c: 212: break;
  3635  00D2D4  D034               	goto	l206
  3636  00D2D6                     l205:
  3637                           
  3638                           ;interface_main.c: 214: else if (temp_int == 2){
  3639  00D2D6  0E02               	movlw	2
  3640  00D2D8  0102               	movlb	2	; () banked
  3641  00D2DA  19F3               	xorwf	main@temp_int& (0+255),w,b
  3642  00D2DC  11F4               	iorwf	(main@temp_int+1)& (0+255),w,b
  3643  00D2DE  A4D8               	btfss	status,2,c
  3644  00D2E0  D006               	goto	l208
  3645                           
  3646                           ; BSR set to: 2
  3647                           ;interface_main.c: 215: lcd_set_cursor(15, 1);
  3648  00D2E2  0E01               	movlw	1
  3649  00D2E4  6E07               	movwf	lcd_set_cursor@y,c
  3650  00D2E6  0E0F               	movlw	15
  3651  00D2E8  EC18  F052         	call	_lcd_set_cursor
  3652                           
  3653                           ;interface_main.c: 216: break;
  3654  00D2EC  D028               	goto	l206
  3655  00D2EE                     l208:
  3656                           
  3657                           ;interface_main.c: 218: else{
  3658                           ;interface_main.c: 219: lcdInst(0x01);_delay((unsigned long)((15)*(40000000/4000.0)));;
  3659  00D2EE  0E01               	movlw	1
  3660  00D2F0  EC3E  F051         	call	_lcdInst
  3661  00D2F4  0EC3               	movlw	195
  3662  00D2F6  6E57               	movwf	??_main& (0+255),c
  3663  00D2F8  0ECD               	movlw	205
  3664  00D2FA                     u8877:
  3665  00D2FA  2EE8               	decfsz	wreg,f,c
  3666  00D2FC  D7FE               	bra	u8877
  3667  00D2FE  2E57               	decfsz	??_main& (0+255),f,c
  3668  00D300  D7FC               	bra	u8877
  3669  00D302  F000               	nop	
  3670                           
  3671                           ;interface_main.c: 220: printf("Invalid Input");
  3672  00D304  0EC1               	movlw	low STR_10
  3673  00D306  6E0D               	movwf	printf@f,c
  3674  00D308  0EFE               	movlw	high STR_10
  3675  00D30A  6E0E               	movwf	printf@f+1,c
  3676  00D30C  EC66  F061         	call	_printf	;wreg free
  3677                           
  3678                           ;interface_main.c: 221: _delay((unsigned long)((1000)*(40000000/4000.0)));
  3679  00D310  0E33               	movlw	51
  3680  00D312  6E58               	movwf	(??_main+1)& (0+255),c
  3681  00D314  0EBB               	movlw	187
  3682  00D316  6E57               	movwf	??_main& (0+255),c
  3683  00D318  0EE0               	movlw	224
  3684  00D31A                     u8887:
  3685  00D31A  2EE8               	decfsz	wreg,f,c
  3686  00D31C  D7FE               	bra	u8887
  3687  00D31E  2E57               	decfsz	??_main& (0+255),f,c
  3688  00D320  D7FC               	bra	u8887
  3689  00D322  2E58               	decfsz	(??_main+1)& (0+255),f,c
  3690  00D324  D7FA               	bra	u8887
  3691                           
  3692                           ;interface_main.c: 222: lcdInst(0x01);_delay((unsigned long)((15)*(40000000/4000.0)));;
  3693  00D326  0E01               	movlw	1
  3694  00D328  EC3E  F051         	call	_lcdInst
  3695  00D32C  0EC3               	movlw	195
  3696  00D32E  6E57               	movwf	??_main& (0+255),c
  3697  00D330  0ECD               	movlw	205
  3698  00D332                     u8897:
  3699  00D332  2EE8               	decfsz	wreg,f,c
  3700  00D334  D7FE               	bra	u8897
  3701  00D336  2E57               	decfsz	??_main& (0+255),f,c
  3702  00D338  D7FC               	bra	u8897
  3703  00D33A  F000               	nop	
  3704                           
  3705                           ;interface_main.c: 223: continue;
  3706  00D33C  D77E               	goto	l198
  3707  00D33E                     l206:
  3708                           
  3709                           ;interface_main.c: 224: }
  3710                           ;interface_main.c: 225: }
  3711                           ;interface_main.c: 226: printf("<");
  3712  00D33E  0EFC               	movlw	low STR_11
  3713  00D340  6E0D               	movwf	printf@f,c
  3714  00D342  0EFF               	movlw	high STR_11
  3715  00D344  6E0E               	movwf	printf@f+1,c
  3716  00D346  EC66  F061         	call	_printf	;wreg free
  3717                           
  3718                           ;interface_main.c: 227: _delay((unsigned long)((500)*(40000000/4000.0)));
  3719  00D34A  0E1A               	movlw	26
  3720  00D34C  6E58               	movwf	(??_main+1)& (0+255),c
  3721  00D34E  0E5E               	movlw	94
  3722  00D350  6E57               	movwf	??_main& (0+255),c
  3723  00D352  0E6E               	movlw	110
  3724  00D354                     u8907:
  3725  00D354  2EE8               	decfsz	wreg,f,c
  3726  00D356  D7FE               	bra	u8907
  3727  00D358  2E57               	decfsz	??_main& (0+255),f,c
  3728  00D35A  D7FC               	bra	u8907
  3729  00D35C  2E58               	decfsz	(??_main+1)& (0+255),f,c
  3730  00D35E  D7FA               	bra	u8907
  3731  00D360  D000               	nop2	
  3732                           
  3733                           ;interface_main.c: 228: if (temp_int == 1){
  3734  00D362  0102               	movlb	2	; () banked
  3735  00D364  05F3               	decf	main@temp_int& (0+255),w,b
  3736  00D366  11F4               	iorwf	(main@temp_int+1)& (0+255),w,b
  3737  00D368  A4D8               	btfss	status,2,c
  3738  00D36A  D605               	goto	l187
  3739                           
  3740                           ; BSR set to: 2
  3741                           ;interface_main.c: 233: }
  3742                           ;interface_main.c: 234: }
  3743                           ;interface_main.c: 236: lcdInst(8 | (1 << 2) | (0 << 1)| 0);;
  3744                           
  3745                           ; BSR set to: 2
  3746                           
  3747                           ; BSR set to: 2
  3748                           
  3749                           ; BSR set to: 2
  3750                           
  3751                           ; BSR set to: 2
  3752                           ;interface_main.c: 232: continue;
  3753                           
  3754                           ; BSR set to: 2
  3755                           
  3756                           ; BSR set to: 2
  3757                           
  3758                           ; BSR set to: 2
  3759                           ;interface_main.c: 229: break;
  3760  00D36C  0E0C               	movlw	12
  3761  00D36E  EC3E  F051         	call	_lcdInst
  3762  00D372                     l215:
  3763                           
  3764                           ;interface_main.c: 245: lcdInst(8 | (1 << 2) | (0 << 1)| 0);;
  3765  00D372  0E0C               	movlw	12
  3766  00D374  EC3E  F051         	call	_lcdInst
  3767                           
  3768                           ;interface_main.c: 246: lcdInst(0x01);_delay((unsigned long)((15)*(40000000/4000.0)));;
  3769  00D378  0E01               	movlw	1
  3770  00D37A  EC3E  F051         	call	_lcdInst
  3771  00D37E  0EC3               	movlw	195
  3772  00D380  6E57               	movwf	??_main& (0+255),c
  3773  00D382  0ECD               	movlw	205
  3774  00D384                     u8917:
  3775  00D384  2EE8               	decfsz	wreg,f,c
  3776  00D386  D7FE               	bra	u8917
  3777  00D388  2E57               	decfsz	??_main& (0+255),f,c
  3778  00D38A  D7FC               	bra	u8917
  3779  00D38C  F000               	nop	
  3780                           
  3781                           ;interface_main.c: 247: lcdInst(0x80);_delay((unsigned long)((5)*(40000000/4000.0)));;
  3782  00D38E  0E80               	movlw	128
  3783  00D390  EC3E  F051         	call	_lcdInst
  3784  00D394  0E41               	movlw	65
  3785  00D396  6E57               	movwf	??_main& (0+255),c
  3786  00D398  0EEE               	movlw	238
  3787  00D39A                     u8927:
  3788  00D39A  2EE8               	decfsz	wreg,f,c
  3789  00D39C  D7FE               	bra	u8927
  3790  00D39E  2E57               	decfsz	??_main& (0+255),f,c
  3791  00D3A0  D7FC               	bra	u8927
  3792  00D3A2  D000               	nop2	
  3793  00D3A4                     
  3794                           ;interface_main.c: 251: lcdInst(0x01);_delay((unsigned long)((15)*(40000000/4000.0)));;
  3795  00D3A4  0E01               	movlw	1
  3796  00D3A6  EC3E  F051         	call	_lcdInst
  3797  00D3AA  0EC3               	movlw	195
  3798  00D3AC  6E57               	movwf	??_main& (0+255),c
  3799  00D3AE  0ECD               	movlw	205
  3800  00D3B0                     u8937:
  3801  00D3B0  2EE8               	decfsz	wreg,f,c
  3802  00D3B2  D7FE               	bra	u8937
  3803  00D3B4  2E57               	decfsz	??_main& (0+255),f,c
  3804  00D3B6  D7FC               	bra	u8937
  3805  00D3B8  F000               	nop	
  3806                           
  3807                           ;interface_main.c: 252: lcdInst(0x80);_delay((unsigned long)((5)*(40000000/4000.0)));;
  3808  00D3BA  0E80               	movlw	128
  3809  00D3BC  EC3E  F051         	call	_lcdInst
  3810  00D3C0  0E41               	movlw	65
  3811  00D3C2  6E57               	movwf	??_main& (0+255),c
  3812  00D3C4  0EEE               	movlw	238
  3813  00D3C6                     u8947:
  3814  00D3C6  2EE8               	decfsz	wreg,f,c
  3815  00D3C8  D7FE               	bra	u8947
  3816  00D3CA  2E57               	decfsz	??_main& (0+255),f,c
  3817  00D3CC  D7FC               	bra	u8947
  3818  00D3CE  D000               	nop2	
  3819                           
  3820                           ;interface_main.c: 253: printf("Operate: 1");
  3821  00D3D0  0E24               	movlw	low STR_12
  3822  00D3D2  6E0D               	movwf	printf@f,c
  3823  00D3D4  0EFF               	movlw	high STR_12
  3824  00D3D6  6E0E               	movwf	printf@f+1,c
  3825  00D3D8  EC66  F061         	call	_printf	;wreg free
  3826                           
  3827                           ;interface_main.c: 254: lcdInst(0xC0);;
  3828  00D3DC  0EC0               	movlw	192
  3829  00D3DE  EC3E  F051         	call	_lcdInst
  3830                           
  3831                           ;interface_main.c: 255: printf("Standby: 2");
  3832  00D3E2  0E3A               	movlw	low STR_13
  3833  00D3E4  6E0D               	movwf	printf@f,c
  3834  00D3E6  0EFF               	movlw	high STR_13
  3835  00D3E8  6E0E               	movwf	printf@f+1,c
  3836  00D3EA  EC66  F061         	call	_printf	;wreg free
  3837  00D3EE  A281               	btfss	3969,1,c	;volatile
  3838  00D3F0  D7FE               	goto	l218
  3839                           
  3840                           ;interface_main.c: 258: keypress = (PORTB & 0xF0) >> 4;
  3841  00D3F2  3881               	swapf	3969,w,c	;volatile
  3842  00D3F4  0B0F               	andlw	15
  3843  00D3F6  0B0F               	andlw	15
  3844  00D3F8  0102               	movlb	2	; () banked
  3845  00D3FA  6FF7               	movwf	main@keypress& (0+255),b
  3846  00D3FC                     
  3847                           ; BSR set to: 2
  3848  00D3FC  B281               	btfsc	3969,1,c	;volatile
  3849  00D3FE  D7FE               	goto	l221
  3850                           
  3851                           ;interface_main.c: 260: __nop();
  3852  00D400  F000               	nop	
  3853                           
  3854                           ;interface_main.c: 261: temp = keys[keypress];
  3855  00D402  0102               	movlb	2	; () banked
  3856  00D404  51F7               	movf	main@keypress& (0+255),w,b
  3857  00D406  0D01               	mullw	1
  3858  00D408  0E92               	movlw	low _keys
  3859  00D40A  24F3               	addwf	prodl,w,c
  3860  00D40C  6EF6               	movwf	tblptrl,c
  3861  00D40E  0EFB               	movlw	high _keys
  3862  00D410  20F4               	addwfc	prodh,w,c
  3863  00D412  6EF7               	movwf	tblptrh,c
  3864  00D414                     	if	1	;There are 3 active tblptr bytes
  3865  00D414  6AF8               	clrf	tblptru,c
  3866  00D416  0E00               	movlw	low (__mediumconst shr (0+16))
  3867  00D418  22F8               	addwfc	tblptru,f,c
  3868  00D41A                     	endif
  3869  00D41A  0008               	tblrd		*
  3870  00D41C  CFF5 F2FB          	movff	tablat,main@temp
  3871                           
  3872                           ; BSR set to: 2
  3873                           ;interface_main.c: 262: mode_bool = (temp - '0');
  3874  00D420  0ED0               	movlw	208
  3875  00D422  25FB               	addwf	main@temp& (0+255),w,b
  3876  00D424  0101               	movlb	1	; () banked
  3877  00D426  6FF9               	movwf	main@mode_bool& (0+255),b
  3878  00D428  6BFA               	clrf	(main@mode_bool+1)& (0+255),b
  3879  00D42A  0EFF               	movlw	255
  3880  00D42C  23FA               	addwfc	(main@mode_bool+1)& (0+255),f,b
  3881                           
  3882                           ; BSR set to: 1
  3883                           ;interface_main.c: 263: if (mode_bool == 1){
  3884  00D42E  05F9               	decf	main@mode_bool& (0+255),w,b
  3885  00D430  11FA               	iorwf	(main@mode_bool+1)& (0+255),w,b
  3886  00D432  A4D8               	btfss	status,2,c
  3887  00D434  D006               	goto	l223
  3888                           
  3889                           ; BSR set to: 1
  3890                           ;interface_main.c: 264: lcd_set_cursor(15, 0);
  3891  00D436  0E00               	movlw	0
  3892  00D438  6E07               	movwf	lcd_set_cursor@y,c
  3893  00D43A  0E0F               	movlw	15
  3894  00D43C  EC18  F052         	call	_lcd_set_cursor
  3895                           
  3896                           ;interface_main.c: 265: break;
  3897  00D440  D034               	goto	l224
  3898  00D442                     l223:
  3899                           
  3900                           ;interface_main.c: 267: else if (mode_bool == 2){
  3901  00D442  0E02               	movlw	2
  3902  00D444  0101               	movlb	1	; () banked
  3903  00D446  19F9               	xorwf	main@mode_bool& (0+255),w,b
  3904  00D448  11FA               	iorwf	(main@mode_bool+1)& (0+255),w,b
  3905  00D44A  A4D8               	btfss	status,2,c
  3906  00D44C  D006               	goto	l226
  3907                           
  3908                           ; BSR set to: 1
  3909                           ;interface_main.c: 268: lcd_set_cursor(15, 1);
  3910  00D44E  0E01               	movlw	1
  3911  00D450  6E07               	movwf	lcd_set_cursor@y,c
  3912  00D452  0E0F               	movlw	15
  3913  00D454  EC18  F052         	call	_lcd_set_cursor
  3914                           
  3915                           ;interface_main.c: 269: break;
  3916  00D458  D028               	goto	l224
  3917  00D45A                     l226:
  3918                           
  3919                           ;interface_main.c: 271: else{
  3920                           ;interface_main.c: 272: lcdInst(0x01);_delay((unsigned long)((15)*(40000000/4000.0)));;
  3921  00D45A  0E01               	movlw	1
  3922  00D45C  EC3E  F051         	call	_lcdInst
  3923  00D460  0EC3               	movlw	195
  3924  00D462  6E57               	movwf	??_main& (0+255),c
  3925  00D464  0ECD               	movlw	205
  3926  00D466                     u8957:
  3927  00D466  2EE8               	decfsz	wreg,f,c
  3928  00D468  D7FE               	bra	u8957
  3929  00D46A  2E57               	decfsz	??_main& (0+255),f,c
  3930  00D46C  D7FC               	bra	u8957
  3931  00D46E  F000               	nop	
  3932                           
  3933                           ;interface_main.c: 273: printf("Invalid Input");
  3934  00D470  0EC1               	movlw	low STR_10
  3935  00D472  6E0D               	movwf	printf@f,c
  3936  00D474  0EFE               	movlw	high STR_10
  3937  00D476  6E0E               	movwf	printf@f+1,c
  3938  00D478  EC66  F061         	call	_printf	;wreg free
  3939                           
  3940                           ;interface_main.c: 274: _delay((unsigned long)((1000)*(40000000/4000.0)));
  3941  00D47C  0E33               	movlw	51
  3942  00D47E  6E58               	movwf	(??_main+1)& (0+255),c
  3943  00D480  0EBB               	movlw	187
  3944  00D482  6E57               	movwf	??_main& (0+255),c
  3945  00D484  0EE0               	movlw	224
  3946  00D486                     u8967:
  3947  00D486  2EE8               	decfsz	wreg,f,c
  3948  00D488  D7FE               	bra	u8967
  3949  00D48A  2E57               	decfsz	??_main& (0+255),f,c
  3950  00D48C  D7FC               	bra	u8967
  3951  00D48E  2E58               	decfsz	(??_main+1)& (0+255),f,c
  3952  00D490  D7FA               	bra	u8967
  3953                           
  3954                           ;interface_main.c: 275: lcdInst(0x01);_delay((unsigned long)((15)*(40000000/4000.0)));;
  3955  00D492  0E01               	movlw	1
  3956  00D494  EC3E  F051         	call	_lcdInst
  3957  00D498  0EC3               	movlw	195
  3958  00D49A  6E57               	movwf	??_main& (0+255),c
  3959  00D49C  0ECD               	movlw	205
  3960  00D49E                     u8977:
  3961  00D49E  2EE8               	decfsz	wreg,f,c
  3962  00D4A0  D7FE               	bra	u8977
  3963  00D4A2  2E57               	decfsz	??_main& (0+255),f,c
  3964  00D4A4  D7FC               	bra	u8977
  3965  00D4A6  F000               	nop	
  3966                           
  3967                           ;interface_main.c: 276: continue;
  3968  00D4A8  D77D               	goto	l216
  3969  00D4AA                     l224:
  3970                           
  3971                           ;interface_main.c: 277: }
  3972                           ;interface_main.c: 278: }
  3973                           ;interface_main.c: 279: printf("<");
  3974  00D4AA  0EFC               	movlw	low STR_11
  3975  00D4AC  6E0D               	movwf	printf@f,c
  3976  00D4AE  0EFF               	movlw	high STR_11
  3977  00D4B0  6E0E               	movwf	printf@f+1,c
  3978  00D4B2  EC66  F061         	call	_printf	;wreg free
  3979                           
  3980                           ;interface_main.c: 280: _delay((unsigned long)((300)*(40000000/4000.0)));
  3981  00D4B6  0E10               	movlw	16
  3982  00D4B8  6E58               	movwf	(??_main+1)& (0+255),c
  3983  00D4BA  0E39               	movlw	57
  3984  00D4BC  6E57               	movwf	??_main& (0+255),c
  3985  00D4BE  0E0E               	movlw	14
  3986  00D4C0                     u8987:
  3987  00D4C0  2EE8               	decfsz	wreg,f,c
  3988  00D4C2  D7FE               	bra	u8987
  3989  00D4C4  2E57               	decfsz	??_main& (0+255),f,c
  3990  00D4C6  D7FC               	bra	u8987
  3991  00D4C8  2E58               	decfsz	(??_main+1)& (0+255),f,c
  3992  00D4CA  D7FA               	bra	u8987
  3993                           
  3994                           ;interface_main.c: 281: lcdInst(0x80);_delay((unsigned long)((5)*(40000000/4000.0)));;
  3995  00D4CC  0E80               	movlw	128
  3996  00D4CE  EC3E  F051         	call	_lcdInst
  3997  00D4D2  0E41               	movlw	65
  3998  00D4D4  6E57               	movwf	??_main& (0+255),c
  3999  00D4D6  0EEE               	movlw	238
  4000  00D4D8                     u8997:
  4001  00D4D8  2EE8               	decfsz	wreg,f,c
  4002  00D4DA  D7FE               	bra	u8997
  4003  00D4DC  2E57               	decfsz	??_main& (0+255),f,c
  4004  00D4DE  D7FC               	bra	u8997
  4005  00D4E0  D000               	nop2	
  4006                           
  4007                           ;interface_main.c: 282: lcdInst(0x01);_delay((unsigned long)((15)*(40000000/4000.0)));;
  4008  00D4E2  0E01               	movlw	1
  4009  00D4E4  EC3E  F051         	call	_lcdInst
  4010  00D4E8  0EC3               	movlw	195
  4011  00D4EA  6E57               	movwf	??_main& (0+255),c
  4012  00D4EC  0ECD               	movlw	205
  4013  00D4EE                     u9007:
  4014  00D4EE  2EE8               	decfsz	wreg,f,c
  4015  00D4F0  D7FE               	bra	u9007
  4016  00D4F2  2E57               	decfsz	??_main& (0+255),f,c
  4017  00D4F4  D7FC               	bra	u9007
  4018  00D4F6  F000               	nop	
  4019                           
  4020                           ;interface_main.c: 283: tot_drawers = 0;
  4021  00D4F8  0E00               	movlw	0
  4022  00D4FA  0101               	movlb	1	; () banked
  4023  00D4FC  6FFD               	movwf	(main@tot_drawers+1)& (0+255),b
  4024  00D4FE  0E00               	movlw	0
  4025  00D500  6FFC               	movwf	main@tot_drawers& (0+255),b
  4026                           
  4027                           ; BSR set to: 1
  4028                           ;interface_main.c: 284: for (i = 0; i < 16; i++){
  4029  00D502  0E00               	movlw	0
  4030  00D504  0102               	movlb	2	; () banked
  4031  00D506  6FFD               	movwf	(main@i+1)& (0+255),b
  4032  00D508  0E00               	movlw	0
  4033  00D50A  6FFC               	movwf	main@i& (0+255),b
  4034  00D50C                     l7306:
  4035                           
  4036                           ; BSR set to: 2
  4037  00D50C  BFFD               	btfsc	(main@i+1)& (0+255),7,b
  4038  00D50E  D006               	goto	l229
  4039  00D510  51FD               	movf	(main@i+1)& (0+255),w,b
  4040  00D512  E136               	bnz	l7326
  4041  00D514  0E10               	movlw	16
  4042  00D516  5DFC               	subwf	main@i& (0+255),w,b
  4043  00D518  B0D8               	btfsc	status,0,c
  4044  00D51A  D032               	goto	u7050
  4045  00D51C                     l229:
  4046                           
  4047                           ; BSR set to: 2
  4048                           ;interface_main.c: 285: for (j = 0; j < 3; j++){
  4049                           
  4050                           ; BSR set to: 2
  4051  00D51C  0E00               	movlw	0
  4052  00D51E  6FFA               	movwf	(main@j+1)& (0+255),b
  4053  00D520  0E00               	movlw	0
  4054  00D522  6FF9               	movwf	main@j& (0+255),b
  4055  00D524                     l7312:
  4056                           
  4057                           ; BSR set to: 2
  4058  00D524  BFFA               	btfsc	(main@j+1)& (0+255),7,b
  4059  00D526  D006               	goto	l231
  4060  00D528  51FA               	movf	(main@j+1)& (0+255),w,b
  4061  00D52A  E127               	bnz	l7322
  4062  00D52C  0E03               	movlw	3
  4063  00D52E  5DF9               	subwf	main@j& (0+255),w,b
  4064  00D530  B0D8               	btfsc	status,0,c
  4065  00D532  D023               	goto	u7040
  4066  00D534                     l231:
  4067                           
  4068                           ; BSR set to: 2
  4069                           ;interface_main.c: 286: mat[i][j] = 0;}}
  4070                           
  4071                           ; BSR set to: 2
  4072  00D534  C2FC  F001         	movff	main@i,___wmul@multiplier
  4073  00D538  C2FD  F002         	movff	main@i+1,___wmul@multiplier+1
  4074  00D53C  0E00               	movlw	0
  4075  00D53E  6E04               	movwf	___wmul@multiplicand+1,c
  4076  00D540  0E06               	movlw	6
  4077  00D542  6E03               	movwf	___wmul@multiplicand,c
  4078  00D544  ECB7  F051         	call	___wmul	;wreg free
  4079  00D548  0E80               	movlw	low main@mat
  4080  00D54A  6E57               	movwf	??_main& (0+255),c
  4081  00D54C  0E00               	movlw	high main@mat
  4082  00D54E  6E58               	movwf	(??_main+1)& (0+255),c
  4083  00D550  5001               	movf	?___wmul,w,c
  4084  00D552  2657               	addwf	??_main,f,c
  4085  00D554  5002               	movf	?___wmul+1,w,c
  4086  00D556  2258               	addwfc	??_main+1,f,c
  4087  00D558  90D8               	bcf	status,0,c
  4088  00D55A  0102               	movlb	2	; () banked
  4089  00D55C  35F9               	rlcf	main@j& (0+255),w,b
  4090  00D55E  6ED9               	movwf	fsr2l,c
  4091  00D560  35FA               	rlcf	(main@j+1)& (0+255),w,b
  4092  00D562  6EDA               	movwf	fsr2h,c
  4093  00D564  5057               	movf	??_main,w,c
  4094  00D566  26D9               	addwf	fsr2l,f,c
  4095  00D568  5058               	movf	??_main+1,w,c
  4096  00D56A  22DA               	addwfc	fsr2h,f,c
  4097  00D56C  0E00               	movlw	0
  4098  00D56E  6EDE               	movwf	postinc2,c
  4099  00D570  0E00               	movlw	0
  4100  00D572  6EDD               	movwf	postdec2,c
  4101                           
  4102                           ; BSR set to: 2
  4103  00D574  4BF9               	infsnz	main@j& (0+255),f,b
  4104  00D576  2BFA               	incf	(main@j+1)& (0+255),f,b
  4105  00D578  D7D5               	goto	l7312
  4106  00D57A                     u7040:
  4107  00D57A                     l7322:
  4108                           
  4109                           ; BSR set to: 2
  4110  00D57A  4BFC               	infsnz	main@i& (0+255),f,b
  4111  00D57C  2BFD               	incf	(main@i+1)& (0+255),f,b
  4112  00D57E  D7C6               	goto	l7306
  4113  00D580                     u7050:
  4114  00D580                     l7326:
  4115                           
  4116                           ; BSR set to: 2
  4117                           ;interface_main.c: 288: printf("Press B for");
  4118  00D580  0E01               	movlw	low STR_16
  4119  00D582  6E0D               	movwf	printf@f,c
  4120  00D584  0EFF               	movlw	high STR_16
  4121  00D586  6E0E               	movwf	printf@f+1,c
  4122  00D588  EC66  F061         	call	_printf	;wreg free
  4123                           
  4124                           ;interface_main.c: 289: lcdInst(0xC0);;
  4125  00D58C  0EC0               	movlw	192
  4126  00D58E  EC3E  F051         	call	_lcdInst
  4127                           
  4128                           ;interface_main.c: 290: printf("Mode Selection");
  4129  00D592  0E79               	movlw	low STR_17
  4130  00D594  6E0D               	movwf	printf@f,c
  4131  00D596  0EFE               	movlw	high STR_17
  4132  00D598  6E0E               	movwf	printf@f+1,c
  4133  00D59A  EC66  F061         	call	_printf	;wreg free
  4134                           
  4135                           ;interface_main.c: 291: _delay((unsigned long)((2000)*(40000000/4000.0)));
  4136  00D59E  0E66               	movlw	102
  4137  00D5A0  6E58               	movwf	(??_main+1)& (0+255),c
  4138  00D5A2  0E76               	movlw	118
  4139  00D5A4  6E57               	movwf	??_main& (0+255),c
  4140  00D5A6  0EC1               	movlw	193
  4141  00D5A8                     u9017:
  4142  00D5A8  2EE8               	decfsz	wreg,f,c
  4143  00D5AA  D7FE               	bra	u9017
  4144  00D5AC  2E57               	decfsz	??_main& (0+255),f,c
  4145  00D5AE  D7FC               	bra	u9017
  4146  00D5B0  2E58               	decfsz	(??_main+1)& (0+255),f,c
  4147  00D5B2  D7FA               	bra	u9017
  4148  00D5B4  F000               	nop	
  4149                           
  4150                           ;interface_main.c: 292: lcdInst(0x80);_delay((unsigned long)((5)*(40000000/4000.0)));;
  4151  00D5B6  0E80               	movlw	128
  4152  00D5B8  EC3E  F051         	call	_lcdInst
  4153  00D5BC  0E41               	movlw	65
  4154  00D5BE  6E57               	movwf	??_main& (0+255),c
  4155  00D5C0  0EEE               	movlw	238
  4156  00D5C2                     u9027:
  4157  00D5C2  2EE8               	decfsz	wreg,f,c
  4158  00D5C4  D7FE               	bra	u9027
  4159  00D5C6  2E57               	decfsz	??_main& (0+255),f,c
  4160  00D5C8  D7FC               	bra	u9027
  4161  00D5CA  D000               	nop2	
  4162                           
  4163                           ;interface_main.c: 293: lcdInst(0x01);_delay((unsigned long)((15)*(40000000/4000.0)));;
  4164  00D5CC  0E01               	movlw	1
  4165  00D5CE  EC3E  F051         	call	_lcdInst
  4166  00D5D2  0EC3               	movlw	195
  4167  00D5D4  6E57               	movwf	??_main& (0+255),c
  4168  00D5D6  0ECD               	movlw	205
  4169  00D5D8                     u9037:
  4170  00D5D8  2EE8               	decfsz	wreg,f,c
  4171  00D5DA  D7FE               	bra	u9037
  4172  00D5DC  2E57               	decfsz	??_main& (0+255),f,c
  4173  00D5DE  D7FC               	bra	u9037
  4174  00D5E0  F000               	nop	
  4175                           
  4176                           ;interface_main.c: 296: if (mode_bool == 1){
  4177  00D5E2  0101               	movlb	1	; () banked
  4178  00D5E4  05F9               	decf	main@mode_bool& (0+255),w,b
  4179  00D5E6  11FA               	iorwf	(main@mode_bool+1)& (0+255),w,b
  4180  00D5E8  A4D8               	btfss	status,2,c
  4181  00D5EA  EF96  F078         	goto	l437
  4182  00D5EE                     u7060:
  4183                           
  4184                           ;interface_main.c: 300: lcdInst(0x80);_delay((unsigned long)((5)*(40000000/4000.0)));;
  4185                           
  4186                           ; BSR set to: 1
  4187                           
  4188                           ;interface_main.c: 298: while(1){
  4189  00D5EE  0E80               	movlw	128
  4190  00D5F0  EC3E  F051         	call	_lcdInst
  4191  00D5F4  0E41               	movlw	65
  4192  00D5F6  6E57               	movwf	??_main& (0+255),c
  4193  00D5F8  0EEE               	movlw	238
  4194  00D5FA                     u9047:
  4195  00D5FA  2EE8               	decfsz	wreg,f,c
  4196  00D5FC  D7FE               	bra	u9047
  4197  00D5FE  2E57               	decfsz	??_main& (0+255),f,c
  4198  00D600  D7FC               	bra	u9047
  4199  00D602  D000               	nop2	
  4200                           
  4201                           ;interface_main.c: 301: lcdInst(0x01);_delay((unsigned long)((15)*(40000000/4000.0)));;
  4202  00D604  0E01               	movlw	1
  4203  00D606  EC3E  F051         	call	_lcdInst
  4204  00D60A  0EC3               	movlw	195
  4205  00D60C  6E57               	movwf	??_main& (0+255),c
  4206  00D60E  0ECD               	movlw	205
  4207  00D610                     u9057:
  4208  00D610  2EE8               	decfsz	wreg,f,c
  4209  00D612  D7FE               	bra	u9057
  4210  00D614  2E57               	decfsz	??_main& (0+255),f,c
  4211  00D616  D7FC               	bra	u9057
  4212  00D618  F000               	nop	
  4213                           
  4214                           ;interface_main.c: 302: printf("Manual Control:");
  4215  00D61A  0ECD               	movlw	low STR_18
  4216  00D61C  6E0D               	movwf	printf@f,c
  4217  00D61E  0EFD               	movlw	high STR_18
  4218  00D620  6E0E               	movwf	printf@f+1,c
  4219  00D622  EC66  F061         	call	_printf	;wreg free
  4220                           
  4221                           ;interface_main.c: 303: lcdInst(0xC0);;
  4222  00D626  0EC0               	movlw	192
  4223  00D628  EC3E  F051         	call	_lcdInst
  4224                           
  4225                           ;interface_main.c: 304: printf("Yes: 1   No: 2");
  4226  00D62C  0E4C               	movlw	low STR_19
  4227  00D62E  6E0D               	movwf	printf@f,c
  4228  00D630  0EFE               	movlw	high STR_19
  4229  00D632  6E0E               	movwf	printf@f+1,c
  4230  00D634  EC66  F061         	call	_printf	;wreg free
  4231  00D638  A281               	btfss	3969,1,c	;volatile
  4232  00D63A  D7FE               	goto	l236
  4233                           
  4234                           ;interface_main.c: 306: keypress = (PORTB & 0xF0) >> 4;
  4235  00D63C  3881               	swapf	3969,w,c	;volatile
  4236  00D63E  0B0F               	andlw	15
  4237  00D640  0B0F               	andlw	15
  4238  00D642  0102               	movlb	2	; () banked
  4239  00D644  6FF7               	movwf	main@keypress& (0+255),b
  4240  00D646                     
  4241                           ; BSR set to: 2
  4242  00D646  B281               	btfsc	3969,1,c	;volatile
  4243  00D648  D7FE               	goto	l239
  4244                           
  4245                           ;interface_main.c: 308: __nop();
  4246  00D64A  F000               	nop	
  4247                           
  4248                           ;interface_main.c: 309: temp = keys[keypress];
  4249  00D64C  0102               	movlb	2	; () banked
  4250  00D64E  51F7               	movf	main@keypress& (0+255),w,b
  4251  00D650  0D01               	mullw	1
  4252  00D652  0E92               	movlw	low _keys
  4253  00D654  24F3               	addwf	prodl,w,c
  4254  00D656  6EF6               	movwf	tblptrl,c
  4255  00D658  0EFB               	movlw	high _keys
  4256  00D65A  20F4               	addwfc	prodh,w,c
  4257  00D65C  6EF7               	movwf	tblptrh,c
  4258  00D65E                     	if	1	;There are 3 active tblptr bytes
  4259  00D65E  6AF8               	clrf	tblptru,c
  4260  00D660  0E00               	movlw	low (__mediumconst shr (0+16))
  4261  00D662  22F8               	addwfc	tblptru,f,c
  4262  00D664                     	endif
  4263  00D664  0008               	tblrd		*
  4264  00D666  CFF5 F2FB          	movff	tablat,main@temp
  4265                           
  4266                           ; BSR set to: 2
  4267                           ;interface_main.c: 311: if (temp == '1'){
  4268  00D66A  0E31               	movlw	49
  4269  00D66C  19FB               	xorwf	main@temp& (0+255),w,b
  4270  00D66E  A4D8               	btfss	status,2,c
  4271  00D670  D288               	goto	l241
  4272  00D672                     u7090:
  4273                           
  4274                           ;interface_main.c: 314: lcdInst(0x80);_delay((unsigned long)((5)*(40000000/4000.0)));;
  4275                           
  4276                           ; BSR set to: 2
  4277                           
  4278                           ;interface_main.c: 313: while (1){
  4279  00D672  0E80               	movlw	128
  4280  00D674  EC3E  F051         	call	_lcdInst
  4281  00D678  0E41               	movlw	65
  4282  00D67A  6E57               	movwf	??_main& (0+255),c
  4283  00D67C  0EEE               	movlw	238
  4284  00D67E                     u9067:
  4285  00D67E  2EE8               	decfsz	wreg,f,c
  4286  00D680  D7FE               	bra	u9067
  4287  00D682  2E57               	decfsz	??_main& (0+255),f,c
  4288  00D684  D7FC               	bra	u9067
  4289  00D686  D000               	nop2	
  4290                           
  4291                           ;interface_main.c: 315: lcdInst(0x01);_delay((unsigned long)((15)*(40000000/4000.0)));;
  4292  00D688  0E01               	movlw	1
  4293  00D68A  EC3E  F051         	call	_lcdInst
  4294  00D68E  0EC3               	movlw	195
  4295  00D690  6E57               	movwf	??_main& (0+255),c
  4296  00D692  0ECD               	movlw	205
  4297  00D694                     u9077:
  4298  00D694  2EE8               	decfsz	wreg,f,c
  4299  00D696  D7FE               	bra	u9077
  4300  00D698  2E57               	decfsz	??_main& (0+255),f,c
  4301  00D69A  D7FC               	bra	u9077
  4302  00D69C  F000               	nop	
  4303                           
  4304                           ;interface_main.c: 317: printf("Height:1  Hook:2");
  4305  00D69E  0E79               	movlw	low STR_20
  4306  00D6A0  6E0D               	movwf	printf@f,c
  4307  00D6A2  0EFD               	movlw	high STR_20
  4308  00D6A4  6E0E               	movwf	printf@f+1,c
  4309  00D6A6  EC66  F061         	call	_printf	;wreg free
  4310                           
  4311                           ;interface_main.c: 318: lcdInst(0xC0);;
  4312  00D6AA  0EC0               	movlw	192
  4313  00D6AC  EC3E  F051         	call	_lcdInst
  4314                           
  4315                           ;interface_main.c: 319: printf("Unload Rest: 3");
  4316  00D6B0  0E5B               	movlw	low STR_21
  4317  00D6B2  6E0D               	movwf	printf@f,c
  4318  00D6B4  0EFE               	movlw	high STR_21
  4319  00D6B6  6E0E               	movwf	printf@f+1,c
  4320  00D6B8  EC66  F061         	call	_printf	;wreg free
  4321                           
  4322                           ;interface_main.c: 321: _delay((unsigned long)((250)*(40000000/4000.0)));
  4323  00D6BC  0E0D               	movlw	13
  4324  00D6BE  6E58               	movwf	(??_main+1)& (0+255),c
  4325  00D6C0  0EAF               	movlw	175
  4326  00D6C2  6E57               	movwf	??_main& (0+255),c
  4327  00D6C4  0EB6               	movlw	182
  4328  00D6C6                     u9087:
  4329  00D6C6  2EE8               	decfsz	wreg,f,c
  4330  00D6C8  D7FE               	bra	u9087
  4331  00D6CA  2E57               	decfsz	??_main& (0+255),f,c
  4332  00D6CC  D7FC               	bra	u9087
  4333  00D6CE  2E58               	decfsz	(??_main+1)& (0+255),f,c
  4334  00D6D0  D7FA               	bra	u9087
  4335  00D6D2  D000               	nop2	
  4336  00D6D4  A281               	btfss	3969,1,c	;volatile
  4337  00D6D6  D7FE               	goto	l244
  4338                           
  4339                           ;interface_main.c: 323: keypress = (PORTB & 0xF0) >> 4;
  4340  00D6D8  3881               	swapf	3969,w,c	;volatile
  4341  00D6DA  0B0F               	andlw	15
  4342  00D6DC  0B0F               	andlw	15
  4343  00D6DE  0102               	movlb	2	; () banked
  4344  00D6E0  6FF7               	movwf	main@keypress& (0+255),b
  4345  00D6E2                     
  4346                           ; BSR set to: 2
  4347  00D6E2  B281               	btfsc	3969,1,c	;volatile
  4348  00D6E4  D7FE               	goto	l247
  4349                           
  4350                           ;interface_main.c: 325: __nop();
  4351  00D6E6  F000               	nop	
  4352                           
  4353                           ;interface_main.c: 326: temp = keys[keypress];
  4354  00D6E8  0102               	movlb	2	; () banked
  4355  00D6EA  51F7               	movf	main@keypress& (0+255),w,b
  4356  00D6EC  0D01               	mullw	1
  4357  00D6EE  0E92               	movlw	low _keys
  4358  00D6F0  24F3               	addwf	prodl,w,c
  4359  00D6F2  6EF6               	movwf	tblptrl,c
  4360  00D6F4  0EFB               	movlw	high _keys
  4361  00D6F6  20F4               	addwfc	prodh,w,c
  4362  00D6F8  6EF7               	movwf	tblptrh,c
  4363  00D6FA                     	if	1	;There are 3 active tblptr bytes
  4364  00D6FA  6AF8               	clrf	tblptru,c
  4365  00D6FC  0E00               	movlw	low (__mediumconst shr (0+16))
  4366  00D6FE  22F8               	addwfc	tblptru,f,c
  4367  00D700                     	endif
  4368  00D700  0008               	tblrd		*
  4369  00D702  CFF5 F2FB          	movff	tablat,main@temp
  4370                           
  4371                           ; BSR set to: 2
  4372                           ;interface_main.c: 328: lcdInst(0x80);_delay((unsigned long)((5)*(40000000/4000.0)));;
  4373  00D706  0E80               	movlw	128
  4374  00D708  EC3E  F051         	call	_lcdInst
  4375  00D70C  0E41               	movlw	65
  4376  00D70E  6E57               	movwf	??_main& (0+255),c
  4377  00D710  0EEE               	movlw	238
  4378  00D712                     u9097:
  4379  00D712  2EE8               	decfsz	wreg,f,c
  4380  00D714  D7FE               	bra	u9097
  4381  00D716  2E57               	decfsz	??_main& (0+255),f,c
  4382  00D718  D7FC               	bra	u9097
  4383  00D71A  D000               	nop2	
  4384                           
  4385                           ;interface_main.c: 329: lcdInst(0x01);_delay((unsigned long)((15)*(40000000/4000.0)));;
  4386  00D71C  0E01               	movlw	1
  4387  00D71E  EC3E  F051         	call	_lcdInst
  4388  00D722  0EC3               	movlw	195
  4389  00D724  6E57               	movwf	??_main& (0+255),c
  4390  00D726  0ECD               	movlw	205
  4391  00D728                     u9107:
  4392  00D728  2EE8               	decfsz	wreg,f,c
  4393  00D72A  D7FE               	bra	u9107
  4394  00D72C  2E57               	decfsz	??_main& (0+255),f,c
  4395  00D72E  D7FC               	bra	u9107
  4396  00D730  F000               	nop	
  4397                           
  4398                           ;interface_main.c: 332: if ((temp - '0' > 0)&&(temp - '0' < 4)){
  4399  00D732  0ED0               	movlw	208
  4400  00D734  6E57               	movwf	??_main& (0+255),c
  4401  00D736  0EFF               	movlw	255
  4402  00D738  6E58               	movwf	(??_main+1)& (0+255),c
  4403  00D73A  0102               	movlb	2	; () banked
  4404  00D73C  51FB               	movf	main@temp& (0+255),w,b
  4405  00D73E  6E59               	movwf	(??_main+2)& (0+255),c
  4406  00D740  6A5A               	clrf	(??_main+3)& (0+255),c
  4407  00D742  5057               	movf	??_main,w,c
  4408  00D744  2659               	addwf	??_main+2,f,c
  4409  00D746  5058               	movf	??_main+1,w,c
  4410  00D748  225A               	addwfc	??_main+3,f,c
  4411  00D74A  5059               	movf	??_main+2,w,c
  4412  00D74C  105A               	iorwf	??_main+3,w,c
  4413  00D74E  B4D8               	btfsc	status,2,c
  4414  00D750  D041               	goto	l249
  4415                           
  4416                           ; BSR set to: 2
  4417  00D752  0ED0               	movlw	208
  4418  00D754  6E57               	movwf	??_main& (0+255),c
  4419  00D756  0EFF               	movlw	255
  4420  00D758  6E58               	movwf	(??_main+1)& (0+255),c
  4421  00D75A  51FB               	movf	main@temp& (0+255),w,b
  4422  00D75C  6E59               	movwf	(??_main+2)& (0+255),c
  4423  00D75E  6A5A               	clrf	(??_main+3)& (0+255),c
  4424  00D760  5057               	movf	??_main,w,c
  4425  00D762  2659               	addwf	??_main+2,f,c
  4426  00D764  5058               	movf	??_main+1,w,c
  4427  00D766  225A               	addwfc	??_main+3,f,c
  4428  00D768  505A               	movf	??_main+3,w,c
  4429  00D76A  E134               	bnz	l7404
  4430  00D76C  0E04               	movlw	4
  4431  00D76E  5C59               	subwf	??_main+2,w,c
  4432  00D770  B0D8               	btfsc	status,0,c
  4433  00D772  D030               	goto	l249
  4434                           
  4435                           ; BSR set to: 2
  4436                           ;interface_main.c: 333: printf("Press D");
  4437  00D774  0EA6               	movlw	low STR_22
  4438  00D776  6E0D               	movwf	printf@f,c
  4439  00D778  0EFF               	movlw	high STR_22
  4440  00D77A  6E0E               	movwf	printf@f+1,c
  4441  00D77C  EC66  F061         	call	_printf	;wreg free
  4442                           
  4443                           ;interface_main.c: 334: lcdInst(0xC0);;
  4444  00D780  0EC0               	movlw	192
  4445  00D782  EC3E  F051         	call	_lcdInst
  4446                           
  4447                           ;interface_main.c: 335: printf("when done");
  4448  00D786  0E65               	movlw	low STR_23
  4449  00D788  6E0D               	movwf	printf@f,c
  4450  00D78A  0EFF               	movlw	high STR_23
  4451  00D78C  6E0E               	movwf	printf@f+1,c
  4452  00D78E  EC66  F061         	call	_printf	;wreg free
  4453                           
  4454                           ;interface_main.c: 336: _delay((unsigned long)((1500)*(40000000/4000.0)));
  4455  00D792  0E4D               	movlw	77
  4456  00D794  6E58               	movwf	(??_main+1)& (0+255),c
  4457  00D796  0E19               	movlw	25
  4458  00D798  6E57               	movwf	??_main& (0+255),c
  4459  00D79A  0E50               	movlw	80
  4460  00D79C                     u9117:
  4461  00D79C  2EE8               	decfsz	wreg,f,c
  4462  00D79E  D7FE               	bra	u9117
  4463  00D7A0  2E57               	decfsz	??_main& (0+255),f,c
  4464  00D7A2  D7FC               	bra	u9117
  4465  00D7A4  2E58               	decfsz	(??_main+1)& (0+255),f,c
  4466  00D7A6  D7FA               	bra	u9117
  4467                           
  4468                           ;interface_main.c: 337: lcdInst(0x01);_delay((unsigned long)((15)*(40000000/4000.0)));;
  4469  00D7A8  0E01               	movlw	1
  4470  00D7AA  EC3E  F051         	call	_lcdInst
  4471  00D7AE  0EC3               	movlw	195
  4472  00D7B0  6E57               	movwf	??_main& (0+255),c
  4473  00D7B2  0ECD               	movlw	205
  4474  00D7B4                     u9127:
  4475  00D7B4  2EE8               	decfsz	wreg,f,c
  4476  00D7B6  D7FE               	bra	u9127
  4477  00D7B8  2E57               	decfsz	??_main& (0+255),f,c
  4478  00D7BA  D7FC               	bra	u9127
  4479  00D7BC  F000               	nop	
  4480                           
  4481                           ;interface_main.c: 338: lcdInst(0x80);_delay((unsigned long)((5)*(40000000/4000.0)));;
  4482  00D7BE  0E80               	movlw	128
  4483  00D7C0  EC3E  F051         	call	_lcdInst
  4484  00D7C4  0E41               	movlw	65
  4485  00D7C6  6E57               	movwf	??_main& (0+255),c
  4486  00D7C8  0EEE               	movlw	238
  4487  00D7CA                     u9137:
  4488  00D7CA  2EE8               	decfsz	wreg,f,c
  4489  00D7CC  D7FE               	bra	u9137
  4490  00D7CE  2E57               	decfsz	??_main& (0+255),f,c
  4491  00D7D0  D7FC               	bra	u9137
  4492  00D7D2  D000               	nop2	
  4493  00D7D4                     l249:
  4494  00D7D4                     l7404:
  4495                           
  4496                           ;interface_main.c: 339: }
  4497                           ;interface_main.c: 341: if (temp == '1'){
  4498  00D7D4  0E31               	movlw	49
  4499  00D7D6  0102               	movlb	2	; () banked
  4500  00D7D8  19FB               	xorwf	main@temp& (0+255),w,b
  4501  00D7DA  A4D8               	btfss	status,2,c
  4502  00D7DC  D06C               	goto	l250
  4503                           
  4504                           ; BSR set to: 2
  4505                           ;interface_main.c: 342: printf("Raise: A");
  4506  00D7DE  0E82               	movlw	low STR_24
  4507  00D7E0  6E0D               	movwf	printf@f,c
  4508  00D7E2  0EFF               	movlw	high STR_24
  4509  00D7E4  6E0E               	movwf	printf@f+1,c
  4510  00D7E6  EC66  F061         	call	_printf	;wreg free
  4511                           
  4512                           ;interface_main.c: 343: lcdInst(0xC0);;
  4513  00D7EA  0EC0               	movlw	192
  4514  00D7EC  EC3E  F051         	call	_lcdInst
  4515                           
  4516                           ;interface_main.c: 344: printf("Lower: B");
  4517  00D7F0  0E8B               	movlw	low STR_25
  4518  00D7F2  6E0D               	movwf	printf@f,c
  4519  00D7F4  0EFF               	movlw	high STR_25
  4520  00D7F6  6E0E               	movwf	printf@f+1,c
  4521  00D7F8  EC66  F061         	call	_printf	;wreg free
  4522                           
  4523                           ;interface_main.c: 346: man_cont_data[0] = 'J';
  4524  00D7FC  0E4A               	movlw	74
  4525  00D7FE  0102               	movlb	2	; () banked
  4526  00D800  6FE6               	movwf	_man_cont_data& (0+255),b
  4527                           
  4528                           ; BSR set to: 2
  4529                           ;interface_main.c: 347: uartTransmitBlocking(man_cont_data, 1);
  4530  00D802  0EE6               	movlw	low _man_cont_data
  4531  00D804  6E01               	movwf	uartTransmitBlocking@data,c
  4532  00D806  0E02               	movlw	high _man_cont_data
  4533  00D808  6E02               	movwf	uartTransmitBlocking@data+1,c
  4534  00D80A  0E01               	movlw	1
  4535  00D80C  6E03               	movwf	uartTransmitBlocking@numBytes,c
  4536  00D80E  ECD4  F054         	call	_uartTransmitBlocking	;wreg free
  4537  00D812                     
  4538                           ;interface_main.c: 349: while(PORTBbits.RB1 == 0){ continue; }
  4539  00D812  A281               	btfss	3969,1,c	;volatile
  4540  00D814  D7FE               	goto	l251
  4541                           
  4542                           ;interface_main.c: 350: keypress = (PORTB & 0xF0) >> 4;
  4543  00D816  3881               	swapf	3969,w,c	;volatile
  4544  00D818  0B0F               	andlw	15
  4545  00D81A  0B0F               	andlw	15
  4546  00D81C  0102               	movlb	2	; () banked
  4547  00D81E  6FF7               	movwf	main@keypress& (0+255),b
  4548                           
  4549                           ; BSR set to: 2
  4550                           ;interface_main.c: 351: _delay((unsigned long)((20)*(40000000/4000.0)));
  4551  00D820  0E02               	movlw	2
  4552  00D822  6E58               	movwf	(??_main+1)& (0+255),c
  4553  00D824  0E04               	movlw	4
  4554  00D826  6E57               	movwf	??_main& (0+255),c
  4555  00D828  0EBA               	movlw	186
  4556  00D82A                     u9147:
  4557  00D82A  2EE8               	decfsz	wreg,f,c
  4558  00D82C  D7FE               	bra	u9147
  4559  00D82E  2E57               	decfsz	??_main& (0+255),f,c
  4560  00D830  D7FC               	bra	u9147
  4561  00D832  2E58               	decfsz	(??_main+1)& (0+255),f,c
  4562  00D834  D7FA               	bra	u9147
  4563  00D836  D000               	nop2	
  4564                           
  4565                           ;interface_main.c: 352: __nop();
  4566  00D838  F000               	nop	
  4567                           
  4568                           ;interface_main.c: 353: temp = keys[keypress];
  4569  00D83A  0102               	movlb	2	; () banked
  4570  00D83C  51F7               	movf	main@keypress& (0+255),w,b
  4571  00D83E  0D01               	mullw	1
  4572  00D840  0E92               	movlw	low _keys
  4573  00D842  24F3               	addwf	prodl,w,c
  4574  00D844  6EF6               	movwf	tblptrl,c
  4575  00D846  0EFB               	movlw	high _keys
  4576  00D848  20F4               	addwfc	prodh,w,c
  4577  00D84A  6EF7               	movwf	tblptrh,c
  4578  00D84C                     	if	1	;There are 3 active tblptr bytes
  4579  00D84C  6AF8               	clrf	tblptru,c
  4580  00D84E  0E00               	movlw	low (__mediumconst shr (0+16))
  4581  00D850  22F8               	addwfc	tblptru,f,c
  4582  00D852                     	endif
  4583  00D852  0008               	tblrd		*
  4584  00D854  CFF5 F2FB          	movff	tablat,main@temp
  4585                           
  4586                           ; BSR set to: 2
  4587                           ;interface_main.c: 355: if (temp == 'A'){
  4588  00D858  0E41               	movlw	65
  4589  00D85A  19FB               	xorwf	main@temp& (0+255),w,b
  4590  00D85C  A4D8               	btfss	status,2,c
  4591  00D85E  D00B               	goto	l255
  4592                           
  4593                           ; BSR set to: 2
  4594                           ;interface_main.c: 356: man_cont_data[0] = 'H';
  4595  00D860  0E48               	movlw	72
  4596  00D862  6FE6               	movwf	_man_cont_data& (0+255),b
  4597                           
  4598                           ; BSR set to: 2
  4599                           ;interface_main.c: 357: uartTransmitBlocking(man_cont_data, 1);
  4600  00D864  0EE6               	movlw	low _man_cont_data
  4601  00D866  6E01               	movwf	uartTransmitBlocking@data,c
  4602  00D868  0E02               	movlw	high _man_cont_data
  4603  00D86A  6E02               	movwf	uartTransmitBlocking@data+1,c
  4604  00D86C  0E01               	movlw	1
  4605  00D86E  6E03               	movwf	uartTransmitBlocking@numBytes,c
  4606  00D870  ECD4  F054         	call	_uartTransmitBlocking	;wreg free
  4607                           
  4608                           ;interface_main.c: 359: }
  4609                           
  4610                           ;interface_main.c: 358: continue;
  4611  00D874  D7CE               	goto	l251
  4612  00D876                     l255:
  4613                           
  4614                           ;interface_main.c: 361: else if (temp == 'B'){
  4615  00D876  0E42               	movlw	66
  4616  00D878  0102               	movlb	2	; () banked
  4617  00D87A  19FB               	xorwf	main@temp& (0+255),w,b
  4618  00D87C  A4D8               	btfss	status,2,c
  4619  00D87E  D00B               	goto	l258
  4620                           
  4621                           ; BSR set to: 2
  4622                           ;interface_main.c: 362: man_cont_data[0] = 'I';
  4623  00D880  0E49               	movlw	73
  4624  00D882  6FE6               	movwf	_man_cont_data& (0+255),b
  4625                           
  4626                           ; BSR set to: 2
  4627                           ;interface_main.c: 363: uartTransmitBlocking(man_cont_data, 1);
  4628  00D884  0EE6               	movlw	low _man_cont_data
  4629  00D886  6E01               	movwf	uartTransmitBlocking@data,c
  4630  00D888  0E02               	movlw	high _man_cont_data
  4631  00D88A  6E02               	movwf	uartTransmitBlocking@data+1,c
  4632  00D88C  0E01               	movlw	1
  4633  00D88E  6E03               	movwf	uartTransmitBlocking@numBytes,c
  4634  00D890  ECD4  F054         	call	_uartTransmitBlocking	;wreg free
  4635                           
  4636                           ;interface_main.c: 365: }
  4637                           
  4638                           ;interface_main.c: 364: continue;
  4639  00D894  D7BE               	goto	l251
  4640  00D896                     l258:
  4641                           
  4642                           ;interface_main.c: 367: else if (temp == 'D'){
  4643  00D896  0E44               	movlw	68
  4644  00D898  0102               	movlb	2	; () banked
  4645  00D89A  19FB               	xorwf	main@temp& (0+255),w,b
  4646  00D89C  A4D8               	btfss	status,2,c
  4647  00D89E  D7B9               	goto	l251
  4648                           
  4649                           ; BSR set to: 2
  4650                           ;interface_main.c: 368: man_cont_data[0] = 'K';
  4651  00D8A0  0E4B               	movlw	75
  4652  00D8A2  6FE6               	movwf	_man_cont_data& (0+255),b
  4653                           
  4654                           ; BSR set to: 2
  4655                           ;interface_main.c: 369: uartTransmitBlocking(man_cont_data, 1);
  4656  00D8A4  0EE6               	movlw	low _man_cont_data
  4657  00D8A6  6E01               	movwf	uartTransmitBlocking@data,c
  4658  00D8A8  0E02               	movlw	high _man_cont_data
  4659  00D8AA  6E02               	movwf	uartTransmitBlocking@data+1,c
  4660  00D8AC  0E01               	movlw	1
  4661  00D8AE  6E03               	movwf	uartTransmitBlocking@numBytes,c
  4662  00D8B0  ECD4  F054         	call	_uartTransmitBlocking	;wreg free
  4663                           
  4664                           ;interface_main.c: 370: break;}
  4665  00D8B4  D6DE               	goto	u7090
  4666  00D8B6                     l250:
  4667                           
  4668                           ;interface_main.c: 374: else if (temp == '2'){
  4669  00D8B6  0E32               	movlw	50
  4670  00D8B8  0102               	movlb	2	; () banked
  4671  00D8BA  19FB               	xorwf	main@temp& (0+255),w,b
  4672  00D8BC  A4D8               	btfss	status,2,c
  4673  00D8BE  D04D               	goto	l264
  4674                           
  4675                           ; BSR set to: 2
  4676                           ;interface_main.c: 375: printf("Retract: 1");
  4677  00D8C0  0E2F               	movlw	low STR_26
  4678  00D8C2  6E0D               	movwf	printf@f,c
  4679  00D8C4  0EFF               	movlw	high STR_26
  4680  00D8C6  6E0E               	movwf	printf@f+1,c
  4681  00D8C8  EC66  F061         	call	_printf	;wreg free
  4682                           
  4683                           ;interface_main.c: 376: lcdInst(0xC0);;
  4684  00D8CC  0EC0               	movlw	192
  4685  00D8CE  EC3E  F051         	call	_lcdInst
  4686                           
  4687                           ;interface_main.c: 377: printf("Protract: 2");
  4688  00D8D2  0EE9               	movlw	low STR_27
  4689  00D8D4  6E0D               	movwf	printf@f,c
  4690  00D8D6  0EFE               	movlw	high STR_27
  4691  00D8D8  6E0E               	movwf	printf@f+1,c
  4692  00D8DA  EC66  F061         	call	_printf	;wreg free
  4693  00D8DE                     
  4694                           ;interface_main.c: 380: while(PORTBbits.RB1 == 0){ continue; }
  4695  00D8DE  A281               	btfss	3969,1,c	;volatile
  4696  00D8E0  D7FE               	goto	l265
  4697                           
  4698                           ;interface_main.c: 381: keypress = (PORTB & 0xF0) >> 4;
  4699  00D8E2  3881               	swapf	3969,w,c	;volatile
  4700  00D8E4  0B0F               	andlw	15
  4701  00D8E6  0B0F               	andlw	15
  4702  00D8E8  0102               	movlb	2	; () banked
  4703  00D8EA  6FF7               	movwf	main@keypress& (0+255),b
  4704  00D8EC                     
  4705                           ; BSR set to: 2
  4706  00D8EC  B281               	btfsc	3969,1,c	;volatile
  4707  00D8EE  D7FE               	goto	l270
  4708                           
  4709                           ;interface_main.c: 383: __nop();
  4710  00D8F0  F000               	nop	
  4711                           
  4712                           ;interface_main.c: 384: temp = keys[keypress];
  4713  00D8F2  0102               	movlb	2	; () banked
  4714  00D8F4  51F7               	movf	main@keypress& (0+255),w,b
  4715  00D8F6  0D01               	mullw	1
  4716  00D8F8  0E92               	movlw	low _keys
  4717  00D8FA  24F3               	addwf	prodl,w,c
  4718  00D8FC  6EF6               	movwf	tblptrl,c
  4719  00D8FE  0EFB               	movlw	high _keys
  4720  00D900  20F4               	addwfc	prodh,w,c
  4721  00D902  6EF7               	movwf	tblptrh,c
  4722  00D904                     	if	1	;There are 3 active tblptr bytes
  4723  00D904  6AF8               	clrf	tblptru,c
  4724  00D906  0E00               	movlw	low (__mediumconst shr (0+16))
  4725  00D908  22F8               	addwfc	tblptru,f,c
  4726  00D90A                     	endif
  4727  00D90A  0008               	tblrd		*
  4728  00D90C  CFF5 F2FB          	movff	tablat,main@temp
  4729                           
  4730                           ; BSR set to: 2
  4731                           ;interface_main.c: 386: if (temp == '1'){
  4732  00D910  0E31               	movlw	49
  4733  00D912  19FB               	xorwf	main@temp& (0+255),w,b
  4734  00D914  A4D8               	btfss	status,2,c
  4735  00D916  D00B               	goto	l272
  4736                           
  4737                           ; BSR set to: 2
  4738                           ;interface_main.c: 387: man_cont_data[0] = 'B';
  4739  00D918  0E42               	movlw	66
  4740  00D91A  6FE6               	movwf	_man_cont_data& (0+255),b
  4741                           
  4742                           ; BSR set to: 2
  4743                           ;interface_main.c: 388: uartTransmitBlocking(man_cont_data, 1);
  4744  00D91C  0EE6               	movlw	low _man_cont_data
  4745  00D91E  6E01               	movwf	uartTransmitBlocking@data,c
  4746  00D920  0E02               	movlw	high _man_cont_data
  4747  00D922  6E02               	movwf	uartTransmitBlocking@data+1,c
  4748  00D924  0E01               	movlw	1
  4749  00D926  6E03               	movwf	uartTransmitBlocking@numBytes,c
  4750  00D928  ECD4  F054         	call	_uartTransmitBlocking	;wreg free
  4751                           
  4752                           ;interface_main.c: 390: }
  4753                           
  4754                           ;interface_main.c: 389: continue;
  4755  00D92C  D7D8               	goto	l265
  4756  00D92E                     l272:
  4757                           
  4758                           ;interface_main.c: 392: else if (temp == '2'){
  4759  00D92E  0E32               	movlw	50
  4760  00D930  0102               	movlb	2	; () banked
  4761  00D932  19FB               	xorwf	main@temp& (0+255),w,b
  4762  00D934  A4D8               	btfss	status,2,c
  4763  00D936  D00B               	goto	l275
  4764                           
  4765                           ; BSR set to: 2
  4766                           ;interface_main.c: 393: man_cont_data[0] = 'C';
  4767  00D938  0E43               	movlw	67
  4768  00D93A  6FE6               	movwf	_man_cont_data& (0+255),b
  4769                           
  4770                           ; BSR set to: 2
  4771                           ;interface_main.c: 394: uartTransmitBlocking(man_cont_data, 1);
  4772  00D93C  0EE6               	movlw	low _man_cont_data
  4773  00D93E  6E01               	movwf	uartTransmitBlocking@data,c
  4774  00D940  0E02               	movlw	high _man_cont_data
  4775  00D942  6E02               	movwf	uartTransmitBlocking@data+1,c
  4776  00D944  0E01               	movlw	1
  4777  00D946  6E03               	movwf	uartTransmitBlocking@numBytes,c
  4778  00D948  ECD4  F054         	call	_uartTransmitBlocking	;wreg free
  4779                           
  4780                           ;interface_main.c: 396: }
  4781                           
  4782                           ;interface_main.c: 395: continue;
  4783  00D94C  D7C8               	goto	l265
  4784  00D94E                     l275:
  4785                           
  4786                           ;interface_main.c: 398: else if (temp == 'D'){
  4787  00D94E  0E44               	movlw	68
  4788  00D950  0102               	movlb	2	; () banked
  4789  00D952  19FB               	xorwf	main@temp& (0+255),w,b
  4790  00D954  B4D8               	btfsc	status,2,c
  4791  00D956  D68D               	goto	u7090
  4792  00D958  D7C2               	goto	l265
  4793  00D95A                     l264:
  4794                           
  4795                           ; BSR set to: 2
  4796                           ;interface_main.c: 403: else if (temp == '3'){
  4797                           
  4798                           ; BSR set to: 2
  4799  00D95A  0E33               	movlw	51
  4800  00D95C  19FB               	xorwf	main@temp& (0+255),w,b
  4801  00D95E  A4D8               	btfss	status,2,c
  4802  00D960  D0E4               	goto	l280
  4803                           
  4804                           ; BSR set to: 2
  4805                           ;interface_main.c: 404: printf("Unload Food");
  4806  00D962  0EF5               	movlw	low STR_28
  4807  00D964  6E0D               	movwf	printf@f,c
  4808  00D966  0EFE               	movlw	high STR_28
  4809  00D968  6E0E               	movwf	printf@f+1,c
  4810  00D96A  EC66  F061         	call	_printf	;wreg free
  4811                           
  4812                           ;interface_main.c: 405: lcdInst(0xC0);;
  4813  00D96E  0EC0               	movlw	192
  4814  00D970  EC3E  F051         	call	_lcdInst
  4815                           
  4816                           ;interface_main.c: 406: printf("R: 1  F: 2  L: 3");
  4817  00D974  0E8A               	movlw	low STR_29
  4818  00D976  6E0D               	movwf	printf@f,c
  4819  00D978  0EFD               	movlw	high STR_29
  4820  00D97A  6E0E               	movwf	printf@f+1,c
  4821  00D97C  EC66  F061         	call	_printf	;wreg free
  4822                           
  4823                           ;interface_main.c: 407: manual_unload_slide = 0;
  4824  00D980  0E00               	movlw	0
  4825  00D982  0101               	movlb	1	; () banked
  4826  00D984  6FF8               	movwf	(main@manual_unload_slide+1)& (0+255),b
  4827  00D986  0E00               	movlw	0
  4828  00D988  6FF7               	movwf	main@manual_unload_slide& (0+255),b
  4829  00D98A                     
  4830                           ; BSR set to: 1
  4831                           
  4832                           ; BSR set to: 1
  4833                           ;interface_main.c: 411: while(PORTBbits.RB1 == 0){ continue; }
  4834  00D98A  A281               	btfss	3969,1,c	;volatile
  4835  00D98C  D7FE               	goto	l281
  4836                           
  4837                           ;interface_main.c: 412: keypress = (PORTB & 0xF0) >> 4;
  4838  00D98E  3881               	swapf	3969,w,c	;volatile
  4839  00D990  0B0F               	andlw	15
  4840  00D992  0B0F               	andlw	15
  4841  00D994  0102               	movlb	2	; () banked
  4842  00D996  6FF7               	movwf	main@keypress& (0+255),b
  4843                           
  4844                           ; BSR set to: 2
  4845                           ;interface_main.c: 413: __nop();
  4846  00D998  F000               	nop	
  4847                           
  4848                           ;interface_main.c: 414: temp = keys[keypress];
  4849  00D99A  0102               	movlb	2	; () banked
  4850  00D99C  51F7               	movf	main@keypress& (0+255),w,b
  4851  00D99E  0D01               	mullw	1
  4852  00D9A0  0E92               	movlw	low _keys
  4853  00D9A2  24F3               	addwf	prodl,w,c
  4854  00D9A4  6EF6               	movwf	tblptrl,c
  4855  00D9A6  0EFB               	movlw	high _keys
  4856  00D9A8  20F4               	addwfc	prodh,w,c
  4857  00D9AA  6EF7               	movwf	tblptrh,c
  4858  00D9AC                     	if	1	;There are 3 active tblptr bytes
  4859  00D9AC  6AF8               	clrf	tblptru,c
  4860  00D9AE  0E00               	movlw	low (__mediumconst shr (0+16))
  4861  00D9B0  22F8               	addwfc	tblptru,f,c
  4862  00D9B2                     	endif
  4863  00D9B2  0008               	tblrd		*
  4864  00D9B4  CFF5 F2FB          	movff	tablat,main@temp
  4865                           
  4866                           ; BSR set to: 2
  4867                           ;interface_main.c: 416: if (temp == '1'){
  4868  00D9B8  0E31               	movlw	49
  4869  00D9BA  19FB               	xorwf	main@temp& (0+255),w,b
  4870  00D9BC  A4D8               	btfss	status,2,c
  4871  00D9BE  D036               	goto	l285
  4872                           
  4873                           ; BSR set to: 2
  4874                           ;interface_main.c: 417: if (manual_unload_slide != 1){
  4875  00D9C0  0101               	movlb	1	; () banked
  4876  00D9C2  05F7               	decf	main@manual_unload_slide& (0+255),w,b
  4877  00D9C4  11F8               	iorwf	(main@manual_unload_slide+1)& (0+255),w,b
  4878  00D9C6  B4D8               	btfsc	status,2,c
  4879  00D9C8  D01A               	goto	l286
  4880                           
  4881                           ; BSR set to: 1
  4882                           ;interface_main.c: 418: manual_unload_slide = 1;
  4883  00D9CA  0E00               	movlw	0
  4884  00D9CC  6FF8               	movwf	(main@manual_unload_slide+1)& (0+255),b
  4885  00D9CE  0E01               	movlw	1
  4886  00D9D0  6FF7               	movwf	main@manual_unload_slide& (0+255),b
  4887                           
  4888                           ;interface_main.c: 419: man_cont_data[0] = '8';
  4889  00D9D2  0E38               	movlw	56
  4890  00D9D4  0102               	movlb	2	; () banked
  4891  00D9D6  6FE6               	movwf	_man_cont_data& (0+255),b
  4892                           
  4893                           ; BSR set to: 2
  4894                           ;interface_main.c: 420: uartTransmitBlocking(man_cont_data, 1);
  4895  00D9D8  0EE6               	movlw	low _man_cont_data
  4896  00D9DA  6E01               	movwf	uartTransmitBlocking@data,c
  4897  00D9DC  0E02               	movlw	high _man_cont_data
  4898  00D9DE  6E02               	movwf	uartTransmitBlocking@data+1,c
  4899  00D9E0  0E01               	movlw	1
  4900  00D9E2  6E03               	movwf	uartTransmitBlocking@numBytes,c
  4901  00D9E4  ECD4  F054         	call	_uartTransmitBlocking	;wreg free
  4902                           
  4903                           ;interface_main.c: 421: _delay((unsigned long)((300)*(40000000/4000.0)));
  4904  00D9E8  0E10               	movlw	16
  4905  00D9EA  6E58               	movwf	(??_main+1)& (0+255),c
  4906  00D9EC  0E39               	movlw	57
  4907  00D9EE  6E57               	movwf	??_main& (0+255),c
  4908  00D9F0  0E0E               	movlw	14
  4909  00D9F2                     u9157:
  4910  00D9F2  2EE8               	decfsz	wreg,f,c
  4911  00D9F4  D7FE               	bra	u9157
  4912  00D9F6  2E57               	decfsz	??_main& (0+255),f,c
  4913  00D9F8  D7FC               	bra	u9157
  4914  00D9FA  2E58               	decfsz	(??_main+1)& (0+255),f,c
  4915  00D9FC  D7FA               	bra	u9157
  4916  00D9FE                     l286:
  4917                           
  4918                           ;interface_main.c: 422: }
  4919                           ;interface_main.c: 423: man_cont_data[0] = '1';
  4920  00D9FE  0E31               	movlw	49
  4921  00DA00  0102               	movlb	2	; () banked
  4922  00DA02  6FE6               	movwf	_man_cont_data& (0+255),b
  4923                           
  4924                           ; BSR set to: 2
  4925                           ;interface_main.c: 424: uartTransmitBlocking(man_cont_data, 1);
  4926  00DA04  0EE6               	movlw	low _man_cont_data
  4927  00DA06  6E01               	movwf	uartTransmitBlocking@data,c
  4928  00DA08  0E02               	movlw	high _man_cont_data
  4929  00DA0A  6E02               	movwf	uartTransmitBlocking@data+1,c
  4930  00DA0C  0E01               	movlw	1
  4931  00DA0E  6E03               	movwf	uartTransmitBlocking@numBytes,c
  4932  00DA10  ECD4  F054         	call	_uartTransmitBlocking	;wreg free
  4933                           
  4934                           ;interface_main.c: 425: _delay((unsigned long)((190)*(40000000/4000.0)));
  4935  00DA14  0E0A               	movlw	10
  4936  00DA16  6E58               	movwf	(??_main+1)& (0+255),c
  4937  00DA18  0EA4               	movlw	164
  4938  00DA1A  6E57               	movwf	??_main& (0+255),c
  4939  00DA1C  0E80               	movlw	128
  4940  00DA1E                     u9167:
  4941  00DA1E  2EE8               	decfsz	wreg,f,c
  4942  00DA20  D7FE               	bra	u9167
  4943  00DA22  2E57               	decfsz	??_main& (0+255),f,c
  4944  00DA24  D7FC               	bra	u9167
  4945  00DA26  2E58               	decfsz	(??_main+1)& (0+255),f,c
  4946  00DA28  D7FA               	bra	u9167
  4947                           
  4948                           ;interface_main.c: 427: }
  4949                           
  4950                           ;interface_main.c: 426: continue;
  4951  00DA2A  D7AF               	goto	l281
  4952  00DA2C                     l285:
  4953                           
  4954                           ;interface_main.c: 429: else if (temp == '2'){
  4955  00DA2C  0E32               	movlw	50
  4956  00DA2E  0102               	movlb	2	; () banked
  4957  00DA30  19FB               	xorwf	main@temp& (0+255),w,b
  4958  00DA32  A4D8               	btfss	status,2,c
  4959  00DA34  D037               	goto	l289
  4960                           
  4961                           ; BSR set to: 2
  4962                           ;interface_main.c: 430: if (manual_unload_slide != 2){
  4963  00DA36  0E02               	movlw	2
  4964  00DA38  0101               	movlb	1	; () banked
  4965  00DA3A  19F7               	xorwf	main@manual_unload_slide& (0+255),w,b
  4966  00DA3C  11F8               	iorwf	(main@manual_unload_slide+1)& (0+255),w,b
  4967  00DA3E  B4D8               	btfsc	status,2,c
  4968  00DA40  D01A               	goto	l290
  4969                           
  4970                           ; BSR set to: 1
  4971                           ;interface_main.c: 431: manual_unload_slide = 2;
  4972  00DA42  0E00               	movlw	0
  4973  00DA44  6FF8               	movwf	(main@manual_unload_slide+1)& (0+255),b
  4974  00DA46  0E02               	movlw	2
  4975  00DA48  6FF7               	movwf	main@manual_unload_slide& (0+255),b
  4976                           
  4977                           ;interface_main.c: 432: man_cont_data[0] = '9';
  4978  00DA4A  0E39               	movlw	57
  4979  00DA4C  0102               	movlb	2	; () banked
  4980  00DA4E  6FE6               	movwf	_man_cont_data& (0+255),b
  4981                           
  4982                           ; BSR set to: 2
  4983                           ;interface_main.c: 433: uartTransmitBlocking(man_cont_data, 1);
  4984  00DA50  0EE6               	movlw	low _man_cont_data
  4985  00DA52  6E01               	movwf	uartTransmitBlocking@data,c
  4986  00DA54  0E02               	movlw	high _man_cont_data
  4987  00DA56  6E02               	movwf	uartTransmitBlocking@data+1,c
  4988  00DA58  0E01               	movlw	1
  4989  00DA5A  6E03               	movwf	uartTransmitBlocking@numBytes,c
  4990  00DA5C  ECD4  F054         	call	_uartTransmitBlocking	;wreg free
  4991                           
  4992                           ;interface_main.c: 434: _delay((unsigned long)((300)*(40000000/4000.0)));
  4993  00DA60  0E10               	movlw	16
  4994  00DA62  6E58               	movwf	(??_main+1)& (0+255),c
  4995  00DA64  0E39               	movlw	57
  4996  00DA66  6E57               	movwf	??_main& (0+255),c
  4997  00DA68  0E0E               	movlw	14
  4998  00DA6A                     u9177:
  4999  00DA6A  2EE8               	decfsz	wreg,f,c
  5000  00DA6C  D7FE               	bra	u9177
  5001  00DA6E  2E57               	decfsz	??_main& (0+255),f,c
  5002  00DA70  D7FC               	bra	u9177
  5003  00DA72  2E58               	decfsz	(??_main+1)& (0+255),f,c
  5004  00DA74  D7FA               	bra	u9177
  5005  00DA76                     l290:
  5006                           
  5007                           ;interface_main.c: 435: }
  5008                           ;interface_main.c: 436: man_cont_data[0] = '2';
  5009  00DA76  0E32               	movlw	50
  5010  00DA78  0102               	movlb	2	; () banked
  5011  00DA7A  6FE6               	movwf	_man_cont_data& (0+255),b
  5012                           
  5013                           ; BSR set to: 2
  5014                           ;interface_main.c: 437: uartTransmitBlocking(man_cont_data, 1);
  5015  00DA7C  0EE6               	movlw	low _man_cont_data
  5016  00DA7E  6E01               	movwf	uartTransmitBlocking@data,c
  5017  00DA80  0E02               	movlw	high _man_cont_data
  5018  00DA82  6E02               	movwf	uartTransmitBlocking@data+1,c
  5019  00DA84  0E01               	movlw	1
  5020  00DA86  6E03               	movwf	uartTransmitBlocking@numBytes,c
  5021  00DA88  ECD4  F054         	call	_uartTransmitBlocking	;wreg free
  5022                           
  5023                           ;interface_main.c: 438: _delay((unsigned long)((200)*(40000000/4000.0)));
  5024  00DA8C  0E0B               	movlw	11
  5025  00DA8E  6E58               	movwf	(??_main+1)& (0+255),c
  5026  00DA90  0E26               	movlw	38
  5027  00DA92  6E57               	movwf	??_main& (0+255),c
  5028  00DA94  0E5E               	movlw	94
  5029  00DA96                     u9187:
  5030  00DA96  2EE8               	decfsz	wreg,f,c
  5031  00DA98  D7FE               	bra	u9187
  5032  00DA9A  2E57               	decfsz	??_main& (0+255),f,c
  5033  00DA9C  D7FC               	bra	u9187
  5034  00DA9E  2E58               	decfsz	(??_main+1)& (0+255),f,c
  5035  00DAA0  D7FA               	bra	u9187
  5036                           
  5037                           ;interface_main.c: 440: }
  5038                           
  5039                           ;interface_main.c: 439: continue;
  5040  00DAA2  D773               	goto	l281
  5041  00DAA4                     l289:
  5042                           
  5043                           ;interface_main.c: 442: else if (temp == '3'){
  5044  00DAA4  0E33               	movlw	51
  5045  00DAA6  0102               	movlb	2	; () banked
  5046  00DAA8  19FB               	xorwf	main@temp& (0+255),w,b
  5047  00DAAA  A4D8               	btfss	status,2,c
  5048  00DAAC  D038               	goto	l292
  5049                           
  5050                           ; BSR set to: 2
  5051                           ;interface_main.c: 443: if (manual_unload_slide != 3){
  5052  00DAAE  0E03               	movlw	3
  5053  00DAB0  0101               	movlb	1	; () banked
  5054  00DAB2  19F7               	xorwf	main@manual_unload_slide& (0+255),w,b
  5055  00DAB4  11F8               	iorwf	(main@manual_unload_slide+1)& (0+255),w,b
  5056  00DAB6  B4D8               	btfsc	status,2,c
  5057  00DAB8  D01A               	goto	l293
  5058                           
  5059                           ; BSR set to: 1
  5060                           ;interface_main.c: 444: manual_unload_slide = 3;
  5061  00DABA  0E00               	movlw	0
  5062  00DABC  6FF8               	movwf	(main@manual_unload_slide+1)& (0+255),b
  5063  00DABE  0E03               	movlw	3
  5064  00DAC0  6FF7               	movwf	main@manual_unload_slide& (0+255),b
  5065                           
  5066                           ;interface_main.c: 445: man_cont_data[0] = 'A';
  5067  00DAC2  0E41               	movlw	65
  5068  00DAC4  0102               	movlb	2	; () banked
  5069  00DAC6  6FE6               	movwf	_man_cont_data& (0+255),b
  5070                           
  5071                           ; BSR set to: 2
  5072                           ;interface_main.c: 446: uartTransmitBlocking(man_cont_data, 1);
  5073  00DAC8  0EE6               	movlw	low _man_cont_data
  5074  00DACA  6E01               	movwf	uartTransmitBlocking@data,c
  5075  00DACC  0E02               	movlw	high _man_cont_data
  5076  00DACE  6E02               	movwf	uartTransmitBlocking@data+1,c
  5077  00DAD0  0E01               	movlw	1
  5078  00DAD2  6E03               	movwf	uartTransmitBlocking@numBytes,c
  5079  00DAD4  ECD4  F054         	call	_uartTransmitBlocking	;wreg free
  5080                           
  5081                           ;interface_main.c: 447: _delay((unsigned long)((300)*(40000000/4000.0)));
  5082  00DAD8  0E10               	movlw	16
  5083  00DADA  6E58               	movwf	(??_main+1)& (0+255),c
  5084  00DADC  0E39               	movlw	57
  5085  00DADE  6E57               	movwf	??_main& (0+255),c
  5086  00DAE0  0E0E               	movlw	14
  5087  00DAE2                     u9197:
  5088  00DAE2  2EE8               	decfsz	wreg,f,c
  5089  00DAE4  D7FE               	bra	u9197
  5090  00DAE6  2E57               	decfsz	??_main& (0+255),f,c
  5091  00DAE8  D7FC               	bra	u9197
  5092  00DAEA  2E58               	decfsz	(??_main+1)& (0+255),f,c
  5093  00DAEC  D7FA               	bra	u9197
  5094  00DAEE                     l293:
  5095                           
  5096                           ;interface_main.c: 448: }
  5097                           ;interface_main.c: 449: man_cont_data[0] = '3';
  5098  00DAEE  0E33               	movlw	51
  5099  00DAF0  0102               	movlb	2	; () banked
  5100  00DAF2  6FE6               	movwf	_man_cont_data& (0+255),b
  5101                           
  5102                           ; BSR set to: 2
  5103                           ;interface_main.c: 450: uartTransmitBlocking(man_cont_data, 1);
  5104  00DAF4  0EE6               	movlw	low _man_cont_data
  5105  00DAF6  6E01               	movwf	uartTransmitBlocking@data,c
  5106  00DAF8  0E02               	movlw	high _man_cont_data
  5107  00DAFA  6E02               	movwf	uartTransmitBlocking@data+1,c
  5108  00DAFC  0E01               	movlw	1
  5109  00DAFE  6E03               	movwf	uartTransmitBlocking@numBytes,c
  5110  00DB00  ECD4  F054         	call	_uartTransmitBlocking	;wreg free
  5111                           
  5112                           ;interface_main.c: 451: _delay((unsigned long)((170)*(40000000/4000.0)));
  5113  00DB04  0E09               	movlw	9
  5114  00DB06  6E58               	movwf	(??_main+1)& (0+255),c
  5115  00DB08  0EA0               	movlw	160
  5116  00DB0A  6E57               	movwf	??_main& (0+255),c
  5117  00DB0C  0EC3               	movlw	195
  5118  00DB0E                     u9207:
  5119  00DB0E  2EE8               	decfsz	wreg,f,c
  5120  00DB10  D7FE               	bra	u9207
  5121  00DB12  2E57               	decfsz	??_main& (0+255),f,c
  5122  00DB14  D7FC               	bra	u9207
  5123  00DB16  2E58               	decfsz	(??_main+1)& (0+255),f,c
  5124  00DB18  D7FA               	bra	u9207
  5125  00DB1A  F000               	nop	
  5126                           
  5127                           ;interface_main.c: 453: }
  5128                           
  5129                           ;interface_main.c: 452: continue;
  5130  00DB1C  D736               	goto	l281
  5131  00DB1E                     l292:
  5132                           
  5133                           ;interface_main.c: 455: else if (temp == 'D'){
  5134  00DB1E  0E44               	movlw	68
  5135  00DB20  0102               	movlb	2	; () banked
  5136  00DB22  19FB               	xorwf	main@temp& (0+255),w,b
  5137  00DB24  B4D8               	btfsc	status,2,c
  5138  00DB26  D5A5               	goto	u7090
  5139  00DB28  D730               	goto	l281
  5140  00DB2A                     l280:
  5141                           
  5142                           ; BSR set to: 2
  5143                           ;interface_main.c: 460: else if (temp == 'B'){
  5144                           
  5145                           ; BSR set to: 2
  5146  00DB2A  0E42               	movlw	66
  5147  00DB2C  19FB               	xorwf	main@temp& (0+255),w,b
  5148  00DB2E  B4D8               	btfsc	status,2,c
  5149  00DB30  D55E               	goto	u7060
  5150                           
  5151                           ; BSR set to: 2
  5152                           ;interface_main.c: 464: else{
  5153                           ;interface_main.c: 465: lcdInst(0x01);_delay((unsigned long)((15)*(40000000/4000.0)));;
  5154                           
  5155                           ; BSR set to: 2
  5156                           
  5157                           ; BSR set to: 2
  5158                           ;interface_main.c: 462: }
  5159                           
  5160                           ; BSR set to: 2
  5161                           ;interface_main.c: 461: break;
  5162  00DB32  0E01               	movlw	1
  5163  00DB34  EC3E  F051         	call	_lcdInst
  5164  00DB38  0EC3               	movlw	195
  5165  00DB3A  6E57               	movwf	??_main& (0+255),c
  5166  00DB3C  0ECD               	movlw	205
  5167  00DB3E                     u9217:
  5168  00DB3E  2EE8               	decfsz	wreg,f,c
  5169  00DB40  D7FE               	bra	u9217
  5170  00DB42  2E57               	decfsz	??_main& (0+255),f,c
  5171  00DB44  D7FC               	bra	u9217
  5172  00DB46  F000               	nop	
  5173                           
  5174                           ;interface_main.c: 466: lcdInst(0x80);_delay((unsigned long)((5)*(40000000/4000.0)));;
  5175  00DB48  0E80               	movlw	128
  5176  00DB4A  EC3E  F051         	call	_lcdInst
  5177  00DB4E  0E41               	movlw	65
  5178  00DB50  6E57               	movwf	??_main& (0+255),c
  5179  00DB52  0EEE               	movlw	238
  5180  00DB54                     u9227:
  5181  00DB54  2EE8               	decfsz	wreg,f,c
  5182  00DB56  D7FE               	bra	u9227
  5183  00DB58  2E57               	decfsz	??_main& (0+255),f,c
  5184  00DB5A  D7FC               	bra	u9227
  5185  00DB5C  D000               	nop2	
  5186                           
  5187                           ;interface_main.c: 467: printf("Invalid Input");
  5188  00DB5E  0EC1               	movlw	low STR_10
  5189  00DB60  6E0D               	movwf	printf@f,c
  5190  00DB62  0EFE               	movlw	high STR_10
  5191  00DB64  6E0E               	movwf	printf@f+1,c
  5192  00DB66  EC66  F061         	call	_printf	;wreg free
  5193                           
  5194                           ;interface_main.c: 468: _delay((unsigned long)((1500)*(40000000/4000.0)));
  5195  00DB6A  0E4D               	movlw	77
  5196  00DB6C  6E58               	movwf	(??_main+1)& (0+255),c
  5197  00DB6E  0E19               	movlw	25
  5198  00DB70  6E57               	movwf	??_main& (0+255),c
  5199  00DB72  0E50               	movlw	80
  5200  00DB74                     u9237:
  5201  00DB74  2EE8               	decfsz	wreg,f,c
  5202  00DB76  D7FE               	bra	u9237
  5203  00DB78  2E57               	decfsz	??_main& (0+255),f,c
  5204  00DB7A  D7FC               	bra	u9237
  5205  00DB7C  2E58               	decfsz	(??_main+1)& (0+255),f,c
  5206  00DB7E  D7FA               	bra	u9237
  5207                           
  5208                           ;interface_main.c: 469: continue;
  5209  00DB80  D578               	goto	u7090
  5210  00DB82                     l241:
  5211                           
  5212                           ;interface_main.c: 475: else if (temp == '2'){
  5213  00DB82  0E32               	movlw	50
  5214  00DB84  0102               	movlb	2	; () banked
  5215  00DB86  19FB               	xorwf	main@temp& (0+255),w,b
  5216  00DB88  A4D8               	btfss	status,2,c
  5217  00DB8A  EF90  F078         	goto	l302
  5218  00DB8E                     u7350:
  5219                           
  5220                           ;interface_main.c: 479: lcdInst(0x80);_delay((unsigned long)((5)*(40000000/4000.0)));;
  5221                           
  5222                           ; BSR set to: 2
  5223                           
  5224                           ;interface_main.c: 477: while(1){
  5225  00DB8E  0E80               	movlw	128
  5226  00DB90  EC3E  F051         	call	_lcdInst
  5227  00DB94  0E41               	movlw	65
  5228  00DB96  6E57               	movwf	??_main& (0+255),c
  5229  00DB98  0EEE               	movlw	238
  5230  00DB9A                     u9247:
  5231  00DB9A  2EE8               	decfsz	wreg,f,c
  5232  00DB9C  D7FE               	bra	u9247
  5233  00DB9E  2E57               	decfsz	??_main& (0+255),f,c
  5234  00DBA0  D7FC               	bra	u9247
  5235  00DBA2  D000               	nop2	
  5236                           
  5237                           ;interface_main.c: 480: lcdInst(0x01);_delay((unsigned long)((15)*(40000000/4000.0)));;
  5238  00DBA4  0E01               	movlw	1
  5239  00DBA6  EC3E  F051         	call	_lcdInst
  5240  00DBAA  0EC3               	movlw	195
  5241  00DBAC  6E57               	movwf	??_main& (0+255),c
  5242  00DBAE  0ECD               	movlw	205
  5243  00DBB0                     u9257:
  5244  00DBB0  2EE8               	decfsz	wreg,f,c
  5245  00DBB2  D7FE               	bra	u9257
  5246  00DBB4  2E57               	decfsz	??_main& (0+255),f,c
  5247  00DBB6  D7FC               	bra	u9257
  5248  00DBB8  F000               	nop	
  5249                           
  5250                           ;interface_main.c: 481: printf("Enter Row:      Drawers Used: %d", tot_drawers);
  5251  00DBBA  0E54               	movlw	low STR_31
  5252  00DBBC  6E0D               	movwf	printf@f,c
  5253  00DBBE  0EFC               	movlw	high STR_31
  5254  00DBC0  6E0E               	movwf	printf@f+1,c
  5255  00DBC2  C1FC  F00F         	movff	main@tot_drawers,?_printf+2
  5256  00DBC6  C1FD  F010         	movff	main@tot_drawers+1,?_printf+3
  5257  00DBCA  EC66  F061         	call	_printf	;wreg free
  5258                           
  5259                           ;interface_main.c: 482: lcdInst(0xC0);;
  5260  00DBCE  0EC0               	movlw	192
  5261  00DBD0  EC3E  F051         	call	_lcdInst
  5262                           
  5263                           ;interface_main.c: 483: printf("Pack Food: #    Clear Rows: C");
  5264  00DBD4  0E94               	movlw	low STR_32
  5265  00DBD6  6E0D               	movwf	printf@f,c
  5266  00DBD8  0EFC               	movlw	high STR_32
  5267  00DBDA  6E0E               	movwf	printf@f+1,c
  5268  00DBDC  EC66  F061         	call	_printf	;wreg free
  5269                           
  5270                           ;interface_main.c: 484: _delay((unsigned long)((500)*(40000000/4000.0)));
  5271  00DBE0  0E1A               	movlw	26
  5272  00DBE2  6E58               	movwf	(??_main+1)& (0+255),c
  5273  00DBE4  0E5E               	movlw	94
  5274  00DBE6  6E57               	movwf	??_main& (0+255),c
  5275  00DBE8  0E6E               	movlw	110
  5276  00DBEA                     u9267:
  5277  00DBEA  2EE8               	decfsz	wreg,f,c
  5278  00DBEC  D7FE               	bra	u9267
  5279  00DBEE  2E57               	decfsz	??_main& (0+255),f,c
  5280  00DBF0  D7FC               	bra	u9267
  5281  00DBF2  2E58               	decfsz	(??_main+1)& (0+255),f,c
  5282  00DBF4  D7FA               	bra	u9267
  5283  00DBF6  D000               	nop2	
  5284                           
  5285                           ;interface_main.c: 485: for (i = 0; i < 8; i++){
  5286  00DBF8  0E00               	movlw	0
  5287  00DBFA  0102               	movlb	2	; () banked
  5288  00DBFC  6FFD               	movwf	(main@i+1)& (0+255),b
  5289  00DBFE  0E00               	movlw	0
  5290  00DC00  6FFC               	movwf	main@i& (0+255),b
  5291  00DC02                     l7586:
  5292                           
  5293                           ; BSR set to: 2
  5294  00DC02  BFFD               	btfsc	(main@i+1)& (0+255),7,b
  5295  00DC04  D006               	goto	l304
  5296  00DC06  51FD               	movf	(main@i+1)& (0+255),w,b
  5297  00DC08  E118               	bnz	l7598
  5298  00DC0A  0E08               	movlw	8
  5299  00DC0C  5DFC               	subwf	main@i& (0+255),w,b
  5300  00DC0E  B0D8               	btfsc	status,0,c
  5301  00DC10  D014               	goto	u7370
  5302  00DC12                     l304:
  5303                           
  5304                           ; BSR set to: 2
  5305                           ;interface_main.c: 486: _delay((unsigned long)((100)*(40000000/4000.0)));
  5306                           
  5307                           ; BSR set to: 2
  5308  00DC12  0E06               	movlw	6
  5309  00DC14  6E58               	movwf	(??_main+1)& (0+255),c
  5310  00DC16  0E13               	movlw	19
  5311  00DC18  6E57               	movwf	??_main& (0+255),c
  5312  00DC1A  0EAE               	movlw	174
  5313  00DC1C                     u9277:
  5314  00DC1C  2EE8               	decfsz	wreg,f,c
  5315  00DC1E  D7FE               	bra	u9277
  5316  00DC20  2E57               	decfsz	??_main& (0+255),f,c
  5317  00DC22  D7FC               	bra	u9277
  5318  00DC24  2E58               	decfsz	(??_main+1)& (0+255),f,c
  5319  00DC26  D7FA               	bra	u9277
  5320                           
  5321                           ;interface_main.c: 487: lcd_shift_display(2, 0);
  5322  00DC28  0E00               	movlw	0
  5323  00DC2A  6E04               	movwf	lcd_shift_display@direction,c
  5324  00DC2C  0E02               	movlw	2
  5325  00DC2E  EC6A  F051         	call	_lcd_shift_display
  5326  00DC32  0102               	movlb	2	; () banked
  5327  00DC34  4BFC               	infsnz	main@i& (0+255),f,b
  5328  00DC36  2BFD               	incf	(main@i+1)& (0+255),f,b
  5329  00DC38  D7E4               	goto	l7586
  5330  00DC3A                     u7370:
  5331  00DC3A                     l7598:
  5332                           
  5333                           ; BSR set to: 2
  5334                           ;interface_main.c: 488: }
  5335                           ;interface_main.c: 489: _delay((unsigned long)((1200)*(40000000/4000.0)));
  5336  00DC3A  0E3D               	movlw	61
  5337  00DC3C  6E58               	movwf	(??_main+1)& (0+255),c
  5338  00DC3E  0EE1               	movlw	225
  5339  00DC40  6E57               	movwf	??_main& (0+255),c
  5340  00DC42  0E40               	movlw	64
  5341  00DC44                     u9287:
  5342  00DC44  2EE8               	decfsz	wreg,f,c
  5343  00DC46  D7FE               	bra	u9287
  5344  00DC48  2E57               	decfsz	??_main& (0+255),f,c
  5345  00DC4A  D7FC               	bra	u9287
  5346  00DC4C  2E58               	decfsz	(??_main+1)& (0+255),f,c
  5347  00DC4E  D7FA               	bra	u9287
  5348                           
  5349                           ;interface_main.c: 490: for (i = 0; i < 8; i++){
  5350  00DC50  0E00               	movlw	0
  5351  00DC52  0102               	movlb	2	; () banked
  5352  00DC54  6FFD               	movwf	(main@i+1)& (0+255),b
  5353  00DC56  0E00               	movlw	0
  5354  00DC58  6FFC               	movwf	main@i& (0+255),b
  5355  00DC5A                     l7602:
  5356                           
  5357                           ; BSR set to: 2
  5358  00DC5A  BFFD               	btfsc	(main@i+1)& (0+255),7,b
  5359  00DC5C  D006               	goto	l306
  5360  00DC5E  51FD               	movf	(main@i+1)& (0+255),w,b
  5361  00DC60  E118               	bnz	l7614
  5362  00DC62  0E08               	movlw	8
  5363  00DC64  5DFC               	subwf	main@i& (0+255),w,b
  5364  00DC66  B0D8               	btfsc	status,0,c
  5365  00DC68  D014               	goto	u7390
  5366  00DC6A                     l306:
  5367                           
  5368                           ; BSR set to: 2
  5369                           ;interface_main.c: 491: _delay((unsigned long)((100)*(40000000/4000.0)));
  5370                           
  5371                           ; BSR set to: 2
  5372  00DC6A  0E06               	movlw	6
  5373  00DC6C  6E58               	movwf	(??_main+1)& (0+255),c
  5374  00DC6E  0E13               	movlw	19
  5375  00DC70  6E57               	movwf	??_main& (0+255),c
  5376  00DC72  0EAE               	movlw	174
  5377  00DC74                     u9297:
  5378  00DC74  2EE8               	decfsz	wreg,f,c
  5379  00DC76  D7FE               	bra	u9297
  5380  00DC78  2E57               	decfsz	??_main& (0+255),f,c
  5381  00DC7A  D7FC               	bra	u9297
  5382  00DC7C  2E58               	decfsz	(??_main+1)& (0+255),f,c
  5383  00DC7E  D7FA               	bra	u9297
  5384                           
  5385                           ;interface_main.c: 492: lcd_shift_display(2, 1);
  5386  00DC80  0E01               	movlw	1
  5387  00DC82  6E04               	movwf	lcd_shift_display@direction,c
  5388  00DC84  0E02               	movlw	2
  5389  00DC86  EC6A  F051         	call	_lcd_shift_display
  5390  00DC8A  0102               	movlb	2	; () banked
  5391  00DC8C  4BFC               	infsnz	main@i& (0+255),f,b
  5392  00DC8E  2BFD               	incf	(main@i+1)& (0+255),f,b
  5393  00DC90  D7E4               	goto	l7602
  5394  00DC92                     u7390:
  5395  00DC92                     l7614:
  5396                           
  5397                           ; BSR set to: 2
  5398                           ;interface_main.c: 493: }
  5399                           ;interface_main.c: 494: lcd_set_cursor(11, 0);
  5400  00DC92  0E00               	movlw	0
  5401  00DC94  6E07               	movwf	lcd_set_cursor@y,c
  5402  00DC96  0E0B               	movlw	11
  5403  00DC98  EC18  F052         	call	_lcd_set_cursor
  5404                           
  5405                           ;interface_main.c: 495: lcdInst(8 | (1 << 2) | (1 << 1)| 1);;
  5406  00DC9C  0E0F               	movlw	15
  5407  00DC9E  EC3E  F051         	call	_lcdInst
  5408  00DCA2  A281               	btfss	3969,1,c	;volatile
  5409  00DCA4  D7FE               	goto	l309
  5410                           
  5411                           ;interface_main.c: 499: keypress = (PORTB & 0xF0) >> 4;
  5412  00DCA6  3881               	swapf	3969,w,c	;volatile
  5413  00DCA8  0B0F               	andlw	15
  5414  00DCAA  0B0F               	andlw	15
  5415  00DCAC  0102               	movlb	2	; () banked
  5416  00DCAE  6FF7               	movwf	main@keypress& (0+255),b
  5417  00DCB0                     
  5418                           ; BSR set to: 2
  5419  00DCB0  B281               	btfsc	3969,1,c	;volatile
  5420  00DCB2  D7FE               	goto	l312
  5421                           
  5422                           ;interface_main.c: 501: __nop();
  5423  00DCB4  F000               	nop	
  5424                           
  5425                           ;interface_main.c: 502: temp = keys[keypress];
  5426  00DCB6  0102               	movlb	2	; () banked
  5427  00DCB8  51F7               	movf	main@keypress& (0+255),w,b
  5428  00DCBA  0D01               	mullw	1
  5429  00DCBC  0E92               	movlw	low _keys
  5430  00DCBE  24F3               	addwf	prodl,w,c
  5431  00DCC0  6EF6               	movwf	tblptrl,c
  5432  00DCC2  0EFB               	movlw	high _keys
  5433  00DCC4  20F4               	addwfc	prodh,w,c
  5434  00DCC6  6EF7               	movwf	tblptrh,c
  5435  00DCC8                     	if	1	;There are 3 active tblptr bytes
  5436  00DCC8  6AF8               	clrf	tblptru,c
  5437  00DCCA  0E00               	movlw	low (__mediumconst shr (0+16))
  5438  00DCCC  22F8               	addwfc	tblptru,f,c
  5439  00DCCE                     	endif
  5440  00DCCE  0008               	tblrd		*
  5441  00DCD0  CFF5 F2FB          	movff	tablat,main@temp
  5442                           
  5443                           ; BSR set to: 2
  5444                           ;interface_main.c: 503: temp_int = (temp - '0');
  5445  00DCD4  0ED0               	movlw	208
  5446  00DCD6  25FB               	addwf	main@temp& (0+255),w,b
  5447  00DCD8  6FF3               	movwf	main@temp_int& (0+255),b
  5448  00DCDA  6BF4               	clrf	(main@temp_int+1)& (0+255),b
  5449  00DCDC  0EFF               	movlw	255
  5450  00DCDE  23F4               	addwfc	(main@temp_int+1)& (0+255),f,b
  5451                           
  5452                           ; BSR set to: 2
  5453                           ;interface_main.c: 504: if ((temp_int <= 4)&&(temp_int >= 1)){
  5454  00DCE0  BFF4               	btfsc	(main@temp_int+1)& (0+255),7,b
  5455  00DCE2  D006               	goto	u7420
  5456  00DCE4  51F4               	movf	(main@temp_int+1)& (0+255),w,b
  5457  00DCE6  E10E               	bnz	l7628
  5458  00DCE8  0E05               	movlw	5
  5459  00DCEA  5DF3               	subwf	main@temp_int& (0+255),w,b
  5460  00DCEC  B0D8               	btfsc	status,0,c
  5461  00DCEE  D00A               	goto	l314
  5462  00DCF0                     u7420:
  5463                           
  5464                           ; BSR set to: 2
  5465  00DCF0  BFF4               	btfsc	(main@temp_int+1)& (0+255),7,b
  5466  00DCF2  D008               	goto	l314
  5467  00DCF4  51F4               	movf	(main@temp_int+1)& (0+255),w,b
  5468  00DCF6  E103               	bnz	u7430
  5469  00DCF8  05F3               	decf	main@temp_int& (0+255),w,b
  5470  00DCFA  A0D8               	btfss	status,0,c
  5471  00DCFC  D003               	goto	l314
  5472  00DCFE                     u7430:
  5473                           
  5474                           ; BSR set to: 2
  5475                           ;interface_main.c: 505: putch(temp);}
  5476  00DCFE  51FB               	movf	main@temp& (0+255),w,b
  5477  00DD00  EC48  F051         	call	_putch
  5478  00DD04                     l314:
  5479  00DD04                     l7628:
  5480                           
  5481                           ;interface_main.c: 506: _delay((unsigned long)((300)*(40000000/4000.0)));
  5482  00DD04  0E10               	movlw	16
  5483  00DD06  6E58               	movwf	(??_main+1)& (0+255),c
  5484  00DD08  0E39               	movlw	57
  5485  00DD0A  6E57               	movwf	??_main& (0+255),c
  5486  00DD0C  0E0E               	movlw	14
  5487  00DD0E                     u9307:
  5488  00DD0E  2EE8               	decfsz	wreg,f,c
  5489  00DD10  D7FE               	bra	u9307
  5490  00DD12  2E57               	decfsz	??_main& (0+255),f,c
  5491  00DD14  D7FC               	bra	u9307
  5492  00DD16  2E58               	decfsz	(??_main+1)& (0+255),f,c
  5493  00DD18  D7FA               	bra	u9307
  5494                           
  5495                           ;interface_main.c: 508: lcdInst(8 | (1 << 2) | (0 << 1)| 0);;
  5496  00DD1A  0E0C               	movlw	12
  5497  00DD1C  EC3E  F051         	call	_lcdInst
  5498                           
  5499                           ;interface_main.c: 511: if (temp_int == -13){
  5500  00DD20  0EF3               	movlw	243
  5501  00DD22  0102               	movlb	2	; () banked
  5502  00DD24  19F3               	xorwf	main@temp_int& (0+255),w,b
  5503  00DD26  E102               	bnz	u7441
  5504  00DD28  29F4               	incf	(main@temp_int+1)& (0+255),w,b
  5505  00DD2A  A4D8               	btfss	status,2,c
  5506  00DD2C                     u7441:
  5507  00DD2C  D1AF               	goto	l315
  5508                           
  5509                           ; BSR set to: 2
  5510                           ;interface_main.c: 512: lcdInst(0x01);_delay((unsigned long)((15)*(40000000/4000.0)));;
  5511  00DD2E  0E01               	movlw	1
  5512  00DD30  EC3E  F051         	call	_lcdInst
  5513  00DD34  0EC3               	movlw	195
  5514  00DD36  6E57               	movwf	??_main& (0+255),c
  5515  00DD38  0ECD               	movlw	205
  5516  00DD3A                     u9317:
  5517  00DD3A  2EE8               	decfsz	wreg,f,c
  5518  00DD3C  D7FE               	bra	u9317
  5519  00DD3E  2E57               	decfsz	??_main& (0+255),f,c
  5520  00DD40  D7FC               	bra	u9317
  5521  00DD42  F000               	nop	
  5522                           
  5523                           ;interface_main.c: 513: lcdInst(0x80);_delay((unsigned long)((5)*(40000000/4000.0)));;
  5524  00DD44  0E80               	movlw	128
  5525  00DD46  EC3E  F051         	call	_lcdInst
  5526  00DD4A  0E41               	movlw	65
  5527  00DD4C  6E57               	movwf	??_main& (0+255),c
  5528  00DD4E  0EEE               	movlw	238
  5529  00DD50                     u9327:
  5530  00DD50  2EE8               	decfsz	wreg,f,c
  5531  00DD52  D7FE               	bra	u9327
  5532  00DD54  2E57               	decfsz	??_main& (0+255),f,c
  5533  00DD56  D7FC               	bra	u9327
  5534  00DD58  D000               	nop2	
  5535                           
  5536                           ;interface_main.c: 514: printf("Packaging");
  5537  00DD5A  0E6F               	movlw	low STR_33
  5538  00DD5C  6E0D               	movwf	printf@f,c
  5539  00DD5E  0EFF               	movlw	high STR_33
  5540  00DD60  6E0E               	movwf	printf@f+1,c
  5541  00DD62  EC66  F061         	call	_printf	;wreg free
  5542                           
  5543                           ;interface_main.c: 515: lcdInst(0xC0);;
  5544  00DD66  0EC0               	movlw	192
  5545  00DD68  EC3E  F051         	call	_lcdInst
  5546                           
  5547                           ;interface_main.c: 516: printf("in progress");
  5548  00DD6C  0E0D               	movlw	low STR_34
  5549  00DD6E  6E0D               	movwf	printf@f,c
  5550  00DD70  0EFF               	movlw	high STR_34
  5551  00DD72  6E0E               	movwf	printf@f+1,c
  5552  00DD74  EC66  F061         	call	_printf	;wreg free
  5553                           
  5554                           ;interface_main.c: 518: set_total_init_time();
  5555  00DD78  EC87  F057         	call	_set_total_init_time	;wreg free
  5556                           
  5557                           ;interface_main.c: 519: package_food(mat);
  5558  00DD7C  0E80               	movlw	low main@mat
  5559  00DD7E  6E31               	movwf	package_food@mat,c
  5560  00DD80  0E00               	movlw	high main@mat
  5561  00DD82  6E32               	movwf	package_food@mat+1,c
  5562  00DD84  EC62  F05B         	call	_package_food	;wreg free
  5563                           
  5564                           ;interface_main.c: 520: comp_time_difference();
  5565  00DD88  ECC1  F058         	call	_comp_time_difference	;wreg free
  5566                           
  5567                           ;interface_main.c: 521: comp_EEPROM_time();
  5568  00DD8C  EC85  F054         	call	_comp_EEPROM_time	;wreg free
  5569                           
  5570                           ;interface_main.c: 522: array_transition(mat);
  5571  00DD90  0E80               	movlw	low main@mat
  5572  00DD92  6E07               	movwf	array_transition@mat,c
  5573  00DD94  0E00               	movlw	high main@mat
  5574  00DD96  6E08               	movwf	array_transition@mat+1,c
  5575  00DD98  EC91  F05C         	call	_array_transition	;wreg free
  5576                           
  5577                           ;interface_main.c: 523: shift_EEPROM();
  5578  00DD9C  ECDF  F051         	call	_shift_EEPROM	;wreg free
  5579                           
  5580                           ;interface_main.c: 524: store_EEPROM();
  5581  00DDA0  ECFC  F056         	call	_store_EEPROM	;wreg free
  5582                           
  5583                           ;interface_main.c: 526: lcdInst(0x01);_delay((unsigned long)((15)*(40000000/4000.0)));;
  5584  00DDA4  0E01               	movlw	1
  5585  00DDA6  EC3E  F051         	call	_lcdInst
  5586  00DDAA  0EC3               	movlw	195
  5587  00DDAC  6E57               	movwf	??_main& (0+255),c
  5588  00DDAE  0ECD               	movlw	205
  5589  00DDB0                     u9337:
  5590  00DDB0  2EE8               	decfsz	wreg,f,c
  5591  00DDB2  D7FE               	bra	u9337
  5592  00DDB4  2E57               	decfsz	??_main& (0+255),f,c
  5593  00DDB6  D7FC               	bra	u9337
  5594  00DDB8  F000               	nop	
  5595                           
  5596                           ;interface_main.c: 527: lcdInst(0x80);_delay((unsigned long)((5)*(40000000/4000.0)));;
  5597  00DDBA  0E80               	movlw	128
  5598  00DDBC  EC3E  F051         	call	_lcdInst
  5599  00DDC0  0E41               	movlw	65
  5600  00DDC2  6E57               	movwf	??_main& (0+255),c
  5601  00DDC4  0EEE               	movlw	238
  5602  00DDC6                     u9347:
  5603  00DDC6  2EE8               	decfsz	wreg,f,c
  5604  00DDC8  D7FE               	bra	u9347
  5605  00DDCA  2E57               	decfsz	??_main& (0+255),f,c
  5606  00DDCC  D7FC               	bra	u9347
  5607  00DDCE  D000               	nop2	
  5608                           
  5609                           ;interface_main.c: 528: printf("Packaging");
  5610  00DDD0  0E6F               	movlw	low STR_33
  5611  00DDD2  6E0D               	movwf	printf@f,c
  5612  00DDD4  0EFF               	movlw	high STR_33
  5613  00DDD6  6E0E               	movwf	printf@f+1,c
  5614  00DDD8  EC66  F061         	call	_printf	;wreg free
  5615                           
  5616                           ;interface_main.c: 529: lcdInst(0xC0);;
  5617  00DDDC  0EC0               	movlw	192
  5618  00DDDE  EC3E  F051         	call	_lcdInst
  5619                           
  5620                           ;interface_main.c: 530: printf("Complete");
  5621  00DDE2  0E9D               	movlw	low STR_36
  5622  00DDE4  6E0D               	movwf	printf@f,c
  5623  00DDE6  0EFF               	movlw	high STR_36
  5624  00DDE8  6E0E               	movwf	printf@f+1,c
  5625  00DDEA  EC66  F061         	call	_printf	;wreg free
  5626                           
  5627                           ;interface_main.c: 531: _delay((unsigned long)((3000)*(40000000/4000.0)));
  5628  00DDEE  0E99               	movlw	153
  5629  00DDF0  6E58               	movwf	(??_main+1)& (0+255),c
  5630  00DDF2  0E31               	movlw	49
  5631  00DDF4  6E57               	movwf	??_main& (0+255),c
  5632  00DDF6  0EA2               	movlw	162
  5633  00DDF8                     u9357:
  5634  00DDF8  2EE8               	decfsz	wreg,f,c
  5635  00DDFA  D7FE               	bra	u9357
  5636  00DDFC  2E57               	decfsz	??_main& (0+255),f,c
  5637  00DDFE  D7FC               	bra	u9357
  5638  00DE00  2E58               	decfsz	(??_main+1)& (0+255),f,c
  5639  00DE02  D7FA               	bra	u9357
  5640  00DE04  D000               	nop2	
  5641                           
  5642                           ;interface_main.c: 533: lcdInst(0x01);_delay((unsigned long)((15)*(40000000/4000.0)));;
  5643  00DE06  0E01               	movlw	1
  5644  00DE08  EC3E  F051         	call	_lcdInst
  5645  00DE0C  0EC3               	movlw	195
  5646  00DE0E  6E57               	movwf	??_main& (0+255),c
  5647  00DE10  0ECD               	movlw	205
  5648  00DE12                     u9367:
  5649  00DE12  2EE8               	decfsz	wreg,f,c
  5650  00DE14  D7FE               	bra	u9367
  5651  00DE16  2E57               	decfsz	??_main& (0+255),f,c
  5652  00DE18  D7FC               	bra	u9367
  5653  00DE1A  F000               	nop	
  5654                           
  5655                           ;interface_main.c: 534: lcdInst(0x80);_delay((unsigned long)((5)*(40000000/4000.0)));;
  5656  00DE1C  0E80               	movlw	128
  5657  00DE1E  EC3E  F051         	call	_lcdInst
  5658  00DE22  0E41               	movlw	65
  5659  00DE24  6E57               	movwf	??_main& (0+255),c
  5660  00DE26  0EEE               	movlw	238
  5661  00DE28                     u9377:
  5662  00DE28  2EE8               	decfsz	wreg,f,c
  5663  00DE2A  D7FE               	bra	u9377
  5664  00DE2C  2E57               	decfsz	??_main& (0+255),f,c
  5665  00DE2E  D7FC               	bra	u9377
  5666  00DE30  D000               	nop2	
  5667                           
  5668                           ;interface_main.c: 535: printf("View Summary:");
  5669  00DE32  0E97               	movlw	low STR_37
  5670  00DE34  6E0D               	movwf	printf@f,c
  5671  00DE36  0EFE               	movlw	high STR_37
  5672  00DE38  6E0E               	movwf	printf@f+1,c
  5673  00DE3A  EC66  F061         	call	_printf	;wreg free
  5674                           
  5675                           ;interface_main.c: 536: lcdInst(0xC0);;
  5676  00DE3E  0EC0               	movlw	192
  5677  00DE40  EC3E  F051         	call	_lcdInst
  5678                           
  5679                           ;interface_main.c: 537: printf("Yes: 1   No: 2");
  5680  00DE44  0E4C               	movlw	low STR_19
  5681  00DE46  6E0D               	movwf	printf@f,c
  5682  00DE48  0EFE               	movlw	high STR_19
  5683  00DE4A  6E0E               	movwf	printf@f+1,c
  5684  00DE4C  EC66  F061         	call	_printf	;wreg free
  5685  00DE50  A281               	btfss	3969,1,c	;volatile
  5686  00DE52  D7FE               	goto	l317
  5687                           
  5688                           ;interface_main.c: 539: keypress = (PORTB & 0xF0) >> 4;
  5689  00DE54  3881               	swapf	3969,w,c	;volatile
  5690  00DE56  0B0F               	andlw	15
  5691  00DE58  0B0F               	andlw	15
  5692  00DE5A  0102               	movlb	2	; () banked
  5693  00DE5C  6FF7               	movwf	main@keypress& (0+255),b
  5694  00DE5E                     
  5695                           ; BSR set to: 2
  5696  00DE5E  B281               	btfsc	3969,1,c	;volatile
  5697  00DE60  D7FE               	goto	l320
  5698                           
  5699                           ;interface_main.c: 541: __nop();
  5700  00DE62  F000               	nop	
  5701                           
  5702                           ;interface_main.c: 542: temp = keys[keypress];
  5703  00DE64  0102               	movlb	2	; () banked
  5704  00DE66  51F7               	movf	main@keypress& (0+255),w,b
  5705  00DE68  0D01               	mullw	1
  5706  00DE6A  0E92               	movlw	low _keys
  5707  00DE6C  24F3               	addwf	prodl,w,c
  5708  00DE6E  6EF6               	movwf	tblptrl,c
  5709  00DE70  0EFB               	movlw	high _keys
  5710  00DE72  20F4               	addwfc	prodh,w,c
  5711  00DE74  6EF7               	movwf	tblptrh,c
  5712  00DE76                     	if	1	;There are 3 active tblptr bytes
  5713  00DE76  6AF8               	clrf	tblptru,c
  5714  00DE78  0E00               	movlw	low (__mediumconst shr (0+16))
  5715  00DE7A  22F8               	addwfc	tblptru,f,c
  5716  00DE7C                     	endif
  5717  00DE7C  0008               	tblrd		*
  5718  00DE7E  CFF5 F2FB          	movff	tablat,main@temp
  5719                           
  5720                           ; BSR set to: 2
  5721                           ;interface_main.c: 545: if (temp == '1'){
  5722  00DE82  0E31               	movlw	49
  5723  00DE84  19FB               	xorwf	main@temp& (0+255),w,b
  5724  00DE86  B4D8               	btfsc	status,2,c
  5725                           
  5726                           ; BSR set to: 2
  5727                           ;interface_main.c: 546: operation_summary();
  5728  00DE88  EC73  F063         	call	_operation_summary	;wreg free
  5729                           
  5730                           ;interface_main.c: 547: }
  5731                           ;interface_main.c: 549: lcdInst(0x01);_delay((unsigned long)((15)*(40000000/4000.0)));;
  5732  00DE8C  0E01               	movlw	1
  5733  00DE8E  EC3E  F051         	call	_lcdInst
  5734  00DE92  0EC3               	movlw	195
  5735  00DE94  6E57               	movwf	??_main& (0+255),c
  5736  00DE96  0ECD               	movlw	205
  5737  00DE98                     u9387:
  5738  00DE98  2EE8               	decfsz	wreg,f,c
  5739  00DE9A  D7FE               	bra	u9387
  5740  00DE9C  2E57               	decfsz	??_main& (0+255),f,c
  5741  00DE9E  D7FC               	bra	u9387
  5742  00DEA0  F000               	nop	
  5743                           
  5744                           ;interface_main.c: 550: lcdInst(0x80);_delay((unsigned long)((5)*(40000000/4000.0)));;
  5745  00DEA2  0E80               	movlw	128
  5746  00DEA4  EC3E  F051         	call	_lcdInst
  5747  00DEA8  0E41               	movlw	65
  5748  00DEAA  6E57               	movwf	??_main& (0+255),c
  5749  00DEAC  0EEE               	movlw	238
  5750  00DEAE                     u9397:
  5751  00DEAE  2EE8               	decfsz	wreg,f,c
  5752  00DEB0  D7FE               	bra	u9397
  5753  00DEB2  2E57               	decfsz	??_main& (0+255),f,c
  5754  00DEB4  D7FC               	bra	u9397
  5755  00DEB6  D000               	nop2	
  5756                           
  5757                           ;interface_main.c: 551: printf("Reset:");
  5758  00DEB8  0EB5               	movlw	low STR_39
  5759  00DEBA  6E0D               	movwf	printf@f,c
  5760  00DEBC  0EFF               	movlw	high STR_39
  5761  00DEBE  6E0E               	movwf	printf@f+1,c
  5762  00DEC0  EC66  F061         	call	_printf	;wreg free
  5763                           
  5764                           ;interface_main.c: 552: lcdInst(0xC0);;
  5765  00DEC4  0EC0               	movlw	192
  5766  00DEC6  EC3E  F051         	call	_lcdInst
  5767                           
  5768                           ;interface_main.c: 553: printf("Yes: 1   No: 2");
  5769  00DECA  0E4C               	movlw	low STR_19
  5770  00DECC  6E0D               	movwf	printf@f,c
  5771  00DECE  0EFE               	movlw	high STR_19
  5772  00DED0  6E0E               	movwf	printf@f+1,c
  5773  00DED2  EC66  F061         	call	_printf	;wreg free
  5774  00DED6  A281               	btfss	3969,1,c	;volatile
  5775  00DED8  D7FE               	goto	l324
  5776                           
  5777                           ;interface_main.c: 555: keypress = (PORTB & 0xF0) >> 4;
  5778  00DEDA  3881               	swapf	3969,w,c	;volatile
  5779  00DEDC  0B0F               	andlw	15
  5780  00DEDE  0B0F               	andlw	15
  5781  00DEE0  0102               	movlb	2	; () banked
  5782  00DEE2  6FF7               	movwf	main@keypress& (0+255),b
  5783  00DEE4                     
  5784                           ; BSR set to: 2
  5785  00DEE4  B281               	btfsc	3969,1,c	;volatile
  5786  00DEE6  D7FE               	goto	l327
  5787                           
  5788                           ;interface_main.c: 557: __nop();
  5789  00DEE8  F000               	nop	
  5790                           
  5791                           ;interface_main.c: 558: temp = keys[keypress];
  5792  00DEEA  0102               	movlb	2	; () banked
  5793  00DEEC  51F7               	movf	main@keypress& (0+255),w,b
  5794  00DEEE  0D01               	mullw	1
  5795  00DEF0  0E92               	movlw	low _keys
  5796  00DEF2  24F3               	addwf	prodl,w,c
  5797  00DEF4  6EF6               	movwf	tblptrl,c
  5798  00DEF6  0EFB               	movlw	high _keys
  5799  00DEF8  20F4               	addwfc	prodh,w,c
  5800  00DEFA  6EF7               	movwf	tblptrh,c
  5801  00DEFC                     	if	1	;There are 3 active tblptr bytes
  5802  00DEFC  6AF8               	clrf	tblptru,c
  5803  00DEFE  0E00               	movlw	low (__mediumconst shr (0+16))
  5804  00DF00  22F8               	addwfc	tblptru,f,c
  5805  00DF02                     	endif
  5806  00DF02  0008               	tblrd		*
  5807  00DF04  CFF5 F2FB          	movff	tablat,main@temp
  5808                           
  5809                           ; BSR set to: 2
  5810                           ;interface_main.c: 561: if (temp == '1'){
  5811  00DF08  0E31               	movlw	49
  5812  00DF0A  19FB               	xorwf	main@temp& (0+255),w,b
  5813  00DF0C  A4D8               	btfss	status,2,c
  5814  00DF0E  D017               	goto	l329
  5815                           
  5816                           ; BSR set to: 2
  5817                           ;interface_main.c: 562: height_mech((-1)*curr_height, curr_height);
  5818  00DF10  C2E4  F057         	movff	_curr_height,??_main
  5819  00DF14  C2E5  F058         	movff	_curr_height+1,??_main+1
  5820  00DF18  1E57               	comf	??_main,f,c
  5821  00DF1A  1E58               	comf	??_main+1,f,c
  5822  00DF1C  4A57               	infsnz	??_main,f,c
  5823  00DF1E  2A58               	incf	??_main+1,f,c
  5824  00DF20  C057  F008         	movff	??_main,height_mech@dy
  5825  00DF24  C058  F009         	movff	??_main+1,height_mech@dy+1
  5826  00DF28  C2E4  F00A         	movff	_curr_height,height_mech@curr_height
  5827  00DF2C  C2E5  F00B         	movff	_curr_height+1,height_mech@curr_height+1
  5828  00DF30  EC1E  F05E         	call	_height_mech	;wreg free
  5829                           
  5830                           ;interface_main.c: 563: curr_height = 0;
  5831  00DF34  0E00               	movlw	0
  5832  00DF36  0102               	movlb	2	; () banked
  5833  00DF38  6FE5               	movwf	(_curr_height+1)& (0+255),b
  5834  00DF3A  0E00               	movlw	0
  5835  00DF3C  6FE4               	movwf	_curr_height& (0+255),b
  5836  00DF3E                     l329:
  5837                           
  5838                           ; BSR set to: 2
  5839                           ;interface_main.c: 564: }
  5840                           ;interface_main.c: 567: for (i = 0; i < 16; i++){
  5841                           
  5842                           ; BSR set to: 2
  5843  00DF3E  0E00               	movlw	0
  5844  00DF40  6FFD               	movwf	(main@i+1)& (0+255),b
  5845  00DF42  0E00               	movlw	0
  5846  00DF44  6FFC               	movwf	main@i& (0+255),b
  5847  00DF46                     l7724:
  5848                           
  5849                           ; BSR set to: 2
  5850  00DF46  BFFD               	btfsc	(main@i+1)& (0+255),7,b
  5851  00DF48  D006               	goto	l330
  5852  00DF4A  51FD               	movf	(main@i+1)& (0+255),w,b
  5853  00DF4C  E138               	bnz	l7744
  5854  00DF4E  0E10               	movlw	16
  5855  00DF50  5DFC               	subwf	main@i& (0+255),w,b
  5856  00DF52  B0D8               	btfsc	status,0,c
  5857  00DF54  D034               	goto	u7540
  5858  00DF56                     l330:
  5859                           
  5860                           ; BSR set to: 2
  5861                           ;interface_main.c: 568: for (j = 0; j < 4; j++){
  5862                           
  5863                           ; BSR set to: 2
  5864  00DF56  0E00               	movlw	0
  5865  00DF58  6FFA               	movwf	(main@j+1)& (0+255),b
  5866  00DF5A  0E00               	movlw	0
  5867  00DF5C  6FF9               	movwf	main@j& (0+255),b
  5868  00DF5E                     l7730:
  5869                           
  5870                           ; BSR set to: 2
  5871  00DF5E  BFFA               	btfsc	(main@j+1)& (0+255),7,b
  5872  00DF60  D006               	goto	l332
  5873  00DF62  51FA               	movf	(main@j+1)& (0+255),w,b
  5874  00DF64  E129               	bnz	l7740
  5875  00DF66  0E04               	movlw	4
  5876  00DF68  5DF9               	subwf	main@j& (0+255),w,b
  5877  00DF6A  B0D8               	btfsc	status,0,c
  5878  00DF6C  D025               	goto	u7530
  5879  00DF6E                     l332:
  5880                           
  5881                           ; BSR set to: 2
  5882                           ;interface_main.c: 569: diet[i][j] = 0;}}
  5883                           
  5884                           ; BSR set to: 2
  5885  00DF6E  C2FC  F057         	movff	main@i,??_main
  5886  00DF72  C2FD  F058         	movff	main@i+1,??_main+1
  5887  00DF76  90D8               	bcf	status,0,c
  5888  00DF78  3657               	rlcf	??_main,f,c
  5889  00DF7A  3658               	rlcf	??_main+1,f,c
  5890  00DF7C  90D8               	bcf	status,0,c
  5891  00DF7E  3657               	rlcf	??_main,f,c
  5892  00DF80  3658               	rlcf	??_main+1,f,c
  5893  00DF82  90D8               	bcf	status,0,c
  5894  00DF84  3657               	rlcf	??_main,f,c
  5895  00DF86  3658               	rlcf	??_main+1,f,c
  5896  00DF88  0E00               	movlw	low main@diet
  5897  00DF8A  6E59               	movwf	(??_main+2)& (0+255),c
  5898  00DF8C  0E01               	movlw	high main@diet
  5899  00DF8E  6E5A               	movwf	(??_main+3)& (0+255),c
  5900  00DF90  5057               	movf	??_main,w,c
  5901  00DF92  2659               	addwf	??_main+2,f,c
  5902  00DF94  5058               	movf	??_main+1,w,c
  5903  00DF96  225A               	addwfc	??_main+3,f,c
  5904  00DF98  90D8               	bcf	status,0,c
  5905  00DF9A  35F9               	rlcf	main@j& (0+255),w,b
  5906  00DF9C  6ED9               	movwf	fsr2l,c
  5907  00DF9E  35FA               	rlcf	(main@j+1)& (0+255),w,b
  5908  00DFA0  6EDA               	movwf	fsr2h,c
  5909  00DFA2  5059               	movf	??_main+2,w,c
  5910  00DFA4  26D9               	addwf	fsr2l,f,c
  5911  00DFA6  505A               	movf	??_main+3,w,c
  5912  00DFA8  22DA               	addwfc	fsr2h,f,c
  5913  00DFAA  0E00               	movlw	0
  5914  00DFAC  6EDE               	movwf	postinc2,c
  5915  00DFAE  0E00               	movlw	0
  5916  00DFB0  6EDD               	movwf	postdec2,c
  5917                           
  5918                           ; BSR set to: 2
  5919  00DFB2  4BF9               	infsnz	main@j& (0+255),f,b
  5920  00DFB4  2BFA               	incf	(main@j+1)& (0+255),f,b
  5921  00DFB6  D7D3               	goto	l7730
  5922  00DFB8                     u7530:
  5923  00DFB8                     l7740:
  5924                           
  5925                           ; BSR set to: 2
  5926  00DFB8  4BFC               	infsnz	main@i& (0+255),f,b
  5927  00DFBA  2BFD               	incf	(main@i+1)& (0+255),f,b
  5928  00DFBC  D7C4               	goto	l7724
  5929  00DFBE                     u7540:
  5930  00DFBE                     l7744:
  5931                           
  5932                           ; BSR set to: 2
  5933                           ;interface_main.c: 571: for (i = 0; i < 16; i++){
  5934  00DFBE  0E00               	movlw	0
  5935  00DFC0  6FFD               	movwf	(main@i+1)& (0+255),b
  5936  00DFC2  0E00               	movlw	0
  5937  00DFC4  6FFC               	movwf	main@i& (0+255),b
  5938  00DFC6                     l7746:
  5939                           
  5940                           ; BSR set to: 2
  5941  00DFC6  BFFD               	btfsc	(main@i+1)& (0+255),7,b
  5942  00DFC8  D006               	goto	l334
  5943  00DFCA  51FD               	movf	(main@i+1)& (0+255),w,b
  5944  00DFCC  E136               	bnz	l7766
  5945  00DFCE  0E10               	movlw	16
  5946  00DFD0  5DFC               	subwf	main@i& (0+255),w,b
  5947  00DFD2  B0D8               	btfsc	status,0,c
  5948  00DFD4  D032               	goto	u7580
  5949  00DFD6                     l334:
  5950                           
  5951                           ; BSR set to: 2
  5952                           ;interface_main.c: 572: for (j = 0; j < 3; j++){
  5953                           
  5954                           ; BSR set to: 2
  5955  00DFD6  0E00               	movlw	0
  5956  00DFD8  6FFA               	movwf	(main@j+1)& (0+255),b
  5957  00DFDA  0E00               	movlw	0
  5958  00DFDC  6FF9               	movwf	main@j& (0+255),b
  5959  00DFDE                     l7752:
  5960                           
  5961                           ; BSR set to: 2
  5962  00DFDE  BFFA               	btfsc	(main@j+1)& (0+255),7,b
  5963  00DFE0  D006               	goto	l336
  5964  00DFE2  51FA               	movf	(main@j+1)& (0+255),w,b
  5965  00DFE4  E127               	bnz	l7762
  5966  00DFE6  0E03               	movlw	3
  5967  00DFE8  5DF9               	subwf	main@j& (0+255),w,b
  5968  00DFEA  B0D8               	btfsc	status,0,c
  5969  00DFEC  D023               	goto	u7570
  5970  00DFEE                     l336:
  5971                           
  5972                           ; BSR set to: 2
  5973                           ;interface_main.c: 573: mat[i][j] = 0;}}
  5974                           
  5975                           ; BSR set to: 2
  5976  00DFEE  C2FC  F001         	movff	main@i,___wmul@multiplier
  5977  00DFF2  C2FD  F002         	movff	main@i+1,___wmul@multiplier+1
  5978  00DFF6  0E00               	movlw	0
  5979  00DFF8  6E04               	movwf	___wmul@multiplicand+1,c
  5980  00DFFA  0E06               	movlw	6
  5981  00DFFC  6E03               	movwf	___wmul@multiplicand,c
  5982  00DFFE  ECB7  F051         	call	___wmul	;wreg free
  5983  00E002  0E80               	movlw	low main@mat
  5984  00E004  6E57               	movwf	??_main& (0+255),c
  5985  00E006  0E00               	movlw	high main@mat
  5986  00E008  6E58               	movwf	(??_main+1)& (0+255),c
  5987  00E00A  5001               	movf	?___wmul,w,c
  5988  00E00C  2657               	addwf	??_main,f,c
  5989  00E00E  5002               	movf	?___wmul+1,w,c
  5990  00E010  2258               	addwfc	??_main+1,f,c
  5991  00E012  90D8               	bcf	status,0,c
  5992  00E014  0102               	movlb	2	; () banked
  5993  00E016  35F9               	rlcf	main@j& (0+255),w,b
  5994  00E018  6ED9               	movwf	fsr2l,c
  5995  00E01A  35FA               	rlcf	(main@j+1)& (0+255),w,b
  5996  00E01C  6EDA               	movwf	fsr2h,c
  5997  00E01E  5057               	movf	??_main,w,c
  5998  00E020  26D9               	addwf	fsr2l,f,c
  5999  00E022  5058               	movf	??_main+1,w,c
  6000  00E024  22DA               	addwfc	fsr2h,f,c
  6001  00E026  0E00               	movlw	0
  6002  00E028  6EDE               	movwf	postinc2,c
  6003  00E02A  0E00               	movlw	0
  6004  00E02C  6EDD               	movwf	postdec2,c
  6005                           
  6006                           ; BSR set to: 2
  6007  00E02E  4BF9               	infsnz	main@j& (0+255),f,b
  6008  00E030  2BFA               	incf	(main@j+1)& (0+255),f,b
  6009  00E032  D7D5               	goto	l7752
  6010  00E034                     u7570:
  6011  00E034                     l7762:
  6012                           
  6013                           ; BSR set to: 2
  6014  00E034  4BFC               	infsnz	main@i& (0+255),f,b
  6015  00E036  2BFD               	incf	(main@i+1)& (0+255),f,b
  6016  00E038  D7C6               	goto	l7746
  6017  00E03A                     u7580:
  6018  00E03A                     l7766:
  6019                           
  6020                           ; BSR set to: 2
  6021                           ;interface_main.c: 575: tot_drawers = 0;
  6022  00E03A  0E00               	movlw	0
  6023  00E03C  0101               	movlb	1	; () banked
  6024  00E03E  6FFD               	movwf	(main@tot_drawers+1)& (0+255),b
  6025  00E040  0E00               	movlw	0
  6026  00E042  6FFC               	movwf	main@tot_drawers& (0+255),b
  6027                           
  6028                           ;interface_main.c: 576: drawer_used = 0;
  6029  00E044  0E00               	movlw	0
  6030  00E046  6FEC               	movwf	(main@drawer_used+1)& (0+255),b
  6031  00E048  0E00               	movlw	0
  6032  00E04A  6FEB               	movwf	main@drawer_used& (0+255),b
  6033                           
  6034                           ;interface_main.c: 577: i = 0;
  6035  00E04C  0E00               	movlw	0
  6036  00E04E  0102               	movlb	2	; () banked
  6037  00E050  6FFD               	movwf	(main@i+1)& (0+255),b
  6038  00E052  0E00               	movlw	0
  6039  00E054  6FFC               	movwf	main@i& (0+255),b
  6040                           
  6041                           ;interface_main.c: 578: j = 0;
  6042  00E056  0E00               	movlw	0
  6043  00E058  6FFA               	movwf	(main@j+1)& (0+255),b
  6044  00E05A  0E00               	movlw	0
  6045  00E05C  6FF9               	movwf	main@j& (0+255),b
  6046                           
  6047                           ; BSR set to: 2
  6048                           ;interface_main.c: 579: lcdInst(0x01);_delay((unsigned long)((15)*(40000000/4000.0)));;
  6049  00E05E  0E01               	movlw	1
  6050  00E060  EC3E  F051         	call	_lcdInst
  6051  00E064  0EC3               	movlw	195
  6052  00E066  6E57               	movwf	??_main& (0+255),c
  6053  00E068  0ECD               	movlw	205
  6054  00E06A                     u9407:
  6055  00E06A  2EE8               	decfsz	wreg,f,c
  6056  00E06C  D7FE               	bra	u9407
  6057  00E06E  2E57               	decfsz	??_main& (0+255),f,c
  6058  00E070  D7FC               	bra	u9407
  6059  00E072  F000               	nop	
  6060                           
  6061                           ;interface_main.c: 580: lcdInst(0x80);_delay((unsigned long)((5)*(40000000/4000.0)));;
  6062  00E074  0E80               	movlw	128
  6063  00E076  EC3E  F051         	call	_lcdInst
  6064  00E07A  0E41               	movlw	65
  6065  00E07C  6E57               	movwf	??_main& (0+255),c
  6066  00E07E  0EEE               	movlw	238
  6067  00E080                     u9417:
  6068  00E080  2EE8               	decfsz	wreg,f,c
  6069  00E082  D7FE               	bra	u9417
  6070  00E084  2E57               	decfsz	??_main& (0+255),f,c
  6071  00E086  D7FC               	bra	u9417
  6072  00E088  D000               	nop2	
  6073                           
  6074                           ;interface_main.c: 581: }
  6075  00E08A  D581               	goto	u7350
  6076  00E08C                     l315:
  6077                           
  6078                           ;interface_main.c: 584: else if ((temp_int >= 1)&&(temp_int <= 4)&&(tot_drawers < 8)){
  6079  00E08C  0102               	movlb	2	; () banked
  6080  00E08E  BFF4               	btfsc	(main@temp_int+1)& (0+255),7,b
  6081  00E090  EF6B  F077         	goto	l339
  6082  00E094  51F4               	movf	(main@temp_int+1)& (0+255),w,b
  6083  00E096  E104               	bnz	u7590
  6084  00E098  05F3               	decf	main@temp_int& (0+255),w,b
  6085  00E09A  A0D8               	btfss	status,0,c
  6086  00E09C  EF6B  F077         	goto	l339
  6087  00E0A0                     u7590:
  6088                           
  6089                           ; BSR set to: 2
  6090  00E0A0  BFF4               	btfsc	(main@temp_int+1)& (0+255),7,b
  6091  00E0A2  D007               	goto	u7600
  6092  00E0A4  51F4               	movf	(main@temp_int+1)& (0+255),w,b
  6093  00E0A6  E103               	bnz	u7601
  6094  00E0A8  0E05               	movlw	5
  6095  00E0AA  5DF3               	subwf	main@temp_int& (0+255),w,b
  6096  00E0AC  B0D8               	btfsc	status,0,c
  6097  00E0AE                     u7601:
  6098  00E0AE  EF6B  F077         	goto	l339
  6099  00E0B2                     u7600:
  6100                           
  6101                           ; BSR set to: 2
  6102  00E0B2  0101               	movlb	1	; () banked
  6103  00E0B4  BFFD               	btfsc	(main@tot_drawers+1)& (0+255),7,b
  6104  00E0B6  D007               	goto	u7610
  6105  00E0B8  51FD               	movf	(main@tot_drawers+1)& (0+255),w,b
  6106  00E0BA  E103               	bnz	u7611
  6107  00E0BC  0E08               	movlw	8
  6108  00E0BE  5DFC               	subwf	main@tot_drawers& (0+255),w,b
  6109  00E0C0  B0D8               	btfsc	status,0,c
  6110  00E0C2                     u7611:
  6111  00E0C2  EF6B  F077         	goto	l339
  6112  00E0C6                     u7610:
  6113                           
  6114                           ; BSR set to: 1
  6115                           ;interface_main.c: 585: lcdInst(0x01);_delay((unsigned long)((15)*(40000000/4000.0)));;
  6116  00E0C6  0E01               	movlw	1
  6117  00E0C8  EC3E  F051         	call	_lcdInst
  6118  00E0CC  0EC3               	movlw	195
  6119  00E0CE  6E57               	movwf	??_main& (0+255),c
  6120  00E0D0  0ECD               	movlw	205
  6121  00E0D2                     u9427:
  6122  00E0D2  2EE8               	decfsz	wreg,f,c
  6123  00E0D4  D7FE               	bra	u9427
  6124  00E0D6  2E57               	decfsz	??_main& (0+255),f,c
  6125  00E0D8  D7FC               	bra	u9427
  6126  00E0DA  F000               	nop	
  6127                           
  6128                           ;interface_main.c: 586: lcdInst(0x80);_delay((unsigned long)((5)*(40000000/4000.0)));;
  6129  00E0DC  0E80               	movlw	128
  6130  00E0DE  EC3E  F051         	call	_lcdInst
  6131  00E0E2  0E41               	movlw	65
  6132  00E0E4  6E57               	movwf	??_main& (0+255),c
  6133  00E0E6  0EEE               	movlw	238
  6134  00E0E8                     u9437:
  6135  00E0E8  2EE8               	decfsz	wreg,f,c
  6136  00E0EA  D7FE               	bra	u9437
  6137  00E0EC  2E57               	decfsz	??_main& (0+255),f,c
  6138  00E0EE  D7FC               	bra	u9437
  6139  00E0F0  D000               	nop2	
  6140                           
  6141                           ;interface_main.c: 588: printf("Row %d...        Press *", temp_int);
  6142  00E0F2  0EB2               	movlw	low STR_41
  6143  00E0F4  6E0D               	movwf	printf@f,c
  6144  00E0F6  0EFC               	movlw	high STR_41
  6145  00E0F8  6E0E               	movwf	printf@f+1,c
  6146  00E0FA  C2F3  F00F         	movff	main@temp_int,?_printf+2
  6147  00E0FE  C2F4  F010         	movff	main@temp_int+1,?_printf+3
  6148  00E102  EC66  F061         	call	_printf	;wreg free
  6149                           
  6150                           ;interface_main.c: 589: lcdInst(0xC0);;
  6151  00E106  0EC0               	movlw	192
  6152  00E108  EC3E  F051         	call	_lcdInst
  6153                           
  6154                           ;interface_main.c: 590: printf("                to skip drawer");
  6155  00E10C  0E75               	movlw	low STR_42
  6156  00E10E  6E0D               	movwf	printf@f,c
  6157  00E110  0EFC               	movlw	high STR_42
  6158  00E112  6E0E               	movwf	printf@f+1,c
  6159  00E114  EC66  F061         	call	_printf	;wreg free
  6160                           
  6161                           ;interface_main.c: 591: _delay((unsigned long)((700)*(40000000/4000.0)));
  6162  00E118  0E24               	movlw	36
  6163  00E11A  6E58               	movwf	(??_main+1)& (0+255),c
  6164  00E11C  0E83               	movlw	131
  6165  00E11E  6E57               	movwf	??_main& (0+255),c
  6166  00E120  0ECF               	movlw	207
  6167  00E122                     u9447:
  6168  00E122  2EE8               	decfsz	wreg,f,c
  6169  00E124  D7FE               	bra	u9447
  6170  00E126  2E57               	decfsz	??_main& (0+255),f,c
  6171  00E128  D7FC               	bra	u9447
  6172  00E12A  2E58               	decfsz	(??_main+1)& (0+255),f,c
  6173  00E12C  D7FA               	bra	u9447
  6174  00E12E  F000               	nop	
  6175                           
  6176                           ;interface_main.c: 592: for (i = 0; i < 4 ; i++){
  6177  00E130  0E00               	movlw	0
  6178  00E132  0102               	movlb	2	; () banked
  6179  00E134  6FFD               	movwf	(main@i+1)& (0+255),b
  6180  00E136  0E00               	movlw	0
  6181  00E138  6FFC               	movwf	main@i& (0+255),b
  6182  00E13A                     l7798:
  6183                           
  6184                           ; BSR set to: 2
  6185  00E13A  BFFD               	btfsc	(main@i+1)& (0+255),7,b
  6186  00E13C  D006               	goto	l340
  6187  00E13E  51FD               	movf	(main@i+1)& (0+255),w,b
  6188  00E140  E118               	bnz	l7810
  6189  00E142  0E04               	movlw	4
  6190  00E144  5DFC               	subwf	main@i& (0+255),w,b
  6191  00E146  B0D8               	btfsc	status,0,c
  6192  00E148  D014               	goto	u7630
  6193  00E14A                     l340:
  6194                           
  6195                           ; BSR set to: 2
  6196                           ;interface_main.c: 593: lcd_shift_display(4, 0);
  6197                           
  6198                           ; BSR set to: 2
  6199  00E14A  0E00               	movlw	0
  6200  00E14C  6E04               	movwf	lcd_shift_display@direction,c
  6201  00E14E  0E04               	movlw	4
  6202  00E150  EC6A  F051         	call	_lcd_shift_display
  6203                           
  6204                           ;interface_main.c: 594: _delay((unsigned long)((150)*(40000000/4000.0)));
  6205  00E154  0E08               	movlw	8
  6206  00E156  6E58               	movwf	(??_main+1)& (0+255),c
  6207  00E158  0E9D               	movlw	157
  6208  00E15A  6E57               	movwf	??_main& (0+255),c
  6209  00E15C  0E06               	movlw	6
  6210  00E15E                     u9457:
  6211  00E15E  2EE8               	decfsz	wreg,f,c
  6212  00E160  D7FE               	bra	u9457
  6213  00E162  2E57               	decfsz	??_main& (0+255),f,c
  6214  00E164  D7FC               	bra	u9457
  6215  00E166  2E58               	decfsz	(??_main+1)& (0+255),f,c
  6216  00E168  D7FA               	bra	u9457
  6217  00E16A  0102               	movlb	2	; () banked
  6218  00E16C  4BFC               	infsnz	main@i& (0+255),f,b
  6219  00E16E  2BFD               	incf	(main@i+1)& (0+255),f,b
  6220  00E170  D7E4               	goto	l7798
  6221  00E172                     u7630:
  6222  00E172                     l7810:
  6223                           
  6224                           ; BSR set to: 2
  6225                           ;interface_main.c: 595: }
  6226                           ;interface_main.c: 596: _delay((unsigned long)((1500)*(40000000/4000.0)));
  6227  00E172  0E4D               	movlw	77
  6228  00E174  6E58               	movwf	(??_main+1)& (0+255),c
  6229  00E176  0E19               	movlw	25
  6230  00E178  6E57               	movwf	??_main& (0+255),c
  6231  00E17A  0E50               	movlw	80
  6232  00E17C                     u9467:
  6233  00E17C  2EE8               	decfsz	wreg,f,c
  6234  00E17E  D7FE               	bra	u9467
  6235  00E180  2E57               	decfsz	??_main& (0+255),f,c
  6236  00E182  D7FC               	bra	u9467
  6237  00E184  2E58               	decfsz	(??_main+1)& (0+255),f,c
  6238  00E186  D7FA               	bra	u9467
  6239                           
  6240                           ;interface_main.c: 597: lcdInst(0x01);_delay((unsigned long)((15)*(40000000/4000.0)));;
  6241  00E188  0E01               	movlw	1
  6242  00E18A  EC3E  F051         	call	_lcdInst
  6243  00E18E  0EC3               	movlw	195
  6244  00E190  6E57               	movwf	??_main& (0+255),c
  6245  00E192  0ECD               	movlw	205
  6246  00E194                     u9477:
  6247  00E194  2EE8               	decfsz	wreg,f,c
  6248  00E196  D7FE               	bra	u9477
  6249  00E198  2E57               	decfsz	??_main& (0+255),f,c
  6250  00E19A  D7FC               	bra	u9477
  6251  00E19C  F000               	nop	
  6252                           
  6253                           ;interface_main.c: 598: lcdInst(0x80);_delay((unsigned long)((5)*(40000000/4000.0)));;
  6254  00E19E  0E80               	movlw	128
  6255  00E1A0  EC3E  F051         	call	_lcdInst
  6256  00E1A4  0E41               	movlw	65
  6257  00E1A6  6E57               	movwf	??_main& (0+255),c
  6258  00E1A8  0EEE               	movlw	238
  6259  00E1AA                     u9487:
  6260  00E1AA  2EE8               	decfsz	wreg,f,c
  6261  00E1AC  D7FE               	bra	u9487
  6262  00E1AE  2E57               	decfsz	??_main& (0+255),f,c
  6263  00E1B0  D7FC               	bra	u9487
  6264  00E1B2  D000               	nop2	
  6265                           
  6266                           ;interface_main.c: 601: row = (temp_int-1)*4;
  6267  00E1B4  C2F3  F057         	movff	main@temp_int,??_main
  6268  00E1B8  C2F4  F058         	movff	main@temp_int+1,??_main+1
  6269  00E1BC  90D8               	bcf	status,0,c
  6270  00E1BE  3657               	rlcf	??_main,f,c
  6271  00E1C0  3658               	rlcf	??_main+1,f,c
  6272  00E1C2  90D8               	bcf	status,0,c
  6273  00E1C4  3657               	rlcf	??_main,f,c
  6274  00E1C6  3658               	rlcf	??_main+1,f,c
  6275  00E1C8  0EFC               	movlw	252
  6276  00E1CA  2457               	addwf	??_main,w,c
  6277  00E1CC  0102               	movlb	2	; () banked
  6278  00E1CE  6FF5               	movwf	main@row& (0+255),b
  6279  00E1D0  0EFF               	movlw	255
  6280  00E1D2  2058               	addwfc	??_main+1,w,c
  6281  00E1D4  6FF6               	movwf	(main@row+1)& (0+255),b
  6282                           
  6283                           ; BSR set to: 2
  6284                           ;interface_main.c: 603: for (i = 0; i < 4; i++){
  6285  00E1D6  0E00               	movlw	0
  6286  00E1D8  6FFD               	movwf	(main@i+1)& (0+255),b
  6287  00E1DA  0E00               	movlw	0
  6288  00E1DC  6FFC               	movwf	main@i& (0+255),b
  6289                           
  6290                           ; BSR set to: 2
  6291  00E1DE  BFFD               	btfsc	(main@i+1)& (0+255),7,b
  6292  00E1E0  D00A               	goto	l342
  6293  00E1E2  51FD               	movf	(main@i+1)& (0+255),w,b
  6294  00E1E4  E106               	bnz	u7640
  6295  00E1E6  0E04               	movlw	4
  6296  00E1E8  5DFC               	subwf	main@i& (0+255),w,b
  6297  00E1EA  B0D8               	btfsc	status,0,c
  6298  00E1EC  EF60  F077         	goto	u8080
  6299  00E1F0  D002               	goto	l342
  6300  00E1F2                     u7640:
  6301                           
  6302                           ; BSR set to: 2
  6303  00E1F2  EF60  F077         	goto	u8080
  6304  00E1F6                     l342:
  6305                           
  6306                           ; BSR set to: 2
  6307                           ;interface_main.c: 604: legit_diet = 0;
  6308                           
  6309                           ; BSR set to: 2
  6310  00E1F6  0E00               	movlw	0
  6311  00E1F8  0101               	movlb	1	; () banked
  6312  00E1FA  6FFF               	movwf	(main@legit_diet+1)& (0+255),b
  6313  00E1FC  0E00               	movlw	0
  6314  00E1FE  6FFE               	movwf	main@legit_diet& (0+255),b
  6315                           
  6316                           ;interface_main.c: 605: legit_pieces = 0;
  6317  00E200  0E00               	movlw	0
  6318  00E202  6FF0               	movwf	(main@legit_pieces+1)& (0+255),b
  6319  00E204  0E00               	movlw	0
  6320  00E206  6FEF               	movwf	main@legit_pieces& (0+255),b
  6321                           
  6322                           ;interface_main.c: 606: drawer_used = 0;
  6323  00E208  0E00               	movlw	0
  6324  00E20A  6FEC               	movwf	(main@drawer_used+1)& (0+255),b
  6325  00E20C  0E00               	movlw	0
  6326  00E20E  6FEB               	movwf	main@drawer_used& (0+255),b
  6327                           
  6328                           ;interface_main.c: 608: for (j = 0; j < 3; j++){
  6329  00E210  0E00               	movlw	0
  6330  00E212  0102               	movlb	2	; () banked
  6331  00E214  6FFA               	movwf	(main@j+1)& (0+255),b
  6332  00E216  0E00               	movlw	0
  6333  00E218  6FF9               	movwf	main@j& (0+255),b
  6334                           
  6335                           ; BSR set to: 2
  6336  00E21A  BFFA               	btfsc	(main@j+1)& (0+255),7,b
  6337  00E21C  D008               	goto	l344
  6338  00E21E  51FA               	movf	(main@j+1)& (0+255),w,b
  6339  00E220  E105               	bnz	u7650
  6340  00E222  0E03               	movlw	3
  6341  00E224  5DF9               	subwf	main@j& (0+255),w,b
  6342  00E226  B0D8               	btfsc	status,0,c
  6343  00E228  D2DF               	goto	l375
  6344  00E22A  D001               	goto	l344
  6345  00E22C                     u7650:
  6346                           
  6347                           ; BSR set to: 2
  6348  00E22C  D2DD               	goto	l375
  6349  00E22E                     l344:
  6350                           
  6351                           ; BSR set to: 2
  6352                           ;interface_main.c: 609: if (mat[i + row][j] != 0){
  6353                           
  6354                           ; BSR set to: 2
  6355  00E22E  51F5               	movf	main@row& (0+255),w,b
  6356  00E230  25FC               	addwf	main@i& (0+255),w,b
  6357  00E232  6E01               	movwf	___wmul@multiplier,c
  6358  00E234  51F6               	movf	(main@row+1)& (0+255),w,b
  6359  00E236  21FD               	addwfc	(main@i+1)& (0+255),w,b
  6360  00E238  6E02               	movwf	___wmul@multiplier+1,c
  6361  00E23A  0E00               	movlw	0
  6362  00E23C  6E04               	movwf	___wmul@multiplicand+1,c
  6363  00E23E  0E06               	movlw	6
  6364  00E240  6E03               	movwf	___wmul@multiplicand,c
  6365  00E242  ECB7  F051         	call	___wmul	;wreg free
  6366  00E246  0E80               	movlw	low main@mat
  6367  00E248  6E57               	movwf	??_main& (0+255),c
  6368  00E24A  0E00               	movlw	high main@mat
  6369  00E24C  6E58               	movwf	(??_main+1)& (0+255),c
  6370  00E24E  5001               	movf	?___wmul,w,c
  6371  00E250  2657               	addwf	??_main,f,c
  6372  00E252  5002               	movf	?___wmul+1,w,c
  6373  00E254  2258               	addwfc	??_main+1,f,c
  6374  00E256  90D8               	bcf	status,0,c
  6375  00E258  0102               	movlb	2	; () banked
  6376  00E25A  35F9               	rlcf	main@j& (0+255),w,b
  6377  00E25C  6ED9               	movwf	fsr2l,c
  6378  00E25E  35FA               	rlcf	(main@j+1)& (0+255),w,b
  6379  00E260  6EDA               	movwf	fsr2h,c
  6380  00E262  5057               	movf	??_main,w,c
  6381  00E264  26D9               	addwf	fsr2l,f,c
  6382  00E266  5058               	movf	??_main+1,w,c
  6383  00E268  22DA               	addwfc	fsr2h,f,c
  6384  00E26A  50DE               	movf	postinc2,w,c
  6385  00E26C  10DE               	iorwf	postinc2,w,c
  6386  00E26E  B4D8               	btfsc	status,2,c
  6387  00E270  D005               	goto	l346
  6388                           
  6389                           ; BSR set to: 2
  6390                           ;interface_main.c: 610: tot_drawers -= 1;
  6391  00E272  0101               	movlb	1	; () banked
  6392  00E274  07FC               	decf	main@tot_drawers& (0+255),f,b
  6393  00E276  A0D8               	btfss	status,0,c
  6394  00E278  07FD               	decf	(main@tot_drawers+1)& (0+255),f,b
  6395                           
  6396                           ;interface_main.c: 611: break;}}
  6397  00E27A  D2B6               	goto	l375
  6398  00E27C                     l346:
  6399                           
  6400                           ; BSR set to: 1
  6401  00E27C  0102               	movlb	2	; () banked
  6402  00E27E  4BF9               	infsnz	main@j& (0+255),f,b
  6403  00E280  2BFA               	incf	(main@j+1)& (0+255),f,b
  6404                           
  6405                           ; BSR set to: 2
  6406  00E282  BFFA               	btfsc	(main@j+1)& (0+255),7,b
  6407  00E284  D7D4               	goto	l344
  6408  00E286  51FA               	movf	(main@j+1)& (0+255),w,b
  6409  00E288  E101               	bnz	u7670
  6410  00E28A  D7CB               	goto	L1
  6411  00E28C                     u7670:
  6412                           
  6413                           ; BSR set to: 2
  6414                           ;interface_main.c: 613: while (legit_diet == 0){
  6415  00E28C  D2AD               	goto	l375
  6416  00E28E                     
  6417                           ;interface_main.c: 614: j = 0;
  6418                           
  6419                           ; BSR set to: 2
  6420  00E28E  0E00               	movlw	0
  6421  00E290  0102               	movlb	2	; () banked
  6422  00E292  6FFA               	movwf	(main@j+1)& (0+255),b
  6423  00E294  0E00               	movlw	0
  6424  00E296  6FF9               	movwf	main@j& (0+255),b
  6425                           
  6426                           ;interface_main.c: 615: k = 0;
  6427  00E298  0E00               	movlw	0
  6428  00E29A  6FF0               	movwf	(main@k+1)& (0+255),b
  6429  00E29C  0E00               	movlw	0
  6430  00E29E  6FEF               	movwf	main@k& (0+255),b
  6431                           
  6432                           ; BSR set to: 2
  6433                           ;interface_main.c: 616: lcdInst(0x01);_delay((unsigned long)((15)*(40000000/4000.0)));;
  6434  00E2A0  0E01               	movlw	1
  6435  00E2A2  EC3E  F051         	call	_lcdInst
  6436  00E2A6  0EC3               	movlw	195
  6437  00E2A8  6E57               	movwf	??_main& (0+255),c
  6438  00E2AA  0ECD               	movlw	205
  6439  00E2AC                     u9497:
  6440  00E2AC  2EE8               	decfsz	wreg,f,c
  6441  00E2AE  D7FE               	bra	u9497
  6442  00E2B0  2E57               	decfsz	??_main& (0+255),f,c
  6443  00E2B2  D7FC               	bra	u9497
  6444  00E2B4  F000               	nop	
  6445                           
  6446                           ;interface_main.c: 617: lcdInst(0x80);_delay((unsigned long)((5)*(40000000/4000.0)));;
  6447  00E2B6  0E80               	movlw	128
  6448  00E2B8  EC3E  F051         	call	_lcdInst
  6449  00E2BC  0E41               	movlw	65
  6450  00E2BE  6E57               	movwf	??_main& (0+255),c
  6451  00E2C0  0EEE               	movlw	238
  6452  00E2C2                     u9507:
  6453  00E2C2  2EE8               	decfsz	wreg,f,c
  6454  00E2C4  D7FE               	bra	u9507
  6455  00E2C6  2E57               	decfsz	??_main& (0+255),f,c
  6456  00E2C8  D7FC               	bra	u9507
  6457  00E2CA  D000               	nop2	
  6458                           
  6459                           ;interface_main.c: 618: printf("D%d Diet:", i + 1 + row);
  6460  00E2CC  0E5B               	movlw	low STR_43
  6461  00E2CE  6E0D               	movwf	printf@f,c
  6462  00E2D0  0EFF               	movlw	high STR_43
  6463  00E2D2  6E0E               	movwf	printf@f+1,c
  6464  00E2D4  0102               	movlb	2	; () banked
  6465  00E2D6  51F5               	movf	main@row& (0+255),w,b
  6466  00E2D8  25FC               	addwf	main@i& (0+255),w,b
  6467  00E2DA  6E57               	movwf	??_main& (0+255),c
  6468  00E2DC  51F6               	movf	(main@row+1)& (0+255),w,b
  6469  00E2DE  21FD               	addwfc	(main@i+1)& (0+255),w,b
  6470  00E2E0  6E58               	movwf	(??_main+1)& (0+255),c
  6471  00E2E2  0E01               	movlw	1
  6472  00E2E4  2457               	addwf	??_main,w,c
  6473  00E2E6  6E0F               	movwf	?_printf+2,c
  6474  00E2E8  0E00               	movlw	0
  6475  00E2EA  2058               	addwfc	??_main+1,w,c
  6476  00E2EC  6E10               	movwf	?_printf+3,c
  6477  00E2EE  EC66  F061         	call	_printf	;wreg free
  6478                           
  6479                           ;interface_main.c: 619: lcd_set_cursor(10, 0);
  6480  00E2F2  0E00               	movlw	0
  6481  00E2F4  6E07               	movwf	lcd_set_cursor@y,c
  6482  00E2F6  0E0A               	movlw	10
  6483  00E2F8  EC18  F052         	call	_lcd_set_cursor
  6484                           
  6485                           ;interface_main.c: 620: lcdInst(8 | (1 << 2) | (1 << 1)| 0);;
  6486  00E2FC  0E0E               	movlw	14
  6487  00E2FE  EC3E  F051         	call	_lcdInst
  6488                           
  6489                           ;interface_main.c: 621: while (j < 4){
  6490  00E302  D0E1               	goto	l349
  6491  00E304                     
  6492                           ;interface_main.c: 623: while(PORTBbits.RB1 == 0){ continue; }
  6493                           
  6494                           ;interface_main.c: 622: while (1){
  6495  00E304  A281               	btfss	3969,1,c	;volatile
  6496  00E306  D7FE               	goto	l350
  6497                           
  6498                           ;interface_main.c: 624: keypress = (PORTB & 0xF0) >> 4;
  6499  00E308  3881               	swapf	3969,w,c	;volatile
  6500  00E30A  0B0F               	andlw	15
  6501  00E30C  0B0F               	andlw	15
  6502  00E30E  0102               	movlb	2	; () banked
  6503  00E310  6FF7               	movwf	main@keypress& (0+255),b
  6504  00E312                     
  6505                           ; BSR set to: 2
  6506  00E312  B281               	btfsc	3969,1,c	;volatile
  6507  00E314  D7FE               	goto	l356
  6508                           
  6509                           ;interface_main.c: 626: __nop();
  6510  00E316  F000               	nop	
  6511                           
  6512                           ;interface_main.c: 627: temp = keys[keypress];
  6513  00E318  0102               	movlb	2	; () banked
  6514  00E31A  51F7               	movf	main@keypress& (0+255),w,b
  6515  00E31C  0D01               	mullw	1
  6516  00E31E  0E92               	movlw	low _keys
  6517  00E320  24F3               	addwf	prodl,w,c
  6518  00E322  6EF6               	movwf	tblptrl,c
  6519  00E324  0EFB               	movlw	high _keys
  6520  00E326  20F4               	addwfc	prodh,w,c
  6521  00E328  6EF7               	movwf	tblptrh,c
  6522  00E32A                     	if	1	;There are 3 active tblptr bytes
  6523  00E32A  6AF8               	clrf	tblptru,c
  6524  00E32C  0E00               	movlw	low (__mediumconst shr (0+16))
  6525  00E32E  22F8               	addwfc	tblptru,f,c
  6526  00E330                     	endif
  6527  00E330  0008               	tblrd		*
  6528  00E332  CFF5 F2FB          	movff	tablat,main@temp
  6529                           
  6530                           ; BSR set to: 2
  6531                           ;interface_main.c: 628: if ((temp - '0') == 1){
  6532  00E336  0ED0               	movlw	208
  6533  00E338  6E57               	movwf	??_main& (0+255),c
  6534  00E33A  0EFF               	movlw	255
  6535  00E33C  6E58               	movwf	(??_main+1)& (0+255),c
  6536  00E33E  51FB               	movf	main@temp& (0+255),w,b
  6537  00E340  6E59               	movwf	(??_main+2)& (0+255),c
  6538  00E342  6A5A               	clrf	(??_main+3)& (0+255),c
  6539  00E344  5057               	movf	??_main,w,c
  6540  00E346  2659               	addwf	??_main+2,f,c
  6541  00E348  5058               	movf	??_main+1,w,c
  6542  00E34A  225A               	addwfc	??_main+3,f,c
  6543  00E34C  0459               	decf	??_main+2,w,c
  6544  00E34E  105A               	iorwf	??_main+3,w,c
  6545  00E350  A4D8               	btfss	status,2,c
  6546  00E352  D002               	goto	l358
  6547                           
  6548                           ; BSR set to: 2
  6549                           ;interface_main.c: 629: letter = 'R';
  6550  00E354  0E52               	movlw	82
  6551  00E356  D02C               	goto	L4
  6552  00E358                     l358:
  6553                           
  6554                           ;interface_main.c: 631: else if ((temp - '0') == 2){
  6555                           
  6556                           ; BSR set to: 1
  6557  00E358  0ED0               	movlw	208
  6558  00E35A  6E57               	movwf	??_main& (0+255),c
  6559  00E35C  0EFF               	movlw	255
  6560  00E35E  6E58               	movwf	(??_main+1)& (0+255),c
  6561  00E360  0102               	movlb	2	; () banked
  6562  00E362  51FB               	movf	main@temp& (0+255),w,b
  6563  00E364  6E59               	movwf	(??_main+2)& (0+255),c
  6564  00E366  6A5A               	clrf	(??_main+3)& (0+255),c
  6565  00E368  5057               	movf	??_main,w,c
  6566  00E36A  2659               	addwf	??_main+2,f,c
  6567  00E36C  5058               	movf	??_main+1,w,c
  6568  00E36E  225A               	addwfc	??_main+3,f,c
  6569  00E370  0E02               	movlw	2
  6570  00E372  1859               	xorwf	??_main+2,w,c
  6571  00E374  105A               	iorwf	??_main+3,w,c
  6572  00E376  A4D8               	btfss	status,2,c
  6573  00E378  D002               	goto	l361
  6574                           
  6575                           ; BSR set to: 2
  6576                           ;interface_main.c: 632: letter = 'F';
  6577  00E37A  0E46               	movlw	70
  6578  00E37C  D019               	goto	L4
  6579  00E37E                     l361:
  6580                           
  6581                           ;interface_main.c: 634: else if ((temp - '0') == 3){
  6582                           
  6583                           ; BSR set to: 1
  6584  00E37E  0ED0               	movlw	208
  6585  00E380  6E57               	movwf	??_main& (0+255),c
  6586  00E382  0EFF               	movlw	255
  6587  00E384  6E58               	movwf	(??_main+1)& (0+255),c
  6588  00E386  0102               	movlb	2	; () banked
  6589  00E388  51FB               	movf	main@temp& (0+255),w,b
  6590  00E38A  6E59               	movwf	(??_main+2)& (0+255),c
  6591  00E38C  6A5A               	clrf	(??_main+3)& (0+255),c
  6592  00E38E  5057               	movf	??_main,w,c
  6593  00E390  2659               	addwf	??_main+2,f,c
  6594  00E392  5058               	movf	??_main+1,w,c
  6595  00E394  225A               	addwfc	??_main+3,f,c
  6596  00E396  0E03               	movlw	3
  6597  00E398  1859               	xorwf	??_main+2,w,c
  6598  00E39A  105A               	iorwf	??_main+3,w,c
  6599  00E39C  A4D8               	btfss	status,2,c
  6600  00E39E  D002               	goto	l363
  6601                           
  6602                           ; BSR set to: 2
  6603                           ;interface_main.c: 635: letter = 'L';
  6604  00E3A0  0E4C               	movlw	76
  6605  00E3A2  D006               	goto	L4
  6606  00E3A4                     l363:
  6607                           
  6608                           ;interface_main.c: 637: else if (temp == '*'){
  6609                           
  6610                           ; BSR set to: 1
  6611  00E3A4  0E2A               	movlw	42
  6612  00E3A6  0102               	movlb	2	; () banked
  6613  00E3A8  19FB               	xorwf	main@temp& (0+255),w,b
  6614  00E3AA  A4D8               	btfss	status,2,c
  6615  00E3AC  D7AB               	goto	l350
  6616                           
  6617                           ; BSR set to: 2
  6618                           ;interface_main.c: 638: letter = '*';
  6619  00E3AE  0E2A               	movlw	42
  6620  00E3B0                     L4:
  6621  00E3B0  0101               	movlb	1	; () banked
  6622  00E3B2  6FFB               	movwf	main@letter& (0+255),b
  6623                           
  6624                           ; BSR set to: 1
  6625                           ;interface_main.c: 640: }
  6626                           ;interface_main.c: 643: if (letter != '*'){
  6627                           
  6628                           ; BSR set to: 1
  6629                           
  6630                           ; BSR set to: 1
  6631                           
  6632                           ; BSR set to: 1
  6633                           
  6634                           ; BSR set to: 1
  6635                           
  6636                           ; BSR set to: 1
  6637                           
  6638                           ; BSR set to: 1
  6639                           
  6640                           ;interface_main.c: 639: break;}
  6641  00E3B4  0E2A               	movlw	42
  6642  00E3B6  19FB               	xorwf	main@letter& (0+255),w,b
  6643  00E3B8  B4D8               	btfsc	status,2,c
  6644  00E3BA  D033               	goto	l367
  6645                           
  6646                           ; BSR set to: 1
  6647                           ;interface_main.c: 644: putch(letter);
  6648  00E3BC  51FB               	movf	main@letter& (0+255),w,b
  6649  00E3BE  EC48  F051         	call	_putch
  6650                           
  6651                           ;interface_main.c: 645: diet[row + i][j] = (temp - '0');}
  6652  00E3C2  0ED0               	movlw	208
  6653  00E3C4  6E57               	movwf	??_main& (0+255),c
  6654  00E3C6  0EFF               	movlw	255
  6655  00E3C8  6E58               	movwf	(??_main+1)& (0+255),c
  6656  00E3CA  0102               	movlb	2	; () banked
  6657  00E3CC  51FB               	movf	main@temp& (0+255),w,b
  6658  00E3CE  6E59               	movwf	(??_main+2)& (0+255),c
  6659  00E3D0  6A5A               	clrf	(??_main+3)& (0+255),c
  6660  00E3D2  5057               	movf	??_main,w,c
  6661  00E3D4  2659               	addwf	??_main+2,f,c
  6662  00E3D6  5058               	movf	??_main+1,w,c
  6663  00E3D8  225A               	addwfc	??_main+3,f,c
  6664  00E3DA  51FC               	movf	main@i& (0+255),w,b
  6665  00E3DC  25F5               	addwf	main@row& (0+255),w,b
  6666  00E3DE  6E5B               	movwf	(??_main+4)& (0+255),c
  6667  00E3E0  51FD               	movf	(main@i+1)& (0+255),w,b
  6668  00E3E2  21F6               	addwfc	(main@row+1)& (0+255),w,b
  6669  00E3E4  6E5C               	movwf	(??_main+5)& (0+255),c
  6670  00E3E6  90D8               	bcf	status,0,c
  6671  00E3E8  365B               	rlcf	??_main+4,f,c
  6672  00E3EA  365C               	rlcf	??_main+5,f,c
  6673  00E3EC  90D8               	bcf	status,0,c
  6674  00E3EE  365B               	rlcf	??_main+4,f,c
  6675  00E3F0  365C               	rlcf	??_main+5,f,c
  6676  00E3F2  90D8               	bcf	status,0,c
  6677  00E3F4  365B               	rlcf	??_main+4,f,c
  6678  00E3F6  365C               	rlcf	??_main+5,f,c
  6679  00E3F8  0E00               	movlw	low main@diet
  6680  00E3FA  6E5D               	movwf	(??_main+6)& (0+255),c
  6681  00E3FC  0E01               	movlw	high main@diet
  6682  00E3FE  6E5E               	movwf	(??_main+7)& (0+255),c
  6683  00E400  505B               	movf	??_main+4,w,c
  6684  00E402  265D               	addwf	??_main+6,f,c
  6685  00E404  505C               	movf	??_main+5,w,c
  6686  00E406  225E               	addwfc	??_main+7,f,c
  6687  00E408  90D8               	bcf	status,0,c
  6688  00E40A  35F9               	rlcf	main@j& (0+255),w,b
  6689  00E40C  6ED9               	movwf	fsr2l,c
  6690  00E40E  35FA               	rlcf	(main@j+1)& (0+255),w,b
  6691  00E410  6EDA               	movwf	fsr2h,c
  6692  00E412  505D               	movf	??_main+6,w,c
  6693  00E414  26D9               	addwf	fsr2l,f,c
  6694  00E416  505E               	movf	??_main+7,w,c
  6695  00E418  22DA               	addwfc	fsr2h,f,c
  6696  00E41A  C059  FFDE         	movff	??_main+2,postinc2
  6697  00E41E  C05A  FFDD         	movff	??_main+3,postdec2
  6698  00E422                     l367:
  6699                           
  6700                           ;interface_main.c: 648: if (letter == '*'){
  6701                           
  6702                           ; BSR set to: 2
  6703  00E422  0E2A               	movlw	42
  6704  00E424  0101               	movlb	1	; () banked
  6705  00E426  19FB               	xorwf	main@letter& (0+255),w,b
  6706  00E428  B4D8               	btfsc	status,2,c
  6707  00E42A  D032               	goto	l369
  6708  00E42C  D049               	goto	l368
  6709  00E42E                     
  6710                           ;interface_main.c: 650: diet[row + i][k + j] = 0;
  6711                           
  6712                           ; BSR set to: 1
  6713  00E42E  0102               	movlb	2	; () banked
  6714  00E430  51F9               	movf	main@j& (0+255),w,b
  6715  00E432  25EF               	addwf	main@k& (0+255),w,b
  6716  00E434  6E57               	movwf	??_main& (0+255),c
  6717  00E436  51FA               	movf	(main@j+1)& (0+255),w,b
  6718  00E438  21F0               	addwfc	(main@k+1)& (0+255),w,b
  6719  00E43A  6E58               	movwf	(??_main+1)& (0+255),c
  6720  00E43C  90D8               	bcf	status,0,c
  6721  00E43E  3657               	rlcf	??_main,f,c
  6722  00E440  3658               	rlcf	??_main+1,f,c
  6723  00E442  51FC               	movf	main@i& (0+255),w,b
  6724  00E444  25F5               	addwf	main@row& (0+255),w,b
  6725  00E446  6E59               	movwf	(??_main+2)& (0+255),c
  6726  00E448  51FD               	movf	(main@i+1)& (0+255),w,b
  6727  00E44A  21F6               	addwfc	(main@row+1)& (0+255),w,b
  6728  00E44C  6E5A               	movwf	(??_main+3)& (0+255),c
  6729  00E44E  90D8               	bcf	status,0,c
  6730  00E450  3659               	rlcf	??_main+2,f,c
  6731  00E452  365A               	rlcf	??_main+3,f,c
  6732  00E454  90D8               	bcf	status,0,c
  6733  00E456  3659               	rlcf	??_main+2,f,c
  6734  00E458  365A               	rlcf	??_main+3,f,c
  6735  00E45A  90D8               	bcf	status,0,c
  6736  00E45C  3659               	rlcf	??_main+2,f,c
  6737  00E45E  365A               	rlcf	??_main+3,f,c
  6738  00E460  0E00               	movlw	low main@diet
  6739  00E462  6E5B               	movwf	(??_main+4)& (0+255),c
  6740  00E464  0E01               	movlw	high main@diet
  6741  00E466  6E5C               	movwf	(??_main+5)& (0+255),c
  6742  00E468  5059               	movf	??_main+2,w,c
  6743  00E46A  265B               	addwf	??_main+4,f,c
  6744  00E46C  505A               	movf	??_main+3,w,c
  6745  00E46E  225C               	addwfc	??_main+5,f,c
  6746  00E470  5057               	movf	??_main,w,c
  6747  00E472  245B               	addwf	??_main+4,w,c
  6748  00E474  6ED9               	movwf	fsr2l,c
  6749  00E476  5058               	movf	??_main+1,w,c
  6750  00E478  205C               	addwfc	??_main+5,w,c
  6751  00E47A  6EDA               	movwf	fsr2h,c
  6752  00E47C  0E00               	movlw	0
  6753  00E47E  6EDE               	movwf	postinc2,c
  6754  00E480  0E00               	movlw	0
  6755  00E482  6EDD               	movwf	postdec2,c
  6756                           
  6757                           ; BSR set to: 2
  6758                           ;interface_main.c: 651: putch(' ');
  6759  00E484  0E20               	movlw	32
  6760  00E486  EC48  F051         	call	_putch
  6761                           
  6762                           ;interface_main.c: 652: k++;}
  6763  00E48A  0102               	movlb	2	; () banked
  6764  00E48C  4BEF               	infsnz	main@k& (0+255),f,b
  6765  00E48E  2BF0               	incf	(main@k+1)& (0+255),f,b
  6766  00E490                     l369:
  6767                           
  6768                           ; BSR set to: 2
  6769  00E490  C2F9  F057         	movff	main@j,??_main
  6770  00E494  C2FA  F058         	movff	main@j+1,??_main+1
  6771  00E498  1E57               	comf	??_main,f,c
  6772  00E49A  1E58               	comf	??_main+1,f,c
  6773  00E49C  4A57               	infsnz	??_main,f,c
  6774  00E49E  2A58               	incf	??_main+1,f,c
  6775  00E4A0  0E04               	movlw	4
  6776  00E4A2  2657               	addwf	??_main,f,c
  6777  00E4A4  0E00               	movlw	0
  6778  00E4A6  2258               	addwfc	??_main+1,f,c
  6779  00E4A8  5057               	movf	??_main,w,c
  6780  00E4AA  0102               	movlb	2	; () banked
  6781  00E4AC  5DEF               	subwf	main@k& (0+255),w,b
  6782  00E4AE  51F0               	movf	(main@k+1)& (0+255),w,b
  6783  00E4B0  0A80               	xorlw	128
  6784  00E4B2  6E59               	movwf	(??_main+2)& (0+255),c
  6785  00E4B4  5058               	movf	??_main+1,w,c
  6786  00E4B6  0A80               	xorlw	128
  6787  00E4B8  5859               	subwfb	(??_main+2)& (0+255),w,c
  6788  00E4BA  B0D8               	btfsc	status,0,c
  6789  00E4BC  D00D               	goto	u7770
  6790  00E4BE  D7B7               	goto	l370
  6791  00E4C0                     l368:
  6792                           
  6793                           ;interface_main.c: 654: j++;
  6794                           
  6795                           ; BSR set to: 2
  6796  00E4C0  0102               	movlb	2	; () banked
  6797  00E4C2  4BF9               	infsnz	main@j& (0+255),f,b
  6798  00E4C4  2BFA               	incf	(main@j+1)& (0+255),f,b
  6799  00E4C6                     l349:
  6800                           
  6801                           ; BSR set to: 2
  6802  00E4C6  0102               	movlb	2	; () banked
  6803  00E4C8  BFFA               	btfsc	(main@j+1)& (0+255),7,b
  6804  00E4CA  D71C               	goto	l350
  6805  00E4CC  51FA               	movf	(main@j+1)& (0+255),w,b
  6806  00E4CE  E104               	bnz	l7904
  6807  00E4D0  0E04               	movlw	4
  6808  00E4D2  5DF9               	subwf	main@j& (0+255),w,b
  6809  00E4D4  A0D8               	btfss	status,0,c
  6810  00E4D6  D716               	goto	l350
  6811  00E4D8                     u7770:
  6812  00E4D8                     l7904:
  6813                           
  6814                           ; BSR set to: 2
  6815                           ;interface_main.c: 655: }
  6816                           ;interface_main.c: 657: lcdInst(8 | (1 << 2) | (0 << 1)| 0);;
  6817  00E4D8  0E0C               	movlw	12
  6818  00E4DA  EC3E  F051         	call	_lcdInst
  6819                           
  6820                           ;interface_main.c: 660: for (k = 0; k < 4; k++){
  6821  00E4DE  0E00               	movlw	0
  6822  00E4E0  0102               	movlb	2	; () banked
  6823  00E4E2  6FF0               	movwf	(main@k+1)& (0+255),b
  6824  00E4E4  0E00               	movlw	0
  6825  00E4E6  6FEF               	movwf	main@k& (0+255),b
  6826  00E4E8                     l7908:
  6827                           
  6828                           ; BSR set to: 2
  6829  00E4E8  BFF0               	btfsc	(main@k+1)& (0+255),7,b
  6830  00E4EA  D006               	goto	l373
  6831  00E4EC  51F0               	movf	(main@k+1)& (0+255),w,b
  6832  00E4EE  E134               	bnz	l7918
  6833  00E4F0  0E04               	movlw	4
  6834  00E4F2  5DEF               	subwf	main@k& (0+255),w,b
  6835  00E4F4  B0D8               	btfsc	status,0,c
  6836  00E4F6  D030               	goto	u7790
  6837  00E4F8                     l373:
  6838                           
  6839                           ; BSR set to: 2
  6840                           ;interface_main.c: 661: row_check[k] = diet[i + row][k];
  6841                           
  6842                           ; BSR set to: 2
  6843  00E4F8  51F5               	movf	main@row& (0+255),w,b
  6844  00E4FA  25FC               	addwf	main@i& (0+255),w,b
  6845  00E4FC  6E57               	movwf	??_main& (0+255),c
  6846  00E4FE  51F6               	movf	(main@row+1)& (0+255),w,b
  6847  00E500  21FD               	addwfc	(main@i+1)& (0+255),w,b
  6848  00E502  6E58               	movwf	(??_main+1)& (0+255),c
  6849  00E504  90D8               	bcf	status,0,c
  6850  00E506  3657               	rlcf	??_main,f,c
  6851  00E508  3658               	rlcf	??_main+1,f,c
  6852  00E50A  90D8               	bcf	status,0,c
  6853  00E50C  3657               	rlcf	??_main,f,c
  6854  00E50E  3658               	rlcf	??_main+1,f,c
  6855  00E510  90D8               	bcf	status,0,c
  6856  00E512  3657               	rlcf	??_main,f,c
  6857  00E514  3658               	rlcf	??_main+1,f,c
  6858  00E516  0E00               	movlw	low main@diet
  6859  00E518  6E59               	movwf	(??_main+2)& (0+255),c
  6860  00E51A  0E01               	movlw	high main@diet
  6861  00E51C  6E5A               	movwf	(??_main+3)& (0+255),c
  6862  00E51E  5057               	movf	??_main,w,c
  6863  00E520  2659               	addwf	??_main+2,f,c
  6864  00E522  5058               	movf	??_main+1,w,c
  6865  00E524  225A               	addwfc	??_main+3,f,c
  6866  00E526  90D8               	bcf	status,0,c
  6867  00E528  35EF               	rlcf	main@k& (0+255),w,b
  6868  00E52A  6ED9               	movwf	fsr2l,c
  6869  00E52C  35F0               	rlcf	(main@k+1)& (0+255),w,b
  6870  00E52E  6EDA               	movwf	fsr2h,c
  6871  00E530  5059               	movf	??_main+2,w,c
  6872  00E532  26D9               	addwf	fsr2l,f,c
  6873  00E534  505A               	movf	??_main+3,w,c
  6874  00E536  22DA               	addwfc	fsr2h,f,c
  6875  00E538  90D8               	bcf	status,0,c
  6876  00E53A  35EF               	rlcf	main@k& (0+255),w,b
  6877  00E53C  6EE1               	movwf	fsr1l,c
  6878  00E53E  35F0               	rlcf	(main@k+1)& (0+255),w,b
  6879  00E540  6EE2               	movwf	fsr1h,c
  6880  00E542  0EE7               	movlw	low main@row_check
  6881  00E544  26E1               	addwf	fsr1l,f,c
  6882  00E546  0E02               	movlw	high main@row_check
  6883  00E548  22E2               	addwfc	fsr1h,f,c
  6884  00E54A  CFDE FFE6          	movff	postinc2,postinc1
  6885  00E54E  CFDD FFE5          	movff	postdec2,postdec1
  6886                           
  6887                           ; BSR set to: 2
  6888  00E552  4BEF               	infsnz	main@k& (0+255),f,b
  6889  00E554  2BF0               	incf	(main@k+1)& (0+255),f,b
  6890  00E556  D7C8               	goto	l7908
  6891  00E558                     u7790:
  6892  00E558                     l7918:
  6893                           
  6894                           ; BSR set to: 2
  6895                           ;interface_main.c: 662: }
  6896                           ;interface_main.c: 666: legit_diet += compare_arrays(row_check, a);
  6897  00E558  0EE7               	movlw	low main@row_check
  6898  00E55A  6E01               	movwf	compare_arrays@array1,c
  6899  00E55C  0E02               	movlw	high main@row_check
  6900  00E55E  6E02               	movwf	compare_arrays@array1+1,c
  6901  00E560  0E5F               	movlw	low main@a
  6902  00E562  6E03               	movwf	compare_arrays@array2,c
  6903  00E564  0E00               	movlw	high main@a
  6904  00E566  6E04               	movwf	compare_arrays@array2+1,c
  6905  00E568  EC04  F053         	call	_compare_arrays	;wreg free
  6906  00E56C  5001               	movf	?_compare_arrays,w,c
  6907  00E56E  0101               	movlb	1	; () banked
  6908  00E570  27FE               	addwf	main@legit_diet& (0+255),f,b
  6909  00E572  5002               	movf	?_compare_arrays+1,w,c
  6910  00E574  23FF               	addwfc	(main@legit_diet+1)& (0+255),f,b
  6911                           
  6912                           ;interface_main.c: 667: legit_diet += compare_arrays(row_check, b);
  6913  00E576  0EE7               	movlw	low main@row_check
  6914  00E578  6E01               	movwf	compare_arrays@array1,c
  6915  00E57A  0E02               	movlw	high main@row_check
  6916  00E57C  6E02               	movwf	compare_arrays@array1+1,c
  6917  00E57E  0E67               	movlw	low main@b
  6918  00E580  6E03               	movwf	compare_arrays@array2,c
  6919  00E582  0E00               	movlw	high main@b
  6920  00E584  6E04               	movwf	compare_arrays@array2+1,c
  6921  00E586  EC04  F053         	call	_compare_arrays	;wreg free
  6922  00E58A  5001               	movf	?_compare_arrays,w,c
  6923  00E58C  0101               	movlb	1	; () banked
  6924  00E58E  27FE               	addwf	main@legit_diet& (0+255),f,b
  6925  00E590  5002               	movf	?_compare_arrays+1,w,c
  6926  00E592  23FF               	addwfc	(main@legit_diet+1)& (0+255),f,b
  6927                           
  6928                           ;interface_main.c: 668: legit_diet += compare_arrays(row_check, c);
  6929  00E594  0EE7               	movlw	low main@row_check
  6930  00E596  6E01               	movwf	compare_arrays@array1,c
  6931  00E598  0E02               	movlw	high main@row_check
  6932  00E59A  6E02               	movwf	compare_arrays@array1+1,c
  6933  00E59C  0E6F               	movlw	low main@c
  6934  00E59E  6E03               	movwf	compare_arrays@array2,c
  6935  00E5A0  0E00               	movlw	high main@c
  6936  00E5A2  6E04               	movwf	compare_arrays@array2+1,c
  6937  00E5A4  EC04  F053         	call	_compare_arrays	;wreg free
  6938  00E5A8  5001               	movf	?_compare_arrays,w,c
  6939  00E5AA  0101               	movlb	1	; () banked
  6940  00E5AC  27FE               	addwf	main@legit_diet& (0+255),f,b
  6941  00E5AE  5002               	movf	?_compare_arrays+1,w,c
  6942  00E5B0  23FF               	addwfc	(main@legit_diet+1)& (0+255),f,b
  6943                           
  6944                           ;interface_main.c: 669: legit_diet += compare_arrays(row_check, d);
  6945  00E5B2  0EE7               	movlw	low main@row_check
  6946  00E5B4  6E01               	movwf	compare_arrays@array1,c
  6947  00E5B6  0E02               	movlw	high main@row_check
  6948  00E5B8  6E02               	movwf	compare_arrays@array1+1,c
  6949  00E5BA  0E77               	movlw	low main@d
  6950  00E5BC  6E03               	movwf	compare_arrays@array2,c
  6951  00E5BE  0E00               	movlw	high main@d
  6952  00E5C0  6E04               	movwf	compare_arrays@array2+1,c
  6953  00E5C2  EC04  F053         	call	_compare_arrays	;wreg free
  6954  00E5C6  5001               	movf	?_compare_arrays,w,c
  6955  00E5C8  0101               	movlb	1	; () banked
  6956  00E5CA  27FE               	addwf	main@legit_diet& (0+255),f,b
  6957  00E5CC  5002               	movf	?_compare_arrays+1,w,c
  6958  00E5CE  23FF               	addwfc	(main@legit_diet+1)& (0+255),f,b
  6959                           
  6960                           ;interface_main.c: 670: legit_diet += compare_arrays(row_check, e);
  6961  00E5D0  0EE7               	movlw	low main@row_check
  6962  00E5D2  6E01               	movwf	compare_arrays@array1,c
  6963  00E5D4  0E02               	movlw	high main@row_check
  6964  00E5D6  6E02               	movwf	compare_arrays@array1+1,c
  6965  00E5D8  0EE0               	movlw	low main@e
  6966  00E5DA  6E03               	movwf	compare_arrays@array2,c
  6967  00E5DC  0E00               	movlw	high main@e
  6968  00E5DE  6E04               	movwf	compare_arrays@array2+1,c
  6969  00E5E0  EC04  F053         	call	_compare_arrays	;wreg free
  6970  00E5E4  5001               	movf	?_compare_arrays,w,c
  6971  00E5E6  0101               	movlb	1	; () banked
  6972  00E5E8  27FE               	addwf	main@legit_diet& (0+255),f,b
  6973  00E5EA  5002               	movf	?_compare_arrays+1,w,c
  6974  00E5EC  23FF               	addwfc	(main@legit_diet+1)& (0+255),f,b
  6975                           
  6976                           ;interface_main.c: 671: legit_diet += compare_arrays(row_check, f);
  6977  00E5EE  0EE7               	movlw	low main@row_check
  6978  00E5F0  6E01               	movwf	compare_arrays@array1,c
  6979  00E5F2  0E02               	movlw	high main@row_check
  6980  00E5F4  6E02               	movwf	compare_arrays@array1+1,c
  6981  00E5F6  0EE8               	movlw	low main@f
  6982  00E5F8  6E03               	movwf	compare_arrays@array2,c
  6983  00E5FA  0E00               	movlw	high main@f
  6984  00E5FC  6E04               	movwf	compare_arrays@array2+1,c
  6985  00E5FE  EC04  F053         	call	_compare_arrays	;wreg free
  6986  00E602  5001               	movf	?_compare_arrays,w,c
  6987  00E604  0101               	movlb	1	; () banked
  6988  00E606  27FE               	addwf	main@legit_diet& (0+255),f,b
  6989  00E608  5002               	movf	?_compare_arrays+1,w,c
  6990  00E60A  23FF               	addwfc	(main@legit_diet+1)& (0+255),f,b
  6991                           
  6992                           ;interface_main.c: 672: legit_diet += compare_arrays(row_check, g);
  6993  00E60C  0EE7               	movlw	low main@row_check
  6994  00E60E  6E01               	movwf	compare_arrays@array1,c
  6995  00E610  0E02               	movlw	high main@row_check
  6996  00E612  6E02               	movwf	compare_arrays@array1+1,c
  6997  00E614  0EF0               	movlw	low main@g
  6998  00E616  6E03               	movwf	compare_arrays@array2,c
  6999  00E618  0E00               	movlw	high main@g
  7000  00E61A  6E04               	movwf	compare_arrays@array2+1,c
  7001  00E61C  EC04  F053         	call	_compare_arrays	;wreg free
  7002  00E620  5001               	movf	?_compare_arrays,w,c
  7003  00E622  0101               	movlb	1	; () banked
  7004  00E624  27FE               	addwf	main@legit_diet& (0+255),f,b
  7005  00E626  5002               	movf	?_compare_arrays+1,w,c
  7006  00E628  23FF               	addwfc	(main@legit_diet+1)& (0+255),f,b
  7007                           
  7008                           ;interface_main.c: 673: legit_diet += compare_arrays(row_check, h);
  7009  00E62A  0EE7               	movlw	low main@row_check
  7010  00E62C  6E01               	movwf	compare_arrays@array1,c
  7011  00E62E  0E02               	movlw	high main@row_check
  7012  00E630  6E02               	movwf	compare_arrays@array1+1,c
  7013  00E632  0EF8               	movlw	low main@h
  7014  00E634  6E03               	movwf	compare_arrays@array2,c
  7015  00E636  0E00               	movlw	high main@h
  7016  00E638  6E04               	movwf	compare_arrays@array2+1,c
  7017  00E63A  EC04  F053         	call	_compare_arrays	;wreg free
  7018  00E63E  5001               	movf	?_compare_arrays,w,c
  7019  00E640  0101               	movlb	1	; () banked
  7020  00E642  27FE               	addwf	main@legit_diet& (0+255),f,b
  7021  00E644  5002               	movf	?_compare_arrays+1,w,c
  7022  00E646  23FF               	addwfc	(main@legit_diet+1)& (0+255),f,b
  7023                           
  7024                           ;interface_main.c: 674: legit_diet += compare_arrays(row_check, x);
  7025  00E648  0EE7               	movlw	low main@row_check
  7026  00E64A  6E01               	movwf	compare_arrays@array1,c
  7027  00E64C  0E02               	movlw	high main@row_check
  7028  00E64E  6E02               	movwf	compare_arrays@array1+1,c
  7029  00E650  0E80               	movlw	low main@x
  7030  00E652  6E03               	movwf	compare_arrays@array2,c
  7031  00E654  0E01               	movlw	high main@x
  7032  00E656  6E04               	movwf	compare_arrays@array2+1,c
  7033  00E658  EC04  F053         	call	_compare_arrays	;wreg free
  7034  00E65C  5001               	movf	?_compare_arrays,w,c
  7035  00E65E  0101               	movlb	1	; () banked
  7036  00E660  27FE               	addwf	main@legit_diet& (0+255),f,b
  7037  00E662  5002               	movf	?_compare_arrays+1,w,c
  7038  00E664  23FF               	addwfc	(main@legit_diet+1)& (0+255),f,b
  7039                           
  7040                           ;interface_main.c: 675: legit_diet += compare_arrays(row_check, y);
  7041  00E666  0EE7               	movlw	low main@row_check
  7042  00E668  6E01               	movwf	compare_arrays@array1,c
  7043  00E66A  0E02               	movlw	high main@row_check
  7044  00E66C  6E02               	movwf	compare_arrays@array1+1,c
  7045  00E66E  0E88               	movlw	low main@y
  7046  00E670  6E03               	movwf	compare_arrays@array2,c
  7047  00E672  0E01               	movlw	high main@y
  7048  00E674  6E04               	movwf	compare_arrays@array2+1,c
  7049  00E676  EC04  F053         	call	_compare_arrays	;wreg free
  7050  00E67A  5001               	movf	?_compare_arrays,w,c
  7051  00E67C  0101               	movlb	1	; () banked
  7052  00E67E  27FE               	addwf	main@legit_diet& (0+255),f,b
  7053  00E680  5002               	movf	?_compare_arrays+1,w,c
  7054  00E682  23FF               	addwfc	(main@legit_diet+1)& (0+255),f,b
  7055                           
  7056                           ;interface_main.c: 676: legit_diet += compare_arrays(row_check, z);
  7057  00E684  0EE7               	movlw	low main@row_check
  7058  00E686  6E01               	movwf	compare_arrays@array1,c
  7059  00E688  0E02               	movlw	high main@row_check
  7060  00E68A  6E02               	movwf	compare_arrays@array1+1,c
  7061  00E68C  0E90               	movlw	low main@z
  7062  00E68E  6E03               	movwf	compare_arrays@array2,c
  7063  00E690  0E01               	movlw	high main@z
  7064  00E692  6E04               	movwf	compare_arrays@array2+1,c
  7065  00E694  EC04  F053         	call	_compare_arrays	;wreg free
  7066  00E698  5001               	movf	?_compare_arrays,w,c
  7067  00E69A  0101               	movlb	1	; () banked
  7068  00E69C  27FE               	addwf	main@legit_diet& (0+255),f,b
  7069  00E69E  5002               	movf	?_compare_arrays+1,w,c
  7070  00E6A0  23FF               	addwfc	(main@legit_diet+1)& (0+255),f,b
  7071                           
  7072                           ;interface_main.c: 677: legit_diet += compare_arrays(row_check, l);
  7073  00E6A2  0EE7               	movlw	low main@row_check
  7074  00E6A4  6E01               	movwf	compare_arrays@array1,c
  7075  00E6A6  0E02               	movlw	high main@row_check
  7076  00E6A8  6E02               	movwf	compare_arrays@array1+1,c
  7077  00E6AA  0E98               	movlw	low main@l
  7078  00E6AC  6E03               	movwf	compare_arrays@array2,c
  7079  00E6AE  0E01               	movlw	high main@l
  7080  00E6B0  6E04               	movwf	compare_arrays@array2+1,c
  7081  00E6B2  EC04  F053         	call	_compare_arrays	;wreg free
  7082  00E6B6  5001               	movf	?_compare_arrays,w,c
  7083  00E6B8  0101               	movlb	1	; () banked
  7084  00E6BA  27FE               	addwf	main@legit_diet& (0+255),f,b
  7085  00E6BC  5002               	movf	?_compare_arrays+1,w,c
  7086  00E6BE  23FF               	addwfc	(main@legit_diet+1)& (0+255),f,b
  7087                           
  7088                           ;interface_main.c: 678: legit_diet += compare_arrays(row_check, m);
  7089  00E6C0  0EE7               	movlw	low main@row_check
  7090  00E6C2  6E01               	movwf	compare_arrays@array1,c
  7091  00E6C4  0E02               	movlw	high main@row_check
  7092  00E6C6  6E02               	movwf	compare_arrays@array1+1,c
  7093  00E6C8  0EA0               	movlw	low main@m
  7094  00E6CA  6E03               	movwf	compare_arrays@array2,c
  7095  00E6CC  0E01               	movlw	high main@m
  7096  00E6CE  6E04               	movwf	compare_arrays@array2+1,c
  7097  00E6D0  EC04  F053         	call	_compare_arrays	;wreg free
  7098  00E6D4  5001               	movf	?_compare_arrays,w,c
  7099  00E6D6  0101               	movlb	1	; () banked
  7100  00E6D8  27FE               	addwf	main@legit_diet& (0+255),f,b
  7101  00E6DA  5002               	movf	?_compare_arrays+1,w,c
  7102  00E6DC  23FF               	addwfc	(main@legit_diet+1)& (0+255),f,b
  7103                           
  7104                           ;interface_main.c: 679: legit_diet += compare_arrays(row_check, n);
  7105  00E6DE  0EE7               	movlw	low main@row_check
  7106  00E6E0  6E01               	movwf	compare_arrays@array1,c
  7107  00E6E2  0E02               	movlw	high main@row_check
  7108  00E6E4  6E02               	movwf	compare_arrays@array1+1,c
  7109  00E6E6  0EA8               	movlw	low main@n
  7110  00E6E8  6E03               	movwf	compare_arrays@array2,c
  7111  00E6EA  0E01               	movlw	high main@n
  7112  00E6EC  6E04               	movwf	compare_arrays@array2+1,c
  7113  00E6EE  EC04  F053         	call	_compare_arrays	;wreg free
  7114  00E6F2  5001               	movf	?_compare_arrays,w,c
  7115  00E6F4  0101               	movlb	1	; () banked
  7116  00E6F6  27FE               	addwf	main@legit_diet& (0+255),f,b
  7117  00E6F8  5002               	movf	?_compare_arrays+1,w,c
  7118  00E6FA  23FF               	addwfc	(main@legit_diet+1)& (0+255),f,b
  7119                           
  7120                           ;interface_main.c: 680: legit_diet += compare_arrays(row_check, o);
  7121  00E6FC  0EE7               	movlw	low main@row_check
  7122  00E6FE  6E01               	movwf	compare_arrays@array1,c
  7123  00E700  0E02               	movlw	high main@row_check
  7124  00E702  6E02               	movwf	compare_arrays@array1+1,c
  7125  00E704  0EB0               	movlw	low main@o
  7126  00E706  6E03               	movwf	compare_arrays@array2,c
  7127  00E708  0E01               	movlw	high main@o
  7128  00E70A  6E04               	movwf	compare_arrays@array2+1,c
  7129  00E70C  EC04  F053         	call	_compare_arrays	;wreg free
  7130  00E710  5001               	movf	?_compare_arrays,w,c
  7131  00E712  0101               	movlb	1	; () banked
  7132  00E714  27FE               	addwf	main@legit_diet& (0+255),f,b
  7133  00E716  5002               	movf	?_compare_arrays+1,w,c
  7134  00E718  23FF               	addwfc	(main@legit_diet+1)& (0+255),f,b
  7135                           
  7136                           ;interface_main.c: 681: legit_diet += compare_arrays(row_check, p);
  7137  00E71A  0EE7               	movlw	low main@row_check
  7138  00E71C  6E01               	movwf	compare_arrays@array1,c
  7139  00E71E  0E02               	movlw	high main@row_check
  7140  00E720  6E02               	movwf	compare_arrays@array1+1,c
  7141  00E722  0EB8               	movlw	low main@p
  7142  00E724  6E03               	movwf	compare_arrays@array2,c
  7143  00E726  0E01               	movlw	high main@p
  7144  00E728  6E04               	movwf	compare_arrays@array2+1,c
  7145  00E72A  EC04  F053         	call	_compare_arrays	;wreg free
  7146  00E72E  5001               	movf	?_compare_arrays,w,c
  7147  00E730  0101               	movlb	1	; () banked
  7148  00E732  27FE               	addwf	main@legit_diet& (0+255),f,b
  7149  00E734  5002               	movf	?_compare_arrays+1,w,c
  7150  00E736  23FF               	addwfc	(main@legit_diet+1)& (0+255),f,b
  7151                           
  7152                           ;interface_main.c: 682: legit_diet += compare_arrays(row_check, q);
  7153  00E738  0EE7               	movlw	low main@row_check
  7154  00E73A  6E01               	movwf	compare_arrays@array1,c
  7155  00E73C  0E02               	movlw	high main@row_check
  7156  00E73E  6E02               	movwf	compare_arrays@array1+1,c
  7157  00E740  0EC0               	movlw	low main@q
  7158  00E742  6E03               	movwf	compare_arrays@array2,c
  7159  00E744  0E01               	movlw	high main@q
  7160  00E746  6E04               	movwf	compare_arrays@array2+1,c
  7161  00E748  EC04  F053         	call	_compare_arrays	;wreg free
  7162  00E74C  5001               	movf	?_compare_arrays,w,c
  7163  00E74E  0101               	movlb	1	; () banked
  7164  00E750  27FE               	addwf	main@legit_diet& (0+255),f,b
  7165  00E752  5002               	movf	?_compare_arrays+1,w,c
  7166  00E754  23FF               	addwfc	(main@legit_diet+1)& (0+255),f,b
  7167                           
  7168                           ;interface_main.c: 683: legit_diet += compare_arrays(row_check, r);
  7169  00E756  0EE7               	movlw	low main@row_check
  7170  00E758  6E01               	movwf	compare_arrays@array1,c
  7171  00E75A  0E02               	movlw	high main@row_check
  7172  00E75C  6E02               	movwf	compare_arrays@array1+1,c
  7173  00E75E  0EC8               	movlw	low main@r
  7174  00E760  6E03               	movwf	compare_arrays@array2,c
  7175  00E762  0E01               	movlw	high main@r
  7176  00E764  6E04               	movwf	compare_arrays@array2+1,c
  7177  00E766  EC04  F053         	call	_compare_arrays	;wreg free
  7178  00E76A  5001               	movf	?_compare_arrays,w,c
  7179  00E76C  0101               	movlb	1	; () banked
  7180  00E76E  27FE               	addwf	main@legit_diet& (0+255),f,b
  7181  00E770  5002               	movf	?_compare_arrays+1,w,c
  7182  00E772  23FF               	addwfc	(main@legit_diet+1)& (0+255),f,b
  7183                           
  7184                           ;interface_main.c: 684: legit_diet += compare_arrays(row_check, s);
  7185  00E774  0EE7               	movlw	low main@row_check
  7186  00E776  6E01               	movwf	compare_arrays@array1,c
  7187  00E778  0E02               	movlw	high main@row_check
  7188  00E77A  6E02               	movwf	compare_arrays@array1+1,c
  7189  00E77C  0ED0               	movlw	low main@s
  7190  00E77E  6E03               	movwf	compare_arrays@array2,c
  7191  00E780  0E01               	movlw	high main@s
  7192  00E782  6E04               	movwf	compare_arrays@array2+1,c
  7193  00E784  EC04  F053         	call	_compare_arrays	;wreg free
  7194  00E788  5001               	movf	?_compare_arrays,w,c
  7195  00E78A  0101               	movlb	1	; () banked
  7196  00E78C  27FE               	addwf	main@legit_diet& (0+255),f,b
  7197  00E78E  5002               	movf	?_compare_arrays+1,w,c
  7198  00E790  23FF               	addwfc	(main@legit_diet+1)& (0+255),f,b
  7199                           
  7200                           ; BSR set to: 1
  7201                           ;interface_main.c: 687: if (legit_diet == 0){
  7202  00E792  51FE               	movf	main@legit_diet& (0+255),w,b
  7203  00E794  11FF               	iorwf	(main@legit_diet+1)& (0+255),w,b
  7204  00E796  A4D8               	btfss	status,2,c
  7205  00E798  D027               	goto	l375
  7206                           
  7207                           ; BSR set to: 1
  7208                           ;interface_main.c: 688: lcdInst(0x80);_delay((unsigned long)((5)*(40000000/4000.0)));;
  7209  00E79A  0E80               	movlw	128
  7210  00E79C  EC3E  F051         	call	_lcdInst
  7211  00E7A0  0E41               	movlw	65
  7212  00E7A2  6E57               	movwf	??_main& (0+255),c
  7213  00E7A4  0EEE               	movlw	238
  7214  00E7A6                     u9517:
  7215  00E7A6  2EE8               	decfsz	wreg,f,c
  7216  00E7A8  D7FE               	bra	u9517
  7217  00E7AA  2E57               	decfsz	??_main& (0+255),f,c
  7218  00E7AC  D7FC               	bra	u9517
  7219  00E7AE  D000               	nop2	
  7220                           
  7221                           ;interface_main.c: 689: lcdInst(0x01);_delay((unsigned long)((15)*(40000000/4000.0)));;
  7222  00E7B0  0E01               	movlw	1
  7223  00E7B2  EC3E  F051         	call	_lcdInst
  7224  00E7B6  0EC3               	movlw	195
  7225  00E7B8  6E57               	movwf	??_main& (0+255),c
  7226  00E7BA  0ECD               	movlw	205
  7227  00E7BC                     u9527:
  7228  00E7BC  2EE8               	decfsz	wreg,f,c
  7229  00E7BE  D7FE               	bra	u9527
  7230  00E7C0  2E57               	decfsz	??_main& (0+255),f,c
  7231  00E7C2  D7FC               	bra	u9527
  7232  00E7C4  F000               	nop	
  7233                           
  7234                           ;interface_main.c: 690: printf("Invalid Diet");
  7235  00E7C6  0EDC               	movlw	low STR_44
  7236  00E7C8  6E0D               	movwf	printf@f,c
  7237  00E7CA  0EFE               	movlw	high STR_44
  7238  00E7CC  6E0E               	movwf	printf@f+1,c
  7239  00E7CE  EC66  F061         	call	_printf	;wreg free
  7240                           
  7241                           ;interface_main.c: 691: _delay((unsigned long)((1000)*(40000000/4000.0)));}
  7242  00E7D2  0E33               	movlw	51
  7243  00E7D4  6E58               	movwf	(??_main+1)& (0+255),c
  7244  00E7D6  0EBB               	movlw	187
  7245  00E7D8  6E57               	movwf	??_main& (0+255),c
  7246  00E7DA  0EE0               	movlw	224
  7247  00E7DC                     u9537:
  7248  00E7DC  2EE8               	decfsz	wreg,f,c
  7249  00E7DE  D7FE               	bra	u9537
  7250  00E7E0  2E57               	decfsz	??_main& (0+255),f,c
  7251  00E7E2  D7FC               	bra	u9537
  7252  00E7E4  2E58               	decfsz	(??_main+1)& (0+255),f,c
  7253  00E7E6  D7FA               	bra	u9537
  7254  00E7E8                     l375:
  7255  00E7E8  0101               	movlb	1	; () banked
  7256  00E7EA  51FE               	movf	main@legit_diet& (0+255),w,b
  7257  00E7EC  11FF               	iorwf	(main@legit_diet+1)& (0+255),w,b
  7258  00E7EE  A4D8               	btfss	status,2,c
  7259  00E7F0  D30E               	goto	l414
  7260  00E7F2  D54D               	goto	l348
  7261  00E7F4                     
  7262                           ; BSR set to: 1
  7263                           ;interface_main.c: 696: j = 0;
  7264                           
  7265                           ; BSR set to: 1
  7266  00E7F4  0E00               	movlw	0
  7267  00E7F6  0102               	movlb	2	; () banked
  7268  00E7F8  6FFA               	movwf	(main@j+1)& (0+255),b
  7269  00E7FA  0E00               	movlw	0
  7270  00E7FC  6FF9               	movwf	main@j& (0+255),b
  7271                           
  7272                           ;interface_main.c: 697: k = 0;
  7273  00E7FE  0E00               	movlw	0
  7274  00E800  6FF0               	movwf	(main@k+1)& (0+255),b
  7275  00E802  0E00               	movlw	0
  7276  00E804  6FEF               	movwf	main@k& (0+255),b
  7277                           
  7278                           ;interface_main.c: 698: row_sum = 0;
  7279  00E806  0E00               	movlw	0
  7280  00E808  0101               	movlb	1	; () banked
  7281  00E80A  6FEE               	movwf	(main@row_sum+1)& (0+255),b
  7282  00E80C  0E00               	movlw	0
  7283  00E80E  6FED               	movwf	main@row_sum& (0+255),b
  7284                           
  7285                           ;interface_main.c: 699: amtR = 0;
  7286  00E810  0E00               	movlw	0
  7287  00E812  6FF2               	movwf	(main@amtR+1)& (0+255),b
  7288  00E814  0E00               	movlw	0
  7289  00E816  6FF1               	movwf	main@amtR& (0+255),b
  7290                           
  7291                           ;interface_main.c: 700: amtF = 0;
  7292  00E818  0E00               	movlw	0
  7293  00E81A  6FF4               	movwf	(main@amtF+1)& (0+255),b
  7294  00E81C  0E00               	movlw	0
  7295  00E81E  6FF3               	movwf	main@amtF& (0+255),b
  7296                           
  7297                           ;interface_main.c: 701: amtL = 0;
  7298  00E820  0E00               	movlw	0
  7299  00E822  6FF6               	movwf	(main@amtL+1)& (0+255),b
  7300  00E824  0E00               	movlw	0
  7301  00E826  6FF5               	movwf	main@amtL& (0+255),b
  7302                           
  7303                           ; BSR set to: 1
  7304                           ;interface_main.c: 702: lcdInst(0x80);_delay((unsigned long)((5)*(40000000/4000.0)));;
  7305  00E828  0E80               	movlw	128
  7306  00E82A  EC3E  F051         	call	_lcdInst
  7307  00E82E  0E41               	movlw	65
  7308  00E830  6E57               	movwf	??_main& (0+255),c
  7309  00E832  0EEE               	movlw	238
  7310  00E834                     u9547:
  7311  00E834  2EE8               	decfsz	wreg,f,c
  7312  00E836  D7FE               	bra	u9547
  7313  00E838  2E57               	decfsz	??_main& (0+255),f,c
  7314  00E83A  D7FC               	bra	u9547
  7315  00E83C  D000               	nop2	
  7316                           
  7317                           ;interface_main.c: 703: lcdInst(0x01);_delay((unsigned long)((15)*(40000000/4000.0)));;
  7318  00E83E  0E01               	movlw	1
  7319  00E840  EC3E  F051         	call	_lcdInst
  7320  00E844  0EC3               	movlw	195
  7321  00E846  6E57               	movwf	??_main& (0+255),c
  7322  00E848  0ECD               	movlw	205
  7323  00E84A                     u9557:
  7324  00E84A  2EE8               	decfsz	wreg,f,c
  7325  00E84C  D7FE               	bra	u9557
  7326  00E84E  2E57               	decfsz	??_main& (0+255),f,c
  7327  00E850  D7FC               	bra	u9557
  7328  00E852  F000               	nop	
  7329                           
  7330                           ;interface_main.c: 704: printf("D%d Diet:", i + 1 + row);
  7331  00E854  0E5B               	movlw	low STR_43
  7332  00E856  6E0D               	movwf	printf@f,c
  7333  00E858  0EFF               	movlw	high STR_43
  7334  00E85A  6E0E               	movwf	printf@f+1,c
  7335  00E85C  0102               	movlb	2	; () banked
  7336  00E85E  51F5               	movf	main@row& (0+255),w,b
  7337  00E860  25FC               	addwf	main@i& (0+255),w,b
  7338  00E862  6E57               	movwf	??_main& (0+255),c
  7339  00E864  51F6               	movf	(main@row+1)& (0+255),w,b
  7340  00E866  21FD               	addwfc	(main@i+1)& (0+255),w,b
  7341  00E868  6E58               	movwf	(??_main+1)& (0+255),c
  7342  00E86A  0E01               	movlw	1
  7343  00E86C  2457               	addwf	??_main,w,c
  7344  00E86E  6E0F               	movwf	?_printf+2,c
  7345  00E870  0E00               	movlw	0
  7346  00E872  2058               	addwfc	??_main+1,w,c
  7347  00E874  6E10               	movwf	?_printf+3,c
  7348  00E876  EC66  F061         	call	_printf	;wreg free
  7349                           
  7350                           ;interface_main.c: 705: lcd_set_cursor(10, 0);
  7351  00E87A  0E00               	movlw	0
  7352  00E87C  6E07               	movwf	lcd_set_cursor@y,c
  7353  00E87E  0E0A               	movlw	10
  7354  00E880  EC18  F052         	call	_lcd_set_cursor
  7355                           
  7356                           ;interface_main.c: 706: for (j = 0; j < 4; j++){
  7357  00E884  0E00               	movlw	0
  7358  00E886  0102               	movlb	2	; () banked
  7359  00E888  6FFA               	movwf	(main@j+1)& (0+255),b
  7360  00E88A  0E00               	movlw	0
  7361  00E88C  6FF9               	movwf	main@j& (0+255),b
  7362                           
  7363                           ; BSR set to: 2
  7364  00E88E  BFFA               	btfsc	(main@j+1)& (0+255),7,b
  7365  00E890  D008               	goto	l379
  7366  00E892  51FA               	movf	(main@j+1)& (0+255),w,b
  7367  00E894  E105               	bnz	u7820
  7368  00E896  0E04               	movlw	4
  7369  00E898  5DF9               	subwf	main@j& (0+255),w,b
  7370  00E89A  B0D8               	btfsc	status,0,c
  7371  00E89C  D0AE               	goto	u7870
  7372  00E89E  D001               	goto	l379
  7373  00E8A0                     u7820:
  7374                           
  7375                           ; BSR set to: 2
  7376  00E8A0  D0AC               	goto	u7870
  7377  00E8A2                     l379:
  7378                           
  7379                           ; BSR set to: 2
  7380                           ;interface_main.c: 707: if (diet[i+ row][j] == 0){
  7381                           
  7382                           ; BSR set to: 2
  7383  00E8A2  51F5               	movf	main@row& (0+255),w,b
  7384  00E8A4  25FC               	addwf	main@i& (0+255),w,b
  7385  00E8A6  6E57               	movwf	??_main& (0+255),c
  7386  00E8A8  51F6               	movf	(main@row+1)& (0+255),w,b
  7387  00E8AA  21FD               	addwfc	(main@i+1)& (0+255),w,b
  7388  00E8AC  6E58               	movwf	(??_main+1)& (0+255),c
  7389  00E8AE  90D8               	bcf	status,0,c
  7390  00E8B0  3657               	rlcf	??_main,f,c
  7391  00E8B2  3658               	rlcf	??_main+1,f,c
  7392  00E8B4  90D8               	bcf	status,0,c
  7393  00E8B6  3657               	rlcf	??_main,f,c
  7394  00E8B8  3658               	rlcf	??_main+1,f,c
  7395  00E8BA  90D8               	bcf	status,0,c
  7396  00E8BC  3657               	rlcf	??_main,f,c
  7397  00E8BE  3658               	rlcf	??_main+1,f,c
  7398  00E8C0  0E00               	movlw	low main@diet
  7399  00E8C2  6E59               	movwf	(??_main+2)& (0+255),c
  7400  00E8C4  0E01               	movlw	high main@diet
  7401  00E8C6  6E5A               	movwf	(??_main+3)& (0+255),c
  7402  00E8C8  5057               	movf	??_main,w,c
  7403  00E8CA  2659               	addwf	??_main+2,f,c
  7404  00E8CC  5058               	movf	??_main+1,w,c
  7405  00E8CE  225A               	addwfc	??_main+3,f,c
  7406  00E8D0  90D8               	bcf	status,0,c
  7407  00E8D2  35F9               	rlcf	main@j& (0+255),w,b
  7408  00E8D4  6ED9               	movwf	fsr2l,c
  7409  00E8D6  35FA               	rlcf	(main@j+1)& (0+255),w,b
  7410  00E8D8  6EDA               	movwf	fsr2h,c
  7411  00E8DA  5059               	movf	??_main+2,w,c
  7412  00E8DC  26D9               	addwf	fsr2l,f,c
  7413  00E8DE  505A               	movf	??_main+3,w,c
  7414  00E8E0  22DA               	addwfc	fsr2h,f,c
  7415  00E8E2  50DE               	movf	postinc2,w,c
  7416  00E8E4  10DE               	iorwf	postinc2,w,c
  7417  00E8E6  A4D8               	btfss	status,2,c
  7418  00E8E8  D004               	goto	l381
  7419                           
  7420                           ; BSR set to: 2
  7421                           ;interface_main.c: 708: putch(' ');}
  7422  00E8EA  0E20               	movlw	32
  7423  00E8EC  EC48  F051         	call	_putch
  7424  00E8F0  D07C               	goto	l387
  7425  00E8F2                     l381:
  7426                           
  7427                           ;interface_main.c: 709: else if (diet[i+ row][j] == 1){
  7428  00E8F2  0102               	movlb	2	; () banked
  7429  00E8F4  51F5               	movf	main@row& (0+255),w,b
  7430  00E8F6  25FC               	addwf	main@i& (0+255),w,b
  7431  00E8F8  6E57               	movwf	??_main& (0+255),c
  7432  00E8FA  51F6               	movf	(main@row+1)& (0+255),w,b
  7433  00E8FC  21FD               	addwfc	(main@i+1)& (0+255),w,b
  7434  00E8FE  6E58               	movwf	(??_main+1)& (0+255),c
  7435  00E900  90D8               	bcf	status,0,c
  7436  00E902  3657               	rlcf	??_main,f,c
  7437  00E904  3658               	rlcf	??_main+1,f,c
  7438  00E906  90D8               	bcf	status,0,c
  7439  00E908  3657               	rlcf	??_main,f,c
  7440  00E90A  3658               	rlcf	??_main+1,f,c
  7441  00E90C  90D8               	bcf	status,0,c
  7442  00E90E  3657               	rlcf	??_main,f,c
  7443  00E910  3658               	rlcf	??_main+1,f,c
  7444  00E912  0E00               	movlw	low main@diet
  7445  00E914  6E59               	movwf	(??_main+2)& (0+255),c
  7446  00E916  0E01               	movlw	high main@diet
  7447  00E918  6E5A               	movwf	(??_main+3)& (0+255),c
  7448  00E91A  5057               	movf	??_main,w,c
  7449  00E91C  2659               	addwf	??_main+2,f,c
  7450  00E91E  5058               	movf	??_main+1,w,c
  7451  00E920  225A               	addwfc	??_main+3,f,c
  7452  00E922  90D8               	bcf	status,0,c
  7453  00E924  35F9               	rlcf	main@j& (0+255),w,b
  7454  00E926  6ED9               	movwf	fsr2l,c
  7455  00E928  35FA               	rlcf	(main@j+1)& (0+255),w,b
  7456  00E92A  6EDA               	movwf	fsr2h,c
  7457  00E92C  5059               	movf	??_main+2,w,c
  7458  00E92E  26D9               	addwf	fsr2l,f,c
  7459  00E930  505A               	movf	??_main+3,w,c
  7460  00E932  22DA               	addwfc	fsr2h,f,c
  7461  00E934  04DE               	decf	postinc2,w,c
  7462  00E936  10DE               	iorwf	postinc2,w,c
  7463  00E938  A4D8               	btfss	status,2,c
  7464  00E93A  D004               	goto	l383
  7465                           
  7466                           ; BSR set to: 2
  7467                           ;interface_main.c: 710: putch('R');}
  7468  00E93C  0E52               	movlw	82
  7469  00E93E  EC48  F051         	call	_putch
  7470  00E942  D053               	goto	l387
  7471  00E944                     l383:
  7472                           
  7473                           ;interface_main.c: 712: else if (diet[i+ row][j] == 2){
  7474  00E944  0102               	movlb	2	; () banked
  7475  00E946  51F5               	movf	main@row& (0+255),w,b
  7476  00E948  25FC               	addwf	main@i& (0+255),w,b
  7477  00E94A  6E57               	movwf	??_main& (0+255),c
  7478  00E94C  51F6               	movf	(main@row+1)& (0+255),w,b
  7479  00E94E  21FD               	addwfc	(main@i+1)& (0+255),w,b
  7480  00E950  6E58               	movwf	(??_main+1)& (0+255),c
  7481  00E952  90D8               	bcf	status,0,c
  7482  00E954  3657               	rlcf	??_main,f,c
  7483  00E956  3658               	rlcf	??_main+1,f,c
  7484  00E958  90D8               	bcf	status,0,c
  7485  00E95A  3657               	rlcf	??_main,f,c
  7486  00E95C  3658               	rlcf	??_main+1,f,c
  7487  00E95E  90D8               	bcf	status,0,c
  7488  00E960  3657               	rlcf	??_main,f,c
  7489  00E962  3658               	rlcf	??_main+1,f,c
  7490  00E964  0E00               	movlw	low main@diet
  7491  00E966  6E59               	movwf	(??_main+2)& (0+255),c
  7492  00E968  0E01               	movlw	high main@diet
  7493  00E96A  6E5A               	movwf	(??_main+3)& (0+255),c
  7494  00E96C  5057               	movf	??_main,w,c
  7495  00E96E  2659               	addwf	??_main+2,f,c
  7496  00E970  5058               	movf	??_main+1,w,c
  7497  00E972  225A               	addwfc	??_main+3,f,c
  7498  00E974  90D8               	bcf	status,0,c
  7499  00E976  35F9               	rlcf	main@j& (0+255),w,b
  7500  00E978  6ED9               	movwf	fsr2l,c
  7501  00E97A  35FA               	rlcf	(main@j+1)& (0+255),w,b
  7502  00E97C  6EDA               	movwf	fsr2h,c
  7503  00E97E  5059               	movf	??_main+2,w,c
  7504  00E980  26D9               	addwf	fsr2l,f,c
  7505  00E982  505A               	movf	??_main+3,w,c
  7506  00E984  22DA               	addwfc	fsr2h,f,c
  7507  00E986  0E02               	movlw	2
  7508  00E988  18DE               	xorwf	postinc2,w,c
  7509  00E98A  10DE               	iorwf	postinc2,w,c
  7510  00E98C  A4D8               	btfss	status,2,c
  7511  00E98E  D004               	goto	l385
  7512                           
  7513                           ; BSR set to: 2
  7514                           ;interface_main.c: 713: putch('F');}
  7515  00E990  0E46               	movlw	70
  7516  00E992  EC48  F051         	call	_putch
  7517  00E996  D029               	goto	l387
  7518  00E998                     l385:
  7519                           
  7520                           ;interface_main.c: 714: else if (diet[i + row][j] == 3){
  7521  00E998  0102               	movlb	2	; () banked
  7522  00E99A  51F5               	movf	main@row& (0+255),w,b
  7523  00E99C  25FC               	addwf	main@i& (0+255),w,b
  7524  00E99E  6E57               	movwf	??_main& (0+255),c
  7525  00E9A0  51F6               	movf	(main@row+1)& (0+255),w,b
  7526  00E9A2  21FD               	addwfc	(main@i+1)& (0+255),w,b
  7527  00E9A4  6E58               	movwf	(??_main+1)& (0+255),c
  7528  00E9A6  90D8               	bcf	status,0,c
  7529  00E9A8  3657               	rlcf	??_main,f,c
  7530  00E9AA  3658               	rlcf	??_main+1,f,c
  7531  00E9AC  90D8               	bcf	status,0,c
  7532  00E9AE  3657               	rlcf	??_main,f,c
  7533  00E9B0  3658               	rlcf	??_main+1,f,c
  7534  00E9B2  90D8               	bcf	status,0,c
  7535  00E9B4  3657               	rlcf	??_main,f,c
  7536  00E9B6  3658               	rlcf	??_main+1,f,c
  7537  00E9B8  0E00               	movlw	low main@diet
  7538  00E9BA  6E59               	movwf	(??_main+2)& (0+255),c
  7539  00E9BC  0E01               	movlw	high main@diet
  7540  00E9BE  6E5A               	movwf	(??_main+3)& (0+255),c
  7541  00E9C0  5057               	movf	??_main,w,c
  7542  00E9C2  2659               	addwf	??_main+2,f,c
  7543  00E9C4  5058               	movf	??_main+1,w,c
  7544  00E9C6  225A               	addwfc	??_main+3,f,c
  7545  00E9C8  90D8               	bcf	status,0,c
  7546  00E9CA  35F9               	rlcf	main@j& (0+255),w,b
  7547  00E9CC  6ED9               	movwf	fsr2l,c
  7548  00E9CE  35FA               	rlcf	(main@j+1)& (0+255),w,b
  7549  00E9D0  6EDA               	movwf	fsr2h,c
  7550  00E9D2  5059               	movf	??_main+2,w,c
  7551  00E9D4  26D9               	addwf	fsr2l,f,c
  7552  00E9D6  505A               	movf	??_main+3,w,c
  7553  00E9D8  22DA               	addwfc	fsr2h,f,c
  7554  00E9DA  0E03               	movlw	3
  7555  00E9DC  18DE               	xorwf	postinc2,w,c
  7556  00E9DE  10DE               	iorwf	postinc2,w,c
  7557  00E9E0  A4D8               	btfss	status,2,c
  7558  00E9E2  D003               	goto	l387
  7559                           
  7560                           ; BSR set to: 2
  7561                           ;interface_main.c: 715: putch('L');}
  7562  00E9E4  0E4C               	movlw	76
  7563  00E9E6  EC48  F051         	call	_putch
  7564  00E9EA                     l387:
  7565  00E9EA  0102               	movlb	2	; () banked
  7566  00E9EC  4BF9               	infsnz	main@j& (0+255),f,b
  7567  00E9EE  2BFA               	incf	(main@j+1)& (0+255),f,b
  7568                           
  7569                           ; BSR set to: 2
  7570  00E9F0  BFFA               	btfsc	(main@j+1)& (0+255),7,b
  7571  00E9F2  D757               	goto	l379
  7572  00E9F4  51FA               	movf	(main@j+1)& (0+255),w,b
  7573  00E9F6  E101               	bnz	l7974
  7574  00E9F8  D74E               	goto	L5
  7575  00E9FA                     u7870:
  7576  00E9FA                     l7974:
  7577                           
  7578                           ; BSR set to: 2
  7579                           ;interface_main.c: 716: }
  7580                           ;interface_main.c: 717: lcdInst(0xC0);;
  7581  00E9FA  0EC0               	movlw	192
  7582  00E9FC  EC3E  F051         	call	_lcdInst
  7583                           
  7584                           ;interface_main.c: 718: printf("Pieces: ");
  7585  00EA00  0E79               	movlw	low STR_46
  7586  00EA02  6E0D               	movwf	printf@f,c
  7587  00EA04  0EFF               	movlw	high STR_46
  7588  00EA06  6E0E               	movwf	printf@f+1,c
  7589  00EA08  EC66  F061         	call	_printf	;wreg free
  7590                           
  7591                           ;interface_main.c: 719: lcd_set_cursor(10, 1);
  7592  00EA0C  0E01               	movlw	1
  7593  00EA0E  6E07               	movwf	lcd_set_cursor@y,c
  7594  00EA10  0E0A               	movlw	10
  7595  00EA12  EC18  F052         	call	_lcd_set_cursor
  7596                           
  7597                           ;interface_main.c: 720: lcdInst(8 | (1 << 2) | (1 << 1)| 0);;
  7598  00EA16  0E0E               	movlw	14
  7599  00EA18  EC3E  F051         	call	_lcdInst
  7600                           
  7601                           ;interface_main.c: 721: for (j = 0; j < 4; j++){
  7602  00EA1C  0E00               	movlw	0
  7603  00EA1E  0102               	movlb	2	; () banked
  7604  00EA20  6FFA               	movwf	(main@j+1)& (0+255),b
  7605  00EA22  0E00               	movlw	0
  7606  00EA24  6FF9               	movwf	main@j& (0+255),b
  7607                           
  7608                           ; BSR set to: 2
  7609  00EA26  BFFA               	btfsc	(main@j+1)& (0+255),7,b
  7610  00EA28  D008               	goto	l388
  7611  00EA2A  51FA               	movf	(main@j+1)& (0+255),w,b
  7612  00EA2C  E105               	bnz	u7880
  7613  00EA2E  0E04               	movlw	4
  7614  00EA30  5DF9               	subwf	main@j& (0+255),w,b
  7615  00EA32  B0D8               	btfsc	status,0,c
  7616  00EA34  D142               	goto	u7980
  7617  00EA36  D001               	goto	l388
  7618  00EA38                     u7880:
  7619                           
  7620                           ; BSR set to: 2
  7621  00EA38  D140               	goto	u7980
  7622  00EA3A                     l388:
  7623                           
  7624                           ; BSR set to: 2
  7625                           ;interface_main.c: 723: if (diet[i + row][j] == 0){
  7626                           
  7627                           ; BSR set to: 2
  7628  00EA3A  51F5               	movf	main@row& (0+255),w,b
  7629  00EA3C  25FC               	addwf	main@i& (0+255),w,b
  7630  00EA3E  6E57               	movwf	??_main& (0+255),c
  7631  00EA40  51F6               	movf	(main@row+1)& (0+255),w,b
  7632  00EA42  21FD               	addwfc	(main@i+1)& (0+255),w,b
  7633  00EA44  6E58               	movwf	(??_main+1)& (0+255),c
  7634  00EA46  90D8               	bcf	status,0,c
  7635  00EA48  3657               	rlcf	??_main,f,c
  7636  00EA4A  3658               	rlcf	??_main+1,f,c
  7637  00EA4C  90D8               	bcf	status,0,c
  7638  00EA4E  3657               	rlcf	??_main,f,c
  7639  00EA50  3658               	rlcf	??_main+1,f,c
  7640  00EA52  90D8               	bcf	status,0,c
  7641  00EA54  3657               	rlcf	??_main,f,c
  7642  00EA56  3658               	rlcf	??_main+1,f,c
  7643  00EA58  0E00               	movlw	low main@diet
  7644  00EA5A  6E59               	movwf	(??_main+2)& (0+255),c
  7645  00EA5C  0E01               	movlw	high main@diet
  7646  00EA5E  6E5A               	movwf	(??_main+3)& (0+255),c
  7647  00EA60  5057               	movf	??_main,w,c
  7648  00EA62  2659               	addwf	??_main+2,f,c
  7649  00EA64  5058               	movf	??_main+1,w,c
  7650  00EA66  225A               	addwfc	??_main+3,f,c
  7651  00EA68  90D8               	bcf	status,0,c
  7652  00EA6A  35F9               	rlcf	main@j& (0+255),w,b
  7653  00EA6C  6ED9               	movwf	fsr2l,c
  7654  00EA6E  35FA               	rlcf	(main@j+1)& (0+255),w,b
  7655  00EA70  6EDA               	movwf	fsr2h,c
  7656  00EA72  5059               	movf	??_main+2,w,c
  7657  00EA74  26D9               	addwf	fsr2l,f,c
  7658  00EA76  505A               	movf	??_main+3,w,c
  7659  00EA78  22DA               	addwfc	fsr2h,f,c
  7660  00EA7A  50DE               	movf	postinc2,w,c
  7661  00EA7C  10DE               	iorwf	postinc2,w,c
  7662  00EA7E  B4D8               	btfsc	status,2,c
  7663  00EA80  D007               	goto	l391
  7664  00EA82  D029               	goto	l390
  7665  00EA84                     
  7666                           ; BSR set to: 2
  7667                           ;interface_main.c: 725: putch(' ');
  7668                           
  7669                           ; BSR set to: 2
  7670  00EA84  0E20               	movlw	32
  7671  00EA86  EC48  F051         	call	_putch
  7672                           
  7673                           ;interface_main.c: 726: k++;}
  7674  00EA8A  0102               	movlb	2	; () banked
  7675  00EA8C  4BEF               	infsnz	main@k& (0+255),f,b
  7676  00EA8E  2BF0               	incf	(main@k+1)& (0+255),f,b
  7677  00EA90                     l391:
  7678                           
  7679                           ; BSR set to: 2
  7680                           
  7681                           ; BSR set to: 2
  7682  00EA90  C2F9  F057         	movff	main@j,??_main
  7683  00EA94  C2FA  F058         	movff	main@j+1,??_main+1
  7684  00EA98  1E57               	comf	??_main,f,c
  7685  00EA9A  1E58               	comf	??_main+1,f,c
  7686  00EA9C  4A57               	infsnz	??_main,f,c
  7687  00EA9E  2A58               	incf	??_main+1,f,c
  7688  00EAA0  0E04               	movlw	4
  7689  00EAA2  2657               	addwf	??_main,f,c
  7690  00EAA4  0E00               	movlw	0
  7691  00EAA6  2258               	addwfc	??_main+1,f,c
  7692  00EAA8  5057               	movf	??_main,w,c
  7693  00EAAA  5DEF               	subwf	main@k& (0+255),w,b
  7694  00EAAC  51F0               	movf	(main@k+1)& (0+255),w,b
  7695  00EAAE  0A80               	xorlw	128
  7696  00EAB0  6E59               	movwf	(??_main+2)& (0+255),c
  7697  00EAB2  5058               	movf	??_main+1,w,c
  7698  00EAB4  0A80               	xorlw	128
  7699  00EAB6  5859               	subwfb	(??_main+2)& (0+255),w,c
  7700  00EAB8  A0D8               	btfss	status,0,c
  7701  00EABA  D7E4               	goto	l392
  7702                           
  7703                           ; BSR set to: 2
  7704                           ;interface_main.c: 727: _delay((unsigned long)((250)*(40000000/4000.0)));
  7705                           
  7706                           ; BSR set to: 2
  7707  00EABC  0E0D               	movlw	13
  7708  00EABE  6E58               	movwf	(??_main+1)& (0+255),c
  7709  00EAC0  0EAF               	movlw	175
  7710  00EAC2  6E57               	movwf	??_main& (0+255),c
  7711  00EAC4  0EB6               	movlw	182
  7712  00EAC6                     u9567:
  7713  00EAC6  2EE8               	decfsz	wreg,f,c
  7714  00EAC8  D7FE               	bra	u9567
  7715  00EACA  2E57               	decfsz	??_main& (0+255),f,c
  7716  00EACC  D7FC               	bra	u9567
  7717  00EACE  2E58               	decfsz	(??_main+1)& (0+255),f,c
  7718  00EAD0  D7FA               	bra	u9567
  7719  00EAD2  D000               	nop2	
  7720                           
  7721                           ;interface_main.c: 728: break;}
  7722  00EAD4  D0F2               	goto	u7980
  7723  00EAD6                     l390:
  7724  00EAD6                     l395:
  7725  00EAD6  A281               	btfss	3969,1,c	;volatile
  7726  00EAD8  D7FE               	goto	l390
  7727                           
  7728                           ;interface_main.c: 732: keypress = (PORTB & 0xF0) >> 4;
  7729  00EADA  3881               	swapf	3969,w,c	;volatile
  7730  00EADC  0B0F               	andlw	15
  7731  00EADE  0B0F               	andlw	15
  7732  00EAE0  0102               	movlb	2	; () banked
  7733  00EAE2  6FF7               	movwf	main@keypress& (0+255),b
  7734  00EAE4                     
  7735                           ; BSR set to: 2
  7736  00EAE4  B281               	btfsc	3969,1,c	;volatile
  7737  00EAE6  D7FE               	goto	l399
  7738                           
  7739                           ;interface_main.c: 734: __nop();
  7740  00EAE8  F000               	nop	
  7741                           
  7742                           ;interface_main.c: 735: temp = keys[keypress];
  7743  00EAEA  0102               	movlb	2	; () banked
  7744  00EAEC  51F7               	movf	main@keypress& (0+255),w,b
  7745  00EAEE  0D01               	mullw	1
  7746  00EAF0  0E92               	movlw	low _keys
  7747  00EAF2  24F3               	addwf	prodl,w,c
  7748  00EAF4  6EF6               	movwf	tblptrl,c
  7749  00EAF6  0EFB               	movlw	high _keys
  7750  00EAF8  20F4               	addwfc	prodh,w,c
  7751  00EAFA  6EF7               	movwf	tblptrh,c
  7752  00EAFC                     	if	1	;There are 3 active tblptr bytes
  7753  00EAFC  6AF8               	clrf	tblptru,c
  7754  00EAFE  0E00               	movlw	low (__mediumconst shr (0+16))
  7755  00EB00  22F8               	addwfc	tblptru,f,c
  7756  00EB02                     	endif
  7757  00EB02  0008               	tblrd		*
  7758  00EB04  CFF5 F2FB          	movff	tablat,main@temp
  7759                           
  7760                           ; BSR set to: 2
  7761                           ;interface_main.c: 736: if ((temp - '0' >= 1)&&(temp - '0' <= 3)){
  7762  00EB08  0ED0               	movlw	208
  7763  00EB0A  6E57               	movwf	??_main& (0+255),c
  7764  00EB0C  0EFF               	movlw	255
  7765  00EB0E  6E58               	movwf	(??_main+1)& (0+255),c
  7766  00EB10  51FB               	movf	main@temp& (0+255),w,b
  7767  00EB12  6E59               	movwf	(??_main+2)& (0+255),c
  7768  00EB14  6A5A               	clrf	(??_main+3)& (0+255),c
  7769  00EB16  5057               	movf	??_main,w,c
  7770  00EB18  2659               	addwf	??_main+2,f,c
  7771  00EB1A  5058               	movf	??_main+1,w,c
  7772  00EB1C  225A               	addwfc	??_main+3,f,c
  7773  00EB1E  5059               	movf	??_main+2,w,c
  7774  00EB20  105A               	iorwf	??_main+3,w,c
  7775  00EB22  B4D8               	btfsc	status,2,c
  7776  00EB24  D7D8               	goto	l390
  7777                           
  7778                           ; BSR set to: 2
  7779  00EB26  0ED0               	movlw	208
  7780  00EB28  6E57               	movwf	??_main& (0+255),c
  7781  00EB2A  0EFF               	movlw	255
  7782  00EB2C  6E58               	movwf	(??_main+1)& (0+255),c
  7783  00EB2E  51FB               	movf	main@temp& (0+255),w,b
  7784  00EB30  6E59               	movwf	(??_main+2)& (0+255),c
  7785  00EB32  6A5A               	clrf	(??_main+3)& (0+255),c
  7786  00EB34  5057               	movf	??_main,w,c
  7787  00EB36  2659               	addwf	??_main+2,f,c
  7788  00EB38  5058               	movf	??_main+1,w,c
  7789  00EB3A  225A               	addwfc	??_main+3,f,c
  7790  00EB3C  505A               	movf	??_main+3,w,c
  7791  00EB3E  E1CB               	bnz	l395
  7792  00EB40  0E04               	movlw	4
  7793  00EB42  5C59               	subwf	??_main+2,w,c
  7794  00EB44  B0D8               	btfsc	status,0,c
  7795  00EB46  D7C7               	goto	l390
  7796                           
  7797                           ; BSR set to: 2
  7798                           ;interface_main.c: 738: }
  7799                           ;interface_main.c: 739: putch(temp);
  7800                           
  7801                           ; BSR set to: 2
  7802                           
  7803                           ; BSR set to: 2
  7804                           
  7805                           ; BSR set to: 2
  7806                           
  7807                           ; BSR set to: 2
  7808                           ;interface_main.c: 737: break;}
  7809  00EB48  51FB               	movf	main@temp& (0+255),w,b
  7810  00EB4A  EC48  F051         	call	_putch
  7811                           
  7812                           ;interface_main.c: 740: _delay((unsigned long)((100)*(40000000/4000.0)));
  7813  00EB4E  0E06               	movlw	6
  7814  00EB50  6E58               	movwf	(??_main+1)& (0+255),c
  7815  00EB52  0E13               	movlw	19
  7816  00EB54  6E57               	movwf	??_main& (0+255),c
  7817  00EB56  0EAE               	movlw	174
  7818  00EB58                     u9577:
  7819  00EB58  2EE8               	decfsz	wreg,f,c
  7820  00EB5A  D7FE               	bra	u9577
  7821  00EB5C  2E57               	decfsz	??_main& (0+255),f,c
  7822  00EB5E  D7FC               	bra	u9577
  7823  00EB60  2E58               	decfsz	(??_main+1)& (0+255),f,c
  7824  00EB62  D7FA               	bra	u9577
  7825                           
  7826                           ;interface_main.c: 743: if (diet[i + row][j] == 1){
  7827  00EB64  0102               	movlb	2	; () banked
  7828  00EB66  51F5               	movf	main@row& (0+255),w,b
  7829  00EB68  25FC               	addwf	main@i& (0+255),w,b
  7830  00EB6A  6E57               	movwf	??_main& (0+255),c
  7831  00EB6C  51F6               	movf	(main@row+1)& (0+255),w,b
  7832  00EB6E  21FD               	addwfc	(main@i+1)& (0+255),w,b
  7833  00EB70  6E58               	movwf	(??_main+1)& (0+255),c
  7834  00EB72  90D8               	bcf	status,0,c
  7835  00EB74  3657               	rlcf	??_main,f,c
  7836  00EB76  3658               	rlcf	??_main+1,f,c
  7837  00EB78  90D8               	bcf	status,0,c
  7838  00EB7A  3657               	rlcf	??_main,f,c
  7839  00EB7C  3658               	rlcf	??_main+1,f,c
  7840  00EB7E  90D8               	bcf	status,0,c
  7841  00EB80  3657               	rlcf	??_main,f,c
  7842  00EB82  3658               	rlcf	??_main+1,f,c
  7843  00EB84  0E00               	movlw	low main@diet
  7844  00EB86  6E59               	movwf	(??_main+2)& (0+255),c
  7845  00EB88  0E01               	movlw	high main@diet
  7846  00EB8A  6E5A               	movwf	(??_main+3)& (0+255),c
  7847  00EB8C  5057               	movf	??_main,w,c
  7848  00EB8E  2659               	addwf	??_main+2,f,c
  7849  00EB90  5058               	movf	??_main+1,w,c
  7850  00EB92  225A               	addwfc	??_main+3,f,c
  7851  00EB94  90D8               	bcf	status,0,c
  7852  00EB96  35F9               	rlcf	main@j& (0+255),w,b
  7853  00EB98  6ED9               	movwf	fsr2l,c
  7854  00EB9A  35FA               	rlcf	(main@j+1)& (0+255),w,b
  7855  00EB9C  6EDA               	movwf	fsr2h,c
  7856  00EB9E  5059               	movf	??_main+2,w,c
  7857  00EBA0  26D9               	addwf	fsr2l,f,c
  7858  00EBA2  505A               	movf	??_main+3,w,c
  7859  00EBA4  22DA               	addwfc	fsr2h,f,c
  7860  00EBA6  04DE               	decf	postinc2,w,c
  7861  00EBA8  10DE               	iorwf	postinc2,w,c
  7862  00EBAA  A4D8               	btfss	status,2,c
  7863  00EBAC  D011               	goto	l404
  7864                           
  7865                           ; BSR set to: 2
  7866                           ;interface_main.c: 744: amtR += temp - '0';}
  7867  00EBAE  0ED0               	movlw	208
  7868  00EBB0  6E57               	movwf	??_main& (0+255),c
  7869  00EBB2  0EFF               	movlw	255
  7870  00EBB4  6E58               	movwf	(??_main+1)& (0+255),c
  7871  00EBB6  51FB               	movf	main@temp& (0+255),w,b
  7872  00EBB8  6E59               	movwf	(??_main+2)& (0+255),c
  7873  00EBBA  6A5A               	clrf	(??_main+3)& (0+255),c
  7874  00EBBC  5057               	movf	??_main,w,c
  7875  00EBBE  2659               	addwf	??_main+2,f,c
  7876  00EBC0  5058               	movf	??_main+1,w,c
  7877  00EBC2  225A               	addwfc	??_main+3,f,c
  7878  00EBC4  5059               	movf	??_main+2,w,c
  7879  00EBC6  0101               	movlb	1	; () banked
  7880  00EBC8  27F1               	addwf	main@amtR& (0+255),f,b
  7881  00EBCA  505A               	movf	??_main+3,w,c
  7882  00EBCC  23F2               	addwfc	(main@amtR+1)& (0+255),f,b
  7883  00EBCE  D06D               	goto	l408
  7884  00EBD0                     l404:
  7885                           
  7886                           ;interface_main.c: 745: else if (diet[i + row][j] == 2){
  7887                           
  7888                           ; BSR set to: 1
  7889  00EBD0  0102               	movlb	2	; () banked
  7890  00EBD2  51F5               	movf	main@row& (0+255),w,b
  7891  00EBD4  25FC               	addwf	main@i& (0+255),w,b
  7892  00EBD6  6E57               	movwf	??_main& (0+255),c
  7893  00EBD8  51F6               	movf	(main@row+1)& (0+255),w,b
  7894  00EBDA  21FD               	addwfc	(main@i+1)& (0+255),w,b
  7895  00EBDC  6E58               	movwf	(??_main+1)& (0+255),c
  7896  00EBDE  90D8               	bcf	status,0,c
  7897  00EBE0  3657               	rlcf	??_main,f,c
  7898  00EBE2  3658               	rlcf	??_main+1,f,c
  7899  00EBE4  90D8               	bcf	status,0,c
  7900  00EBE6  3657               	rlcf	??_main,f,c
  7901  00EBE8  3658               	rlcf	??_main+1,f,c
  7902  00EBEA  90D8               	bcf	status,0,c
  7903  00EBEC  3657               	rlcf	??_main,f,c
  7904  00EBEE  3658               	rlcf	??_main+1,f,c
  7905  00EBF0  0E00               	movlw	low main@diet
  7906  00EBF2  6E59               	movwf	(??_main+2)& (0+255),c
  7907  00EBF4  0E01               	movlw	high main@diet
  7908  00EBF6  6E5A               	movwf	(??_main+3)& (0+255),c
  7909  00EBF8  5057               	movf	??_main,w,c
  7910  00EBFA  2659               	addwf	??_main+2,f,c
  7911  00EBFC  5058               	movf	??_main+1,w,c
  7912  00EBFE  225A               	addwfc	??_main+3,f,c
  7913  00EC00  90D8               	bcf	status,0,c
  7914  00EC02  35F9               	rlcf	main@j& (0+255),w,b
  7915  00EC04  6ED9               	movwf	fsr2l,c
  7916  00EC06  35FA               	rlcf	(main@j+1)& (0+255),w,b
  7917  00EC08  6EDA               	movwf	fsr2h,c
  7918  00EC0A  5059               	movf	??_main+2,w,c
  7919  00EC0C  26D9               	addwf	fsr2l,f,c
  7920  00EC0E  505A               	movf	??_main+3,w,c
  7921  00EC10  22DA               	addwfc	fsr2h,f,c
  7922  00EC12  0E02               	movlw	2
  7923  00EC14  18DE               	xorwf	postinc2,w,c
  7924  00EC16  10DE               	iorwf	postinc2,w,c
  7925  00EC18  A4D8               	btfss	status,2,c
  7926  00EC1A  D011               	goto	l406
  7927                           
  7928                           ; BSR set to: 2
  7929                           ;interface_main.c: 746: amtF += temp - '0';}
  7930  00EC1C  0ED0               	movlw	208
  7931  00EC1E  6E57               	movwf	??_main& (0+255),c
  7932  00EC20  0EFF               	movlw	255
  7933  00EC22  6E58               	movwf	(??_main+1)& (0+255),c
  7934  00EC24  51FB               	movf	main@temp& (0+255),w,b
  7935  00EC26  6E59               	movwf	(??_main+2)& (0+255),c
  7936  00EC28  6A5A               	clrf	(??_main+3)& (0+255),c
  7937  00EC2A  5057               	movf	??_main,w,c
  7938  00EC2C  2659               	addwf	??_main+2,f,c
  7939  00EC2E  5058               	movf	??_main+1,w,c
  7940  00EC30  225A               	addwfc	??_main+3,f,c
  7941  00EC32  5059               	movf	??_main+2,w,c
  7942  00EC34  0101               	movlb	1	; () banked
  7943  00EC36  27F3               	addwf	main@amtF& (0+255),f,b
  7944  00EC38  505A               	movf	??_main+3,w,c
  7945  00EC3A  23F4               	addwfc	(main@amtF+1)& (0+255),f,b
  7946  00EC3C  D036               	goto	l408
  7947  00EC3E                     l406:
  7948                           
  7949                           ;interface_main.c: 747: else if (diet[i + row][j] == 3){
  7950                           
  7951                           ; BSR set to: 1
  7952  00EC3E  0102               	movlb	2	; () banked
  7953  00EC40  51F5               	movf	main@row& (0+255),w,b
  7954  00EC42  25FC               	addwf	main@i& (0+255),w,b
  7955  00EC44  6E57               	movwf	??_main& (0+255),c
  7956  00EC46  51F6               	movf	(main@row+1)& (0+255),w,b
  7957  00EC48  21FD               	addwfc	(main@i+1)& (0+255),w,b
  7958  00EC4A  6E58               	movwf	(??_main+1)& (0+255),c
  7959  00EC4C  90D8               	bcf	status,0,c
  7960  00EC4E  3657               	rlcf	??_main,f,c
  7961  00EC50  3658               	rlcf	??_main+1,f,c
  7962  00EC52  90D8               	bcf	status,0,c
  7963  00EC54  3657               	rlcf	??_main,f,c
  7964  00EC56  3658               	rlcf	??_main+1,f,c
  7965  00EC58  90D8               	bcf	status,0,c
  7966  00EC5A  3657               	rlcf	??_main,f,c
  7967  00EC5C  3658               	rlcf	??_main+1,f,c
  7968  00EC5E  0E00               	movlw	low main@diet
  7969  00EC60  6E59               	movwf	(??_main+2)& (0+255),c
  7970  00EC62  0E01               	movlw	high main@diet
  7971  00EC64  6E5A               	movwf	(??_main+3)& (0+255),c
  7972  00EC66  5057               	movf	??_main,w,c
  7973  00EC68  2659               	addwf	??_main+2,f,c
  7974  00EC6A  5058               	movf	??_main+1,w,c
  7975  00EC6C  225A               	addwfc	??_main+3,f,c
  7976  00EC6E  90D8               	bcf	status,0,c
  7977  00EC70  35F9               	rlcf	main@j& (0+255),w,b
  7978  00EC72  6ED9               	movwf	fsr2l,c
  7979  00EC74  35FA               	rlcf	(main@j+1)& (0+255),w,b
  7980  00EC76  6EDA               	movwf	fsr2h,c
  7981  00EC78  5059               	movf	??_main+2,w,c
  7982  00EC7A  26D9               	addwf	fsr2l,f,c
  7983  00EC7C  505A               	movf	??_main+3,w,c
  7984  00EC7E  22DA               	addwfc	fsr2h,f,c
  7985  00EC80  0E03               	movlw	3
  7986  00EC82  18DE               	xorwf	postinc2,w,c
  7987  00EC84  10DE               	iorwf	postinc2,w,c
  7988  00EC86  A4D8               	btfss	status,2,c
  7989  00EC88  D010               	goto	l408
  7990                           
  7991                           ; BSR set to: 2
  7992                           ;interface_main.c: 748: amtL += temp - '0';}
  7993  00EC8A  0ED0               	movlw	208
  7994  00EC8C  6E57               	movwf	??_main& (0+255),c
  7995  00EC8E  0EFF               	movlw	255
  7996  00EC90  6E58               	movwf	(??_main+1)& (0+255),c
  7997  00EC92  51FB               	movf	main@temp& (0+255),w,b
  7998  00EC94  6E59               	movwf	(??_main+2)& (0+255),c
  7999  00EC96  6A5A               	clrf	(??_main+3)& (0+255),c
  8000  00EC98  5057               	movf	??_main,w,c
  8001  00EC9A  2659               	addwf	??_main+2,f,c
  8002  00EC9C  5058               	movf	??_main+1,w,c
  8003  00EC9E  225A               	addwfc	??_main+3,f,c
  8004  00ECA0  5059               	movf	??_main+2,w,c
  8005  00ECA2  0101               	movlb	1	; () banked
  8006  00ECA4  27F5               	addwf	main@amtL& (0+255),f,b
  8007  00ECA6  505A               	movf	??_main+3,w,c
  8008  00ECA8  23F6               	addwfc	(main@amtL+1)& (0+255),f,b
  8009  00ECAA                     l408:
  8010                           
  8011                           ; BSR set to: 1
  8012                           
  8013                           ; BSR set to: 1
  8014                           
  8015                           ; BSR set to: 1
  8016                           
  8017                           ; BSR set to: 1
  8018                           
  8019                           ; BSR set to: 1
  8020                           ;interface_main.c: 749: else {continue;}
  8021  00ECAA  0102               	movlb	2	; () banked
  8022  00ECAC  4BF9               	infsnz	main@j& (0+255),f,b
  8023  00ECAE  2BFA               	incf	(main@j+1)& (0+255),f,b
  8024                           
  8025                           ; BSR set to: 2
  8026  00ECB0  BFFA               	btfsc	(main@j+1)& (0+255),7,b
  8027  00ECB2  D6C3               	goto	l388
  8028  00ECB4  51FA               	movf	(main@j+1)& (0+255),w,b
  8029  00ECB6  E101               	bnz	l8030
  8030  00ECB8  D6BA               	goto	L6
  8031  00ECBA                     u7980:
  8032  00ECBA                     l8030:
  8033                           
  8034                           ;interface_main.c: 750: }
  8035                           ;interface_main.c: 751: lcdInst(8 | (1 << 2) | (0 << 1)| 0);;
  8036  00ECBA  0E0C               	movlw	12
  8037  00ECBC  EC3E  F051         	call	_lcdInst
  8038                           
  8039                           ;interface_main.c: 754: row_sum = amtR + amtF + amtL;
  8040  00ECC0  0101               	movlb	1	; () banked
  8041  00ECC2  51F3               	movf	main@amtF& (0+255),w,b
  8042  00ECC4  25F1               	addwf	main@amtR& (0+255),w,b
  8043  00ECC6  6E57               	movwf	??_main& (0+255),c
  8044  00ECC8  51F4               	movf	(main@amtF+1)& (0+255),w,b
  8045  00ECCA  21F2               	addwfc	(main@amtR+1)& (0+255),w,b
  8046  00ECCC  6E58               	movwf	(??_main+1)& (0+255),c
  8047  00ECCE  51F5               	movf	main@amtL& (0+255),w,b
  8048  00ECD0  2457               	addwf	??_main,w,c
  8049  00ECD2  6FED               	movwf	main@row_sum& (0+255),b
  8050  00ECD4  51F6               	movf	(main@amtL+1)& (0+255),w,b
  8051  00ECD6  2058               	addwfc	??_main+1,w,c
  8052  00ECD8  6FEE               	movwf	(main@row_sum+1)& (0+255),b
  8053                           
  8054                           ; BSR set to: 1
  8055                           ;interface_main.c: 755: if ((row_sum > 4)||(amtR > 2)||(amtF > 2)||(amtL > 3)){
  8056  00ECDA  BFEE               	btfsc	(main@row_sum+1)& (0+255),7,b
  8057  00ECDC  D006               	goto	u7990
  8058  00ECDE  51EE               	movf	(main@row_sum+1)& (0+255),w,b
  8059  00ECE0  E11C               	bnz	l8042
  8060  00ECE2  0E05               	movlw	5
  8061  00ECE4  5DED               	subwf	main@row_sum& (0+255),w,b
  8062  00ECE6  B0D8               	btfsc	status,0,c
  8063  00ECE8  D018               	goto	u8020
  8064  00ECEA                     u7990:
  8065                           
  8066                           ; BSR set to: 1
  8067  00ECEA  BFF2               	btfsc	(main@amtR+1)& (0+255),7,b
  8068  00ECEC  D006               	goto	u8000
  8069  00ECEE  51F2               	movf	(main@amtR+1)& (0+255),w,b
  8070  00ECF0  E114               	bnz	l8042
  8071  00ECF2  0E03               	movlw	3
  8072  00ECF4  5DF1               	subwf	main@amtR& (0+255),w,b
  8073  00ECF6  B0D8               	btfsc	status,0,c
  8074  00ECF8  D010               	goto	u8020
  8075  00ECFA                     u8000:
  8076                           
  8077                           ; BSR set to: 1
  8078  00ECFA  BFF4               	btfsc	(main@amtF+1)& (0+255),7,b
  8079  00ECFC  D006               	goto	u8010
  8080  00ECFE  51F4               	movf	(main@amtF+1)& (0+255),w,b
  8081  00ED00  E10C               	bnz	l8042
  8082  00ED02  0E03               	movlw	3
  8083  00ED04  5DF3               	subwf	main@amtF& (0+255),w,b
  8084  00ED06  B0D8               	btfsc	status,0,c
  8085  00ED08  D008               	goto	u8020
  8086  00ED0A                     u8010:
  8087                           
  8088                           ; BSR set to: 1
  8089  00ED0A  BFF6               	btfsc	(main@amtL+1)& (0+255),7,b
  8090  00ED0C  D02E               	goto	l411
  8091  00ED0E  51F6               	movf	(main@amtL+1)& (0+255),w,b
  8092  00ED10  E104               	bnz	l8042
  8093  00ED12  0E04               	movlw	4
  8094  00ED14  5DF5               	subwf	main@amtL& (0+255),w,b
  8095  00ED16  A0D8               	btfss	status,0,c
  8096  00ED18  D028               	goto	l411
  8097  00ED1A                     u8020:
  8098  00ED1A                     l8042:
  8099                           
  8100                           ; BSR set to: 1
  8101                           ;interface_main.c: 756: lcdInst(0x80);_delay((unsigned long)((5)*(40000000/4000.0)));;
  8102  00ED1A  0E80               	movlw	128
  8103  00ED1C  EC3E  F051         	call	_lcdInst
  8104  00ED20  0E41               	movlw	65
  8105  00ED22  6E57               	movwf	??_main& (0+255),c
  8106  00ED24  0EEE               	movlw	238
  8107  00ED26                     u9587:
  8108  00ED26  2EE8               	decfsz	wreg,f,c
  8109  00ED28  D7FE               	bra	u9587
  8110  00ED2A  2E57               	decfsz	??_main& (0+255),f,c
  8111  00ED2C  D7FC               	bra	u9587
  8112  00ED2E  D000               	nop2	
  8113                           
  8114                           ;interface_main.c: 757: lcdInst(0x01);_delay((unsigned long)((15)*(40000000/4000.0)));;
  8115  00ED30  0E01               	movlw	1
  8116  00ED32  EC3E  F051         	call	_lcdInst
  8117  00ED36  0EC3               	movlw	195
  8118  00ED38  6E57               	movwf	??_main& (0+255),c
  8119  00ED3A  0ECD               	movlw	205
  8120  00ED3C                     u9597:
  8121  00ED3C  2EE8               	decfsz	wreg,f,c
  8122  00ED3E  D7FE               	bra	u9597
  8123  00ED40  2E57               	decfsz	??_main& (0+255),f,c
  8124  00ED42  D7FC               	bra	u9597
  8125  00ED44  F000               	nop	
  8126                           
  8127                           ;interface_main.c: 758: printf("Invalid Inputs");
  8128  00ED46  0E88               	movlw	low STR_47
  8129  00ED48  6E0D               	movwf	printf@f,c
  8130  00ED4A  0EFE               	movlw	high STR_47
  8131  00ED4C  6E0E               	movwf	printf@f+1,c
  8132  00ED4E  EC66  F061         	call	_printf	;wreg free
  8133                           
  8134                           ;interface_main.c: 759: _delay((unsigned long)((1000)*(40000000/4000.0)));}
  8135  00ED52  0E33               	movlw	51
  8136  00ED54  6E58               	movwf	(??_main+1)& (0+255),c
  8137  00ED56  0EBB               	movlw	187
  8138  00ED58  6E57               	movwf	??_main& (0+255),c
  8139  00ED5A  0EE0               	movlw	224
  8140  00ED5C                     u9607:
  8141  00ED5C  2EE8               	decfsz	wreg,f,c
  8142  00ED5E  D7FE               	bra	u9607
  8143  00ED60  2E57               	decfsz	??_main& (0+255),f,c
  8144  00ED62  D7FC               	bra	u9607
  8145  00ED64  2E58               	decfsz	(??_main+1)& (0+255),f,c
  8146  00ED66  D7FA               	bra	u9607
  8147  00ED68  D052               	goto	l414
  8148  00ED6A                     l411:
  8149                           
  8150                           ;interface_main.c: 760: else{
  8151                           ;interface_main.c: 761: mat[i + row][0] = amtR;
  8152  00ED6A  0102               	movlb	2	; () banked
  8153  00ED6C  51F5               	movf	main@row& (0+255),w,b
  8154  00ED6E  25FC               	addwf	main@i& (0+255),w,b
  8155  00ED70  6E01               	movwf	___wmul@multiplier,c
  8156  00ED72  51F6               	movf	(main@row+1)& (0+255),w,b
  8157  00ED74  21FD               	addwfc	(main@i+1)& (0+255),w,b
  8158  00ED76  6E02               	movwf	___wmul@multiplier+1,c
  8159  00ED78  0E00               	movlw	0
  8160  00ED7A  6E04               	movwf	___wmul@multiplicand+1,c
  8161  00ED7C  0E06               	movlw	6
  8162  00ED7E  6E03               	movwf	___wmul@multiplicand,c
  8163  00ED80  ECB7  F051         	call	___wmul	;wreg free
  8164  00ED84  0E80               	movlw	low main@mat
  8165  00ED86  2401               	addwf	?___wmul,w,c
  8166  00ED88  6ED9               	movwf	fsr2l,c
  8167  00ED8A  0E00               	movlw	high main@mat
  8168  00ED8C  2002               	addwfc	?___wmul+1,w,c
  8169  00ED8E  6EDA               	movwf	fsr2h,c
  8170  00ED90  C1F1  FFDE         	movff	main@amtR,postinc2
  8171  00ED94  C1F2  FFDD         	movff	main@amtR+1,postdec2
  8172                           
  8173                           ;interface_main.c: 762: mat[i + row][1] = amtF;
  8174  00ED98  0102               	movlb	2	; () banked
  8175  00ED9A  51F5               	movf	main@row& (0+255),w,b
  8176  00ED9C  25FC               	addwf	main@i& (0+255),w,b
  8177  00ED9E  6E01               	movwf	___wmul@multiplier,c
  8178  00EDA0  51F6               	movf	(main@row+1)& (0+255),w,b
  8179  00EDA2  21FD               	addwfc	(main@i+1)& (0+255),w,b
  8180  00EDA4  6E02               	movwf	___wmul@multiplier+1,c
  8181  00EDA6  0E00               	movlw	0
  8182  00EDA8  6E04               	movwf	___wmul@multiplicand+1,c
  8183  00EDAA  0E06               	movlw	6
  8184  00EDAC  6E03               	movwf	___wmul@multiplicand,c
  8185  00EDAE  ECB7  F051         	call	___wmul	;wreg free
  8186  00EDB2  0E02               	movlw	2
  8187  00EDB4  2601               	addwf	?___wmul,f,c
  8188  00EDB6  0E00               	movlw	0
  8189  00EDB8  2202               	addwfc	?___wmul+1,f,c
  8190  00EDBA  0E80               	movlw	low main@mat
  8191  00EDBC  2401               	addwf	?___wmul,w,c
  8192  00EDBE  6ED9               	movwf	fsr2l,c
  8193  00EDC0  0E00               	movlw	high main@mat
  8194  00EDC2  2002               	addwfc	?___wmul+1,w,c
  8195  00EDC4  6EDA               	movwf	fsr2h,c
  8196  00EDC6  C1F3  FFDE         	movff	main@amtF,postinc2
  8197  00EDCA  C1F4  FFDD         	movff	main@amtF+1,postdec2
  8198                           
  8199                           ;interface_main.c: 763: mat[i + row][2] = amtL;
  8200  00EDCE  0102               	movlb	2	; () banked
  8201  00EDD0  51F5               	movf	main@row& (0+255),w,b
  8202  00EDD2  25FC               	addwf	main@i& (0+255),w,b
  8203  00EDD4  6E01               	movwf	___wmul@multiplier,c
  8204  00EDD6  51F6               	movf	(main@row+1)& (0+255),w,b
  8205  00EDD8  21FD               	addwfc	(main@i+1)& (0+255),w,b
  8206  00EDDA  6E02               	movwf	___wmul@multiplier+1,c
  8207  00EDDC  0E00               	movlw	0
  8208  00EDDE  6E04               	movwf	___wmul@multiplicand+1,c
  8209  00EDE0  0E06               	movlw	6
  8210  00EDE2  6E03               	movwf	___wmul@multiplicand,c
  8211  00EDE4  ECB7  F051         	call	___wmul	;wreg free
  8212  00EDE8  0E04               	movlw	4
  8213  00EDEA  2601               	addwf	?___wmul,f,c
  8214  00EDEC  0E00               	movlw	0
  8215  00EDEE  2202               	addwfc	?___wmul+1,f,c
  8216  00EDF0  0E80               	movlw	low main@mat
  8217  00EDF2  2401               	addwf	?___wmul,w,c
  8218  00EDF4  6ED9               	movwf	fsr2l,c
  8219  00EDF6  0E00               	movlw	high main@mat
  8220  00EDF8  2002               	addwfc	?___wmul+1,w,c
  8221  00EDFA  6EDA               	movwf	fsr2h,c
  8222  00EDFC  C1F5  FFDE         	movff	main@amtL,postinc2
  8223  00EE00  C1F6  FFDD         	movff	main@amtL+1,postdec2
  8224                           
  8225                           ;interface_main.c: 764: legit_pieces = 1;}
  8226  00EE04  0E00               	movlw	0
  8227  00EE06  0101               	movlb	1	; () banked
  8228  00EE08  6FF0               	movwf	(main@legit_pieces+1)& (0+255),b
  8229  00EE0A  0E01               	movlw	1
  8230  00EE0C  6FEF               	movwf	main@legit_pieces& (0+255),b
  8231  00EE0E                     l414:
  8232                           
  8233                           ; BSR set to: 1
  8234                           
  8235                           ; BSR set to: 1
  8236  00EE0E  0101               	movlb	1	; () banked
  8237  00EE10  51EF               	movf	main@legit_pieces& (0+255),w,b
  8238  00EE12  11F0               	iorwf	(main@legit_pieces+1)& (0+255),w,b
  8239  00EE14  B4D8               	btfsc	status,2,c
  8240  00EE16  D4EE               	goto	l378
  8241                           
  8242                           ; BSR set to: 1
  8243                           ;interface_main.c: 765: }
  8244                           ;interface_main.c: 768: if ((legit_diet == 1)&&(legit_pieces == 1)&&(row_sum != 0)){
  8245                           
  8246                           ; BSR set to: 1
  8247  00EE18  05FE               	decf	main@legit_diet& (0+255),w,b
  8248  00EE1A  11FF               	iorwf	(main@legit_diet+1)& (0+255),w,b
  8249  00EE1C  A4D8               	btfss	status,2,c
  8250  00EE1E  D00C               	goto	l416
  8251                           
  8252                           ; BSR set to: 1
  8253  00EE20  05EF               	decf	main@legit_pieces& (0+255),w,b
  8254  00EE22  11F0               	iorwf	(main@legit_pieces+1)& (0+255),w,b
  8255  00EE24  A4D8               	btfss	status,2,c
  8256  00EE26  D008               	goto	l416
  8257                           
  8258                           ; BSR set to: 1
  8259  00EE28  51ED               	movf	main@row_sum& (0+255),w,b
  8260  00EE2A  11EE               	iorwf	(main@row_sum+1)& (0+255),w,b
  8261  00EE2C  B4D8               	btfsc	status,2,c
  8262  00EE2E  D004               	goto	l416
  8263                           
  8264                           ; BSR set to: 1
  8265                           ;interface_main.c: 769: drawer_used = 1;}
  8266  00EE30  0E00               	movlw	0
  8267  00EE32  6FEC               	movwf	(main@drawer_used+1)& (0+255),b
  8268  00EE34  0E01               	movlw	1
  8269  00EE36  6FEB               	movwf	main@drawer_used& (0+255),b
  8270  00EE38                     l416:
  8271                           
  8272                           ; BSR set to: 1
  8273                           ;interface_main.c: 772: tot_drawers += drawer_used;
  8274                           
  8275                           ; BSR set to: 1
  8276  00EE38  51EB               	movf	main@drawer_used& (0+255),w,b
  8277  00EE3A  27FC               	addwf	main@tot_drawers& (0+255),f,b
  8278  00EE3C  51EC               	movf	(main@drawer_used+1)& (0+255),w,b
  8279  00EE3E  23FD               	addwfc	(main@tot_drawers+1)& (0+255),f,b
  8280                           
  8281                           ; BSR set to: 1
  8282                           ;interface_main.c: 776: if (tot_drawers == 8){
  8283  00EE40  0E08               	movlw	8
  8284  00EE42  19FC               	xorwf	main@tot_drawers& (0+255),w,b
  8285  00EE44  11FD               	iorwf	(main@tot_drawers+1)& (0+255),w,b
  8286  00EE46  A4D8               	btfss	status,2,c
  8287  00EE48  D031               	goto	l417
  8288                           
  8289                           ; BSR set to: 1
  8290                           ;interface_main.c: 777: lcdInst(0x01);_delay((unsigned long)((15)*(40000000/4000.0)));;
  8291  00EE4A  0E01               	movlw	1
  8292  00EE4C  EC3E  F051         	call	_lcdInst
  8293  00EE50  0EC3               	movlw	195
  8294  00EE52  6E57               	movwf	??_main& (0+255),c
  8295  00EE54  0ECD               	movlw	205
  8296  00EE56                     u9617:
  8297  00EE56  2EE8               	decfsz	wreg,f,c
  8298  00EE58  D7FE               	bra	u9617
  8299  00EE5A  2E57               	decfsz	??_main& (0+255),f,c
  8300  00EE5C  D7FC               	bra	u9617
  8301  00EE5E  F000               	nop	
  8302                           
  8303                           ;interface_main.c: 778: lcdInst(0x80);_delay((unsigned long)((5)*(40000000/4000.0)));;
  8304  00EE60  0E80               	movlw	128
  8305  00EE62  EC3E  F051         	call	_lcdInst
  8306  00EE66  0E41               	movlw	65
  8307  00EE68  6E57               	movwf	??_main& (0+255),c
  8308  00EE6A  0EEE               	movlw	238
  8309  00EE6C                     u9627:
  8310  00EE6C  2EE8               	decfsz	wreg,f,c
  8311  00EE6E  D7FE               	bra	u9627
  8312  00EE70  2E57               	decfsz	??_main& (0+255),f,c
  8313  00EE72  D7FC               	bra	u9627
  8314  00EE74  D000               	nop2	
  8315                           
  8316                           ;interface_main.c: 779: printf("Maximum Drawers");
  8317  00EE76  0E0D               	movlw	low STR_48
  8318  00EE78  6E0D               	movwf	printf@f,c
  8319  00EE7A  0EFE               	movlw	high STR_48
  8320  00EE7C  6E0E               	movwf	printf@f+1,c
  8321  00EE7E  EC66  F061         	call	_printf	;wreg free
  8322                           
  8323                           ;interface_main.c: 780: lcdInst(0xC0);;
  8324  00EE82  0EC0               	movlw	192
  8325  00EE84  EC3E  F051         	call	_lcdInst
  8326                           
  8327                           ;interface_main.c: 781: printf("Used");
  8328  00EE88  0EC2               	movlw	low STR_49
  8329  00EE8A  6E0D               	movwf	printf@f,c
  8330  00EE8C  0EFF               	movlw	high STR_49
  8331  00EE8E  6E0E               	movwf	printf@f+1,c
  8332  00EE90  EC66  F061         	call	_printf	;wreg free
  8333                           
  8334                           ;interface_main.c: 782: _delay((unsigned long)((1500)*(40000000/4000.0)));
  8335  00EE94  0E4D               	movlw	77
  8336  00EE96  6E58               	movwf	(??_main+1)& (0+255),c
  8337  00EE98  0E19               	movlw	25
  8338  00EE9A  6E57               	movwf	??_main& (0+255),c
  8339  00EE9C  0E50               	movlw	80
  8340  00EE9E                     u9637:
  8341  00EE9E  2EE8               	decfsz	wreg,f,c
  8342  00EEA0  D7FE               	bra	u9637
  8343  00EEA2  2E57               	decfsz	??_main& (0+255),f,c
  8344  00EEA4  D7FC               	bra	u9637
  8345  00EEA6  2E58               	decfsz	(??_main+1)& (0+255),f,c
  8346  00EEA8  D7FA               	bra	u9637
  8347                           
  8348                           ;interface_main.c: 783: break;}
  8349  00EEAA  D00A               	goto	u8080
  8350  00EEAC                     l417:
  8351  00EEAC  0102               	movlb	2	; () banked
  8352  00EEAE  4BFC               	infsnz	main@i& (0+255),f,b
  8353  00EEB0  2BFD               	incf	(main@i+1)& (0+255),f,b
  8354                           
  8355                           ; BSR set to: 2
  8356  00EEB2  BFFD               	btfsc	(main@i+1)& (0+255),7,b
  8357  00EEB4  EFFB  F070         	goto	l342
  8358  00EEB8  51FD               	movf	(main@i+1)& (0+255),w,b
  8359  00EEBA  E102               	bnz	l8088
  8360  00EEBC  EFF3  F070         	goto	L7
  8361  00EEC0                     u8080:
  8362  00EEC0                     l8088:
  8363                           
  8364                           ;interface_main.c: 784: }
  8365                           ;interface_main.c: 786: i = 0;
  8366  00EEC0  0E00               	movlw	0
  8367  00EEC2  0102               	movlb	2	; () banked
  8368  00EEC4  6FFD               	movwf	(main@i+1)& (0+255),b
  8369  00EEC6  0E00               	movlw	0
  8370  00EEC8  6FFC               	movwf	main@i& (0+255),b
  8371                           
  8372                           ;interface_main.c: 787: row = 0;
  8373  00EECA  0E00               	movlw	0
  8374  00EECC  6FF6               	movwf	(main@row+1)& (0+255),b
  8375  00EECE  0E00               	movlw	0
  8376  00EED0  6FF5               	movwf	main@row& (0+255),b
  8377                           
  8378                           ; BSR set to: 2
  8379                           ;interface_main.c: 789: }
  8380                           
  8381                           ;interface_main.c: 788: continue;
  8382  00EED2  EFC7  F06D         	goto	u7350
  8383  00EED6                     l339:
  8384                           
  8385                           ;interface_main.c: 792: else if (temp == 'C'){
  8386                           
  8387                           ; BSR set to: 2
  8388  00EED6  0E43               	movlw	67
  8389  00EED8  0102               	movlb	2	; () banked
  8390  00EEDA  19FB               	xorwf	main@temp& (0+255),w,b
  8391  00EEDC  A4D8               	btfss	status,2,c
  8392  00EEDE  D0B9               	goto	l420
  8393                           
  8394                           ; BSR set to: 2
  8395                           ;interface_main.c: 793: for (i = 0; i < 16; i++){
  8396  00EEE0  0E00               	movlw	0
  8397  00EEE2  6FFD               	movwf	(main@i+1)& (0+255),b
  8398  00EEE4  0E00               	movlw	0
  8399  00EEE6  6FFC               	movwf	main@i& (0+255),b
  8400  00EEE8                     l8096:
  8401                           
  8402                           ; BSR set to: 2
  8403  00EEE8  BFFD               	btfsc	(main@i+1)& (0+255),7,b
  8404  00EEEA  D006               	goto	l421
  8405  00EEEC  51FD               	movf	(main@i+1)& (0+255),w,b
  8406  00EEEE  E138               	bnz	l8116
  8407  00EEF0  0E10               	movlw	16
  8408  00EEF2  5DFC               	subwf	main@i& (0+255),w,b
  8409  00EEF4  B0D8               	btfsc	status,0,c
  8410  00EEF6  D034               	goto	u8130
  8411  00EEF8                     l421:
  8412                           
  8413                           ; BSR set to: 2
  8414                           ;interface_main.c: 794: for (j = 0; j < 4; j++){
  8415                           
  8416                           ; BSR set to: 2
  8417  00EEF8  0E00               	movlw	0
  8418  00EEFA  6FFA               	movwf	(main@j+1)& (0+255),b
  8419  00EEFC  0E00               	movlw	0
  8420  00EEFE  6FF9               	movwf	main@j& (0+255),b
  8421  00EF00                     l8102:
  8422                           
  8423                           ; BSR set to: 2
  8424  00EF00  BFFA               	btfsc	(main@j+1)& (0+255),7,b
  8425  00EF02  D006               	goto	l423
  8426  00EF04  51FA               	movf	(main@j+1)& (0+255),w,b
  8427  00EF06  E129               	bnz	l8112
  8428  00EF08  0E04               	movlw	4
  8429  00EF0A  5DF9               	subwf	main@j& (0+255),w,b
  8430  00EF0C  B0D8               	btfsc	status,0,c
  8431  00EF0E  D025               	goto	u8120
  8432  00EF10                     l423:
  8433                           
  8434                           ; BSR set to: 2
  8435                           ;interface_main.c: 795: diet[i][j] = 0;}}
  8436                           
  8437                           ; BSR set to: 2
  8438  00EF10  C2FC  F057         	movff	main@i,??_main
  8439  00EF14  C2FD  F058         	movff	main@i+1,??_main+1
  8440  00EF18  90D8               	bcf	status,0,c
  8441  00EF1A  3657               	rlcf	??_main,f,c
  8442  00EF1C  3658               	rlcf	??_main+1,f,c
  8443  00EF1E  90D8               	bcf	status,0,c
  8444  00EF20  3657               	rlcf	??_main,f,c
  8445  00EF22  3658               	rlcf	??_main+1,f,c
  8446  00EF24  90D8               	bcf	status,0,c
  8447  00EF26  3657               	rlcf	??_main,f,c
  8448  00EF28  3658               	rlcf	??_main+1,f,c
  8449  00EF2A  0E00               	movlw	low main@diet
  8450  00EF2C  6E59               	movwf	(??_main+2)& (0+255),c
  8451  00EF2E  0E01               	movlw	high main@diet
  8452  00EF30  6E5A               	movwf	(??_main+3)& (0+255),c
  8453  00EF32  5057               	movf	??_main,w,c
  8454  00EF34  2659               	addwf	??_main+2,f,c
  8455  00EF36  5058               	movf	??_main+1,w,c
  8456  00EF38  225A               	addwfc	??_main+3,f,c
  8457  00EF3A  90D8               	bcf	status,0,c
  8458  00EF3C  35F9               	rlcf	main@j& (0+255),w,b
  8459  00EF3E  6ED9               	movwf	fsr2l,c
  8460  00EF40  35FA               	rlcf	(main@j+1)& (0+255),w,b
  8461  00EF42  6EDA               	movwf	fsr2h,c
  8462  00EF44  5059               	movf	??_main+2,w,c
  8463  00EF46  26D9               	addwf	fsr2l,f,c
  8464  00EF48  505A               	movf	??_main+3,w,c
  8465  00EF4A  22DA               	addwfc	fsr2h,f,c
  8466  00EF4C  0E00               	movlw	0
  8467  00EF4E  6EDE               	movwf	postinc2,c
  8468  00EF50  0E00               	movlw	0
  8469  00EF52  6EDD               	movwf	postdec2,c
  8470                           
  8471                           ; BSR set to: 2
  8472  00EF54  4BF9               	infsnz	main@j& (0+255),f,b
  8473  00EF56  2BFA               	incf	(main@j+1)& (0+255),f,b
  8474  00EF58  D7D3               	goto	l8102
  8475  00EF5A                     u8120:
  8476  00EF5A                     l8112:
  8477                           
  8478                           ; BSR set to: 2
  8479  00EF5A  4BFC               	infsnz	main@i& (0+255),f,b
  8480  00EF5C  2BFD               	incf	(main@i+1)& (0+255),f,b
  8481  00EF5E  D7C4               	goto	l8096
  8482  00EF60                     u8130:
  8483  00EF60                     l8116:
  8484                           
  8485                           ; BSR set to: 2
  8486                           ;interface_main.c: 796: for (i = 0; i < 16; i++){
  8487  00EF60  0E00               	movlw	0
  8488  00EF62  6FFD               	movwf	(main@i+1)& (0+255),b
  8489  00EF64  0E00               	movlw	0
  8490  00EF66  6FFC               	movwf	main@i& (0+255),b
  8491  00EF68                     l8118:
  8492                           
  8493                           ; BSR set to: 2
  8494  00EF68  BFFD               	btfsc	(main@i+1)& (0+255),7,b
  8495  00EF6A  D006               	goto	l425
  8496  00EF6C  51FD               	movf	(main@i+1)& (0+255),w,b
  8497  00EF6E  E136               	bnz	l8138
  8498  00EF70  0E10               	movlw	16
  8499  00EF72  5DFC               	subwf	main@i& (0+255),w,b
  8500  00EF74  B0D8               	btfsc	status,0,c
  8501  00EF76  D032               	goto	u8170
  8502  00EF78                     l425:
  8503                           
  8504                           ; BSR set to: 2
  8505                           ;interface_main.c: 797: for (j = 0; j < 3; j++){
  8506                           
  8507                           ; BSR set to: 2
  8508  00EF78  0E00               	movlw	0
  8509  00EF7A  6FFA               	movwf	(main@j+1)& (0+255),b
  8510  00EF7C  0E00               	movlw	0
  8511  00EF7E  6FF9               	movwf	main@j& (0+255),b
  8512  00EF80                     l8124:
  8513                           
  8514                           ; BSR set to: 2
  8515  00EF80  BFFA               	btfsc	(main@j+1)& (0+255),7,b
  8516  00EF82  D006               	goto	l427
  8517  00EF84  51FA               	movf	(main@j+1)& (0+255),w,b
  8518  00EF86  E127               	bnz	l8134
  8519  00EF88  0E03               	movlw	3
  8520  00EF8A  5DF9               	subwf	main@j& (0+255),w,b
  8521  00EF8C  B0D8               	btfsc	status,0,c
  8522  00EF8E  D023               	goto	u8160
  8523  00EF90                     l427:
  8524                           
  8525                           ; BSR set to: 2
  8526                           ;interface_main.c: 798: mat[i][j] = 0;}}
  8527                           
  8528                           ; BSR set to: 2
  8529  00EF90  C2FC  F001         	movff	main@i,___wmul@multiplier
  8530  00EF94  C2FD  F002         	movff	main@i+1,___wmul@multiplier+1
  8531  00EF98  0E00               	movlw	0
  8532  00EF9A  6E04               	movwf	___wmul@multiplicand+1,c
  8533  00EF9C  0E06               	movlw	6
  8534  00EF9E  6E03               	movwf	___wmul@multiplicand,c
  8535  00EFA0  ECB7  F051         	call	___wmul	;wreg free
  8536  00EFA4  0E80               	movlw	low main@mat
  8537  00EFA6  6E57               	movwf	??_main& (0+255),c
  8538  00EFA8  0E00               	movlw	high main@mat
  8539  00EFAA  6E58               	movwf	(??_main+1)& (0+255),c
  8540  00EFAC  5001               	movf	?___wmul,w,c
  8541  00EFAE  2657               	addwf	??_main,f,c
  8542  00EFB0  5002               	movf	?___wmul+1,w,c
  8543  00EFB2  2258               	addwfc	??_main+1,f,c
  8544  00EFB4  90D8               	bcf	status,0,c
  8545  00EFB6  0102               	movlb	2	; () banked
  8546  00EFB8  35F9               	rlcf	main@j& (0+255),w,b
  8547  00EFBA  6ED9               	movwf	fsr2l,c
  8548  00EFBC  35FA               	rlcf	(main@j+1)& (0+255),w,b
  8549  00EFBE  6EDA               	movwf	fsr2h,c
  8550  00EFC0  5057               	movf	??_main,w,c
  8551  00EFC2  26D9               	addwf	fsr2l,f,c
  8552  00EFC4  5058               	movf	??_main+1,w,c
  8553  00EFC6  22DA               	addwfc	fsr2h,f,c
  8554  00EFC8  0E00               	movlw	0
  8555  00EFCA  6EDE               	movwf	postinc2,c
  8556  00EFCC  0E00               	movlw	0
  8557  00EFCE  6EDD               	movwf	postdec2,c
  8558                           
  8559                           ; BSR set to: 2
  8560  00EFD0  4BF9               	infsnz	main@j& (0+255),f,b
  8561  00EFD2  2BFA               	incf	(main@j+1)& (0+255),f,b
  8562  00EFD4  D7D5               	goto	l8124
  8563  00EFD6                     u8160:
  8564  00EFD6                     l8134:
  8565                           
  8566                           ; BSR set to: 2
  8567  00EFD6  4BFC               	infsnz	main@i& (0+255),f,b
  8568  00EFD8  2BFD               	incf	(main@i+1)& (0+255),f,b
  8569  00EFDA  D7C6               	goto	l8118
  8570  00EFDC                     u8170:
  8571  00EFDC                     l8138:
  8572                           
  8573                           ; BSR set to: 2
  8574                           ;interface_main.c: 800: tot_drawers = 0;
  8575  00EFDC  0E00               	movlw	0
  8576  00EFDE  0101               	movlb	1	; () banked
  8577  00EFE0  6FFD               	movwf	(main@tot_drawers+1)& (0+255),b
  8578  00EFE2  0E00               	movlw	0
  8579  00EFE4  6FFC               	movwf	main@tot_drawers& (0+255),b
  8580                           
  8581                           ;interface_main.c: 801: drawer_used = 0;
  8582  00EFE6  0E00               	movlw	0
  8583  00EFE8  6FEC               	movwf	(main@drawer_used+1)& (0+255),b
  8584  00EFEA  0E00               	movlw	0
  8585  00EFEC  6FEB               	movwf	main@drawer_used& (0+255),b
  8586                           
  8587                           ;interface_main.c: 802: i = 0;
  8588  00EFEE  0E00               	movlw	0
  8589  00EFF0  0102               	movlb	2	; () banked
  8590  00EFF2  6FFD               	movwf	(main@i+1)& (0+255),b
  8591  00EFF4  0E00               	movlw	0
  8592  00EFF6  6FFC               	movwf	main@i& (0+255),b
  8593                           
  8594                           ;interface_main.c: 803: j = 0;
  8595  00EFF8  0E00               	movlw	0
  8596  00EFFA  6FFA               	movwf	(main@j+1)& (0+255),b
  8597  00EFFC  0E00               	movlw	0
  8598  00EFFE  6FF9               	movwf	main@j& (0+255),b
  8599                           
  8600                           ; BSR set to: 2
  8601                           ;interface_main.c: 804: lcdInst(0x01);_delay((unsigned long)((15)*(40000000/4000.0)));;
  8602  00F000  0E01               	movlw	1
  8603  00F002  EC3E  F051         	call	_lcdInst
  8604  00F006  0EC3               	movlw	195
  8605  00F008  6E57               	movwf	??_main& (0+255),c
  8606  00F00A  0ECD               	movlw	205
  8607  00F00C                     u9647:
  8608  00F00C  2EE8               	decfsz	wreg,f,c
  8609  00F00E  D7FE               	bra	u9647
  8610  00F010  2E57               	decfsz	??_main& (0+255),f,c
  8611  00F012  D7FC               	bra	u9647
  8612  00F014  F000               	nop	
  8613                           
  8614                           ;interface_main.c: 805: lcdInst(0x80);_delay((unsigned long)((5)*(40000000/4000.0)));;
  8615  00F016  0E80               	movlw	128
  8616  00F018  EC3E  F051         	call	_lcdInst
  8617  00F01C  0E41               	movlw	65
  8618  00F01E  6E57               	movwf	??_main& (0+255),c
  8619  00F020  0EEE               	movlw	238
  8620  00F022                     u9657:
  8621  00F022  2EE8               	decfsz	wreg,f,c
  8622  00F024  D7FE               	bra	u9657
  8623  00F026  2E57               	decfsz	??_main& (0+255),f,c
  8624  00F028  D7FC               	bra	u9657
  8625  00F02A  D000               	nop2	
  8626                           
  8627                           ;interface_main.c: 806: printf("Entries cleared!");
  8628  00F02C  0E68               	movlw	low STR_50
  8629  00F02E  6E0D               	movwf	printf@f,c
  8630  00F030  0EFD               	movlw	high STR_50
  8631  00F032  6E0E               	movwf	printf@f+1,c
  8632  00F034  EC66  F061         	call	_printf	;wreg free
  8633                           
  8634                           ;interface_main.c: 807: _delay((unsigned long)((1500)*(40000000/4000.0)));
  8635  00F038  0E4D               	movlw	77
  8636  00F03A  6E58               	movwf	(??_main+1)& (0+255),c
  8637  00F03C  0E19               	movlw	25
  8638  00F03E  6E57               	movwf	??_main& (0+255),c
  8639  00F040  0E50               	movlw	80
  8640  00F042                     u9667:
  8641  00F042  2EE8               	decfsz	wreg,f,c
  8642  00F044  D7FE               	bra	u9667
  8643  00F046  2E57               	decfsz	??_main& (0+255),f,c
  8644  00F048  D7FC               	bra	u9667
  8645  00F04A  2E58               	decfsz	(??_main+1)& (0+255),f,c
  8646  00F04C  D7FA               	bra	u9667
  8647                           
  8648                           ;interface_main.c: 809: }
  8649                           
  8650                           ;interface_main.c: 808: continue;
  8651  00F04E  EFC7  F06D         	goto	u7350
  8652  00F052                     l420:
  8653                           
  8654                           ;interface_main.c: 812: else if (temp == 'B'){
  8655  00F052  0E42               	movlw	66
  8656  00F054  0102               	movlb	2	; () banked
  8657  00F056  19FB               	xorwf	main@temp& (0+255),w,b
  8658  00F058  B4D8               	btfsc	status,2,c
  8659  00F05A  EFF7  F06A         	goto	u7060
  8660                           
  8661                           ; BSR set to: 2
  8662                           ;interface_main.c: 816: else if (tot_drawers == 8){
  8663                           
  8664                           ; BSR set to: 2
  8665                           
  8666                           ; BSR set to: 2
  8667                           
  8668                           ; BSR set to: 2
  8669                           ;interface_main.c: 813: break;}
  8670  00F05E  0E08               	movlw	8
  8671  00F060  0101               	movlb	1	; () banked
  8672  00F062  19FC               	xorwf	main@tot_drawers& (0+255),w,b
  8673  00F064  11FD               	iorwf	(main@tot_drawers+1)& (0+255),w,b
  8674  00F066  A4D8               	btfss	status,2,c
  8675  00F068  D032               	goto	l433
  8676                           
  8677                           ; BSR set to: 1
  8678                           ;interface_main.c: 817: lcdInst(0x01);_delay((unsigned long)((15)*(40000000/4000.0)));;
  8679  00F06A  0E01               	movlw	1
  8680  00F06C  EC3E  F051         	call	_lcdInst
  8681  00F070  0EC3               	movlw	195
  8682  00F072  6E57               	movwf	??_main& (0+255),c
  8683  00F074  0ECD               	movlw	205
  8684  00F076                     u9677:
  8685  00F076  2EE8               	decfsz	wreg,f,c
  8686  00F078  D7FE               	bra	u9677
  8687  00F07A  2E57               	decfsz	??_main& (0+255),f,c
  8688  00F07C  D7FC               	bra	u9677
  8689  00F07E  F000               	nop	
  8690                           
  8691                           ;interface_main.c: 818: lcdInst(0x80);_delay((unsigned long)((5)*(40000000/4000.0)));;
  8692  00F080  0E80               	movlw	128
  8693  00F082  EC3E  F051         	call	_lcdInst
  8694  00F086  0E41               	movlw	65
  8695  00F088  6E57               	movwf	??_main& (0+255),c
  8696  00F08A  0EEE               	movlw	238
  8697  00F08C                     u9687:
  8698  00F08C  2EE8               	decfsz	wreg,f,c
  8699  00F08E  D7FE               	bra	u9687
  8700  00F090  2E57               	decfsz	??_main& (0+255),f,c
  8701  00F092  D7FC               	bra	u9687
  8702  00F094  D000               	nop2	
  8703                           
  8704                           ;interface_main.c: 819: printf("Maximum drawers");
  8705  00F096  0E1D               	movlw	low STR_51
  8706  00F098  6E0D               	movwf	printf@f,c
  8707  00F09A  0EFE               	movlw	high STR_51
  8708  00F09C  6E0E               	movwf	printf@f+1,c
  8709  00F09E  EC66  F061         	call	_printf	;wreg free
  8710                           
  8711                           ;interface_main.c: 820: lcdInst(0xC0);;
  8712  00F0A2  0EC0               	movlw	192
  8713  00F0A4  EC3E  F051         	call	_lcdInst
  8714                           
  8715                           ;interface_main.c: 821: printf("used");
  8716  00F0A8  0EC7               	movlw	low STR_52
  8717  00F0AA  6E0D               	movwf	printf@f,c
  8718  00F0AC  0EFF               	movlw	high STR_52
  8719  00F0AE  6E0E               	movwf	printf@f+1,c
  8720  00F0B0  EC66  F061         	call	_printf	;wreg free
  8721                           
  8722                           ;interface_main.c: 822: _delay((unsigned long)((1500)*(40000000/4000.0)));
  8723  00F0B4  0E4D               	movlw	77
  8724  00F0B6  6E58               	movwf	(??_main+1)& (0+255),c
  8725  00F0B8  0E19               	movlw	25
  8726  00F0BA  6E57               	movwf	??_main& (0+255),c
  8727  00F0BC  0E50               	movlw	80
  8728  00F0BE                     u9697:
  8729  00F0BE  2EE8               	decfsz	wreg,f,c
  8730  00F0C0  D7FE               	bra	u9697
  8731  00F0C2  2E57               	decfsz	??_main& (0+255),f,c
  8732  00F0C4  D7FC               	bra	u9697
  8733  00F0C6  2E58               	decfsz	(??_main+1)& (0+255),f,c
  8734  00F0C8  D7FA               	bra	u9697
  8735                           
  8736                           ;interface_main.c: 823: }
  8737  00F0CA  EFC7  F06D         	goto	u7350
  8738  00F0CE                     l433:
  8739                           
  8740                           ;interface_main.c: 826: else{
  8741                           ;interface_main.c: 827: lcdInst(0x01);_delay((unsigned long)((15)*(40000000/4000.0)));;
  8742  00F0CE  0E01               	movlw	1
  8743  00F0D0  EC3E  F051         	call	_lcdInst
  8744  00F0D4  0EC3               	movlw	195
  8745  00F0D6  6E57               	movwf	??_main& (0+255),c
  8746  00F0D8  0ECD               	movlw	205
  8747  00F0DA                     u9707:
  8748  00F0DA  2EE8               	decfsz	wreg,f,c
  8749  00F0DC  D7FE               	bra	u9707
  8750  00F0DE  2E57               	decfsz	??_main& (0+255),f,c
  8751  00F0E0  D7FC               	bra	u9707
  8752  00F0E2  F000               	nop	
  8753                           
  8754                           ;interface_main.c: 828: lcdInst(0x80);_delay((unsigned long)((5)*(40000000/4000.0)));;
  8755  00F0E4  0E80               	movlw	128
  8756  00F0E6  EC3E  F051         	call	_lcdInst
  8757  00F0EA  0E41               	movlw	65
  8758  00F0EC  6E57               	movwf	??_main& (0+255),c
  8759  00F0EE  0EEE               	movlw	238
  8760  00F0F0                     u9717:
  8761  00F0F0  2EE8               	decfsz	wreg,f,c
  8762  00F0F2  D7FE               	bra	u9717
  8763  00F0F4  2E57               	decfsz	??_main& (0+255),f,c
  8764  00F0F6  D7FC               	bra	u9717
  8765  00F0F8  D000               	nop2	
  8766                           
  8767                           ;interface_main.c: 829: printf("Invalid Input");
  8768  00F0FA  0EC1               	movlw	low STR_10
  8769  00F0FC  6E0D               	movwf	printf@f,c
  8770  00F0FE  0EFE               	movlw	high STR_10
  8771  00F100  6E0E               	movwf	printf@f+1,c
  8772  00F102  EC66  F061         	call	_printf	;wreg free
  8773                           
  8774                           ;interface_main.c: 830: _delay((unsigned long)((1500)*(40000000/4000.0)));
  8775  00F106  0E4D               	movlw	77
  8776  00F108  6E58               	movwf	(??_main+1)& (0+255),c
  8777  00F10A  0E19               	movlw	25
  8778  00F10C  6E57               	movwf	??_main& (0+255),c
  8779  00F10E  0E50               	movlw	80
  8780  00F110                     u9727:
  8781  00F110  2EE8               	decfsz	wreg,f,c
  8782  00F112  D7FE               	bra	u9727
  8783  00F114  2E57               	decfsz	??_main& (0+255),f,c
  8784  00F116  D7FC               	bra	u9727
  8785  00F118  2E58               	decfsz	(??_main+1)& (0+255),f,c
  8786  00F11A  D7FA               	bra	u9727
  8787                           
  8788                           ;interface_main.c: 831: continue;
  8789  00F11C  EFC7  F06D         	goto	u7350
  8790  00F120                     l302:
  8791                           
  8792                           ;interface_main.c: 837: else if (temp == 'B'){
  8793  00F120  0E42               	movlw	66
  8794  00F122  0102               	movlb	2	; () banked
  8795  00F124  19FB               	xorwf	main@temp& (0+255),w,b
  8796  00F126  A4D8               	btfss	status,2,c
  8797  00F128  EFF7  F06A         	goto	u7060
  8798  00F12C                     l437:
  8799                           
  8800                           ;interface_main.c: 840: }
  8801                           ;interface_main.c: 841: }
  8802                           ;interface_main.c: 844: if (mode_bool == 2){
  8803                           
  8804                           ; BSR set to: 2
  8805                           
  8806                           ; BSR set to: 2
  8807  00F12C  0E02               	movlw	2
  8808  00F12E  0101               	movlb	1	; () banked
  8809  00F130  19F9               	xorwf	main@mode_bool& (0+255),w,b
  8810  00F132  11FA               	iorwf	(main@mode_bool+1)& (0+255),w,b
  8811  00F134  A4D8               	btfss	status,2,c
  8812  00F136  EFB9  F069         	goto	l215
  8813  00F13A                     u8210:
  8814                           
  8815                           ;interface_main.c: 847: lcdInst(0x01);_delay((unsigned long)((15)*(40000000/4000.0)));;
  8816                           
  8817                           ; BSR set to: 1
  8818                           
  8819                           ;interface_main.c: 846: while(1){
  8820  00F13A  0E01               	movlw	1
  8821  00F13C  EC3E  F051         	call	_lcdInst
  8822  00F140  0EC3               	movlw	195
  8823  00F142  6E57               	movwf	??_main& (0+255),c
  8824  00F144  0ECD               	movlw	205
  8825  00F146                     u9737:
  8826  00F146  2EE8               	decfsz	wreg,f,c
  8827  00F148  D7FE               	bra	u9737
  8828  00F14A  2E57               	decfsz	??_main& (0+255),f,c
  8829  00F14C  D7FC               	bra	u9737
  8830  00F14E  F000               	nop	
  8831                           
  8832                           ;interface_main.c: 848: lcdInst(0x80);_delay((unsigned long)((5)*(40000000/4000.0)));;
  8833  00F150  0E80               	movlw	128
  8834  00F152  EC3E  F051         	call	_lcdInst
  8835  00F156  0E41               	movlw	65
  8836  00F158  6E57               	movwf	??_main& (0+255),c
  8837  00F15A  0EEE               	movlw	238
  8838  00F15C                     u9747:
  8839  00F15C  2EE8               	decfsz	wreg,f,c
  8840  00F15E  D7FE               	bra	u9747
  8841  00F160  2E57               	decfsz	??_main& (0+255),f,c
  8842  00F162  D7FC               	bra	u9747
  8843  00F164  D000               	nop2	
  8844                           
  8845                           ;interface_main.c: 850: printf("Past Run Logs: C");
  8846  00F166  0E9B               	movlw	low STR_54
  8847  00F168  6E0D               	movwf	printf@f,c
  8848  00F16A  0EFD               	movlw	high STR_54
  8849  00F16C  6E0E               	movwf	printf@f+1,c
  8850  00F16E  EC66  F061         	call	_printf	;wreg free
  8851                           
  8852                           ;interface_main.c: 851: lcdInst(0xC0);;
  8853  00F172  0EC0               	movlw	192
  8854  00F174  EC3E  F051         	call	_lcdInst
  8855                           
  8856                           ;interface_main.c: 852: printf("Date/Time: D");
  8857  00F178  0ECF               	movlw	low STR_55
  8858  00F17A  6E0D               	movwf	printf@f,c
  8859  00F17C  0EFE               	movlw	high STR_55
  8860  00F17E  6E0E               	movwf	printf@f+1,c
  8861  00F180  EC66  F061         	call	_printf	;wreg free
  8862  00F184  A281               	btfss	3969,1,c	;volatile
  8863  00F186  D7FE               	goto	l442
  8864                           
  8865                           ;interface_main.c: 856: keypress = (PORTB & 0xF0) >> 4;
  8866  00F188  3881               	swapf	3969,w,c	;volatile
  8867  00F18A  0B0F               	andlw	15
  8868  00F18C  0B0F               	andlw	15
  8869  00F18E  0102               	movlb	2	; () banked
  8870  00F190  6FF7               	movwf	main@keypress& (0+255),b
  8871  00F192                     
  8872                           ; BSR set to: 2
  8873  00F192  B281               	btfsc	3969,1,c	;volatile
  8874  00F194  D7FE               	goto	l445
  8875                           
  8876                           ;interface_main.c: 858: __nop();
  8877  00F196  F000               	nop	
  8878                           
  8879                           ;interface_main.c: 859: temp = keys[keypress];
  8880  00F198  0102               	movlb	2	; () banked
  8881  00F19A  51F7               	movf	main@keypress& (0+255),w,b
  8882  00F19C  0D01               	mullw	1
  8883  00F19E  0E92               	movlw	low _keys
  8884  00F1A0  24F3               	addwf	prodl,w,c
  8885  00F1A2  6EF6               	movwf	tblptrl,c
  8886  00F1A4  0EFB               	movlw	high _keys
  8887  00F1A6  20F4               	addwfc	prodh,w,c
  8888  00F1A8  6EF7               	movwf	tblptrh,c
  8889  00F1AA                     	if	1	;There are 3 active tblptr bytes
  8890  00F1AA  6AF8               	clrf	tblptru,c
  8891  00F1AC  0E00               	movlw	low (__mediumconst shr (0+16))
  8892  00F1AE  22F8               	addwfc	tblptru,f,c
  8893  00F1B0                     	endif
  8894  00F1B0  0008               	tblrd		*
  8895  00F1B2  CFF5 F2FB          	movff	tablat,main@temp
  8896                           
  8897                           ; BSR set to: 2
  8898                           ;interface_main.c: 861: _delay((unsigned long)((300)*(40000000/4000.0)));
  8899  00F1B6  0E10               	movlw	16
  8900  00F1B8  6E58               	movwf	(??_main+1)& (0+255),c
  8901  00F1BA  0E39               	movlw	57
  8902  00F1BC  6E57               	movwf	??_main& (0+255),c
  8903  00F1BE  0E0E               	movlw	14
  8904  00F1C0                     u9757:
  8905  00F1C0  2EE8               	decfsz	wreg,f,c
  8906  00F1C2  D7FE               	bra	u9757
  8907  00F1C4  2E57               	decfsz	??_main& (0+255),f,c
  8908  00F1C6  D7FC               	bra	u9757
  8909  00F1C8  2E58               	decfsz	(??_main+1)& (0+255),f,c
  8910  00F1CA  D7FA               	bra	u9757
  8911                           
  8912                           ;interface_main.c: 863: lcdInst(8 | (1 << 2) | (0 << 1)| 0);;
  8913  00F1CC  0E0C               	movlw	12
  8914  00F1CE  EC3E  F051         	call	_lcdInst
  8915                           
  8916                           ;interface_main.c: 866: if (temp == 'C'){
  8917  00F1D2  0E43               	movlw	67
  8918  00F1D4  0102               	movlb	2	; () banked
  8919  00F1D6  19FB               	xorwf	main@temp& (0+255),w,b
  8920  00F1D8  A4D8               	btfss	status,2,c
  8921  00F1DA  D3F9               	goto	l447
  8922  00F1DC                     u8240:
  8923                           
  8924                           ; BSR set to: 2
  8925                           ;interface_main.c: 869: EEPROM_ind = 0;
  8926                           
  8927                           ; BSR set to: 2
  8928                           
  8929                           ;interface_main.c: 868: while(1){
  8930  00F1DC  0E00               	movlw	0
  8931  00F1DE  6FF8               	movwf	main@EEPROM_ind& (0+255),b
  8932                           
  8933                           ;interface_main.c: 870: past_run_count = 0;
  8934  00F1E0  0E00               	movlw	0
  8935  00F1E2  6FF2               	movwf	(main@past_run_count+1)& (0+255),b
  8936  00F1E4  0E00               	movlw	0
  8937  00F1E6  6FF1               	movwf	main@past_run_count& (0+255),b
  8938                           
  8939                           ; BSR set to: 2
  8940                           ;interface_main.c: 872: lcdInst(0x01);_delay((unsigned long)((15)*(40000000/4000.0)));;
  8941  00F1E8  0E01               	movlw	1
  8942  00F1EA  EC3E  F051         	call	_lcdInst
  8943  00F1EE  0EC3               	movlw	195
  8944  00F1F0  6E57               	movwf	??_main& (0+255),c
  8945  00F1F2  0ECD               	movlw	205
  8946  00F1F4                     u9767:
  8947  00F1F4  2EE8               	decfsz	wreg,f,c
  8948  00F1F6  D7FE               	bra	u9767
  8949  00F1F8  2E57               	decfsz	??_main& (0+255),f,c
  8950  00F1FA  D7FC               	bra	u9767
  8951  00F1FC  F000               	nop	
  8952                           
  8953                           ;interface_main.c: 873: lcdInst(0x80);_delay((unsigned long)((5)*(40000000/4000.0)));;
  8954  00F1FE  0E80               	movlw	128
  8955  00F200  EC3E  F051         	call	_lcdInst
  8956  00F204  0E41               	movlw	65
  8957  00F206  6E57               	movwf	??_main& (0+255),c
  8958  00F208  0EEE               	movlw	238
  8959  00F20A                     u9777:
  8960  00F20A  2EE8               	decfsz	wreg,f,c
  8961  00F20C  D7FE               	bra	u9777
  8962  00F20E  2E57               	decfsz	??_main& (0+255),f,c
  8963  00F210  D7FC               	bra	u9777
  8964  00F212  D000               	nop2	
  8965                           
  8966                           ;interface_main.c: 874: printf("Press B for");
  8967  00F214  0E01               	movlw	low STR_16
  8968  00F216  6E0D               	movwf	printf@f,c
  8969  00F218  0EFF               	movlw	high STR_16
  8970  00F21A  6E0E               	movwf	printf@f+1,c
  8971  00F21C  EC66  F061         	call	_printf	;wreg free
  8972                           
  8973                           ;interface_main.c: 875: lcdInst(0xC0);;
  8974  00F220  0EC0               	movlw	192
  8975  00F222  EC3E  F051         	call	_lcdInst
  8976                           
  8977                           ;interface_main.c: 876: printf("Standby Screen");
  8978  00F226  0E6A               	movlw	low STR_57
  8979  00F228  6E0D               	movwf	printf@f,c
  8980  00F22A  0EFE               	movlw	high STR_57
  8981  00F22C  6E0E               	movwf	printf@f+1,c
  8982  00F22E  EC66  F061         	call	_printf	;wreg free
  8983                           
  8984                           ;interface_main.c: 877: _delay((unsigned long)((2000)*(40000000/4000.0)));
  8985  00F232  0E66               	movlw	102
  8986  00F234  6E58               	movwf	(??_main+1)& (0+255),c
  8987  00F236  0E76               	movlw	118
  8988  00F238  6E57               	movwf	??_main& (0+255),c
  8989  00F23A  0EC1               	movlw	193
  8990  00F23C                     u9787:
  8991  00F23C  2EE8               	decfsz	wreg,f,c
  8992  00F23E  D7FE               	bra	u9787
  8993  00F240  2E57               	decfsz	??_main& (0+255),f,c
  8994  00F242  D7FC               	bra	u9787
  8995  00F244  2E58               	decfsz	(??_main+1)& (0+255),f,c
  8996  00F246  D7FA               	bra	u9787
  8997  00F248  F000               	nop	
  8998                           
  8999                           ;interface_main.c: 879: lcdInst(0x01);_delay((unsigned long)((15)*(40000000/4000.0)));;
  9000  00F24A  0E01               	movlw	1
  9001  00F24C  EC3E  F051         	call	_lcdInst
  9002  00F250  0EC3               	movlw	195
  9003  00F252  6E57               	movwf	??_main& (0+255),c
  9004  00F254  0ECD               	movlw	205
  9005  00F256                     u9797:
  9006  00F256  2EE8               	decfsz	wreg,f,c
  9007  00F258  D7FE               	bra	u9797
  9008  00F25A  2E57               	decfsz	??_main& (0+255),f,c
  9009  00F25C  D7FC               	bra	u9797
  9010  00F25E  F000               	nop	
  9011                           
  9012                           ;interface_main.c: 880: lcdInst(0x80);_delay((unsigned long)((5)*(40000000/4000.0)));;
  9013  00F260  0E80               	movlw	128
  9014  00F262  EC3E  F051         	call	_lcdInst
  9015  00F266  0E41               	movlw	65
  9016  00F268  6E57               	movwf	??_main& (0+255),c
  9017  00F26A  0EEE               	movlw	238
  9018  00F26C                     u9807:
  9019  00F26C  2EE8               	decfsz	wreg,f,c
  9020  00F26E  D7FE               	bra	u9807
  9021  00F270  2E57               	decfsz	??_main& (0+255),f,c
  9022  00F272  D7FC               	bra	u9807
  9023  00F274  D000               	nop2	
  9024                           
  9025                           ;interface_main.c: 881: printf("Run Selection");
  9026  00F276  0EB3               	movlw	low STR_58
  9027  00F278  6E0D               	movwf	printf@f,c
  9028  00F27A  0EFE               	movlw	high STR_58
  9029  00F27C  6E0E               	movwf	printf@f+1,c
  9030  00F27E  EC66  F061         	call	_printf	;wreg free
  9031                           
  9032                           ;interface_main.c: 882: lcdInst(0xC0);;
  9033  00F282  0EC0               	movlw	192
  9034  00F284  EC3E  F051         	call	_lcdInst
  9035                           
  9036                           ;interface_main.c: 883: printf("Runs ago (1-6): ");
  9037  00F288  0E57               	movlw	low STR_59
  9038  00F28A  6E0D               	movwf	printf@f,c
  9039  00F28C  0EFD               	movlw	high STR_59
  9040  00F28E  6E0E               	movwf	printf@f+1,c
  9041  00F290  EC66  F061         	call	_printf	;wreg free
  9042                           
  9043                           ;interface_main.c: 884: lcd_set_cursor(15, 1);
  9044  00F294  0E01               	movlw	1
  9045  00F296  6E07               	movwf	lcd_set_cursor@y,c
  9046  00F298  0E0F               	movlw	15
  9047  00F29A  EC18  F052         	call	_lcd_set_cursor
  9048                           
  9049                           ;interface_main.c: 885: lcdInst(8 | (1 << 2) | (1 << 1)| 1);;
  9050  00F29E  0E0F               	movlw	15
  9051  00F2A0  EC3E  F051         	call	_lcdInst
  9052  00F2A4  A281               	btfss	3969,1,c	;volatile
  9053  00F2A6  D7FE               	goto	l450
  9054                           
  9055                           ;interface_main.c: 888: keypress = (PORTB & 0xF0) >> 4;
  9056  00F2A8  3881               	swapf	3969,w,c	;volatile
  9057  00F2AA  0B0F               	andlw	15
  9058  00F2AC  0B0F               	andlw	15
  9059  00F2AE  0102               	movlb	2	; () banked
  9060  00F2B0  6FF7               	movwf	main@keypress& (0+255),b
  9061  00F2B2                     
  9062                           ; BSR set to: 2
  9063  00F2B2  B281               	btfsc	3969,1,c	;volatile
  9064  00F2B4  D7FE               	goto	l453
  9065                           
  9066                           ;interface_main.c: 890: __nop();
  9067  00F2B6  F000               	nop	
  9068                           
  9069                           ;interface_main.c: 891: temp = keys[keypress];
  9070  00F2B8  0102               	movlb	2	; () banked
  9071  00F2BA  51F7               	movf	main@keypress& (0+255),w,b
  9072  00F2BC  0D01               	mullw	1
  9073  00F2BE  0E92               	movlw	low _keys
  9074  00F2C0  24F3               	addwf	prodl,w,c
  9075  00F2C2  6EF6               	movwf	tblptrl,c
  9076  00F2C4  0EFB               	movlw	high _keys
  9077  00F2C6  20F4               	addwfc	prodh,w,c
  9078  00F2C8  6EF7               	movwf	tblptrh,c
  9079  00F2CA                     	if	1	;There are 3 active tblptr bytes
  9080  00F2CA  6AF8               	clrf	tblptru,c
  9081  00F2CC  0E00               	movlw	low (__mediumconst shr (0+16))
  9082  00F2CE  22F8               	addwfc	tblptru,f,c
  9083  00F2D0                     	endif
  9084  00F2D0  0008               	tblrd		*
  9085  00F2D2  CFF5 F2FB          	movff	tablat,main@temp
  9086                           
  9087                           ; BSR set to: 2
  9088                           ;interface_main.c: 892: temp_int = temp - '0';
  9089  00F2D6  0ED0               	movlw	208
  9090  00F2D8  25FB               	addwf	main@temp& (0+255),w,b
  9091  00F2DA  6FF3               	movwf	main@temp_int& (0+255),b
  9092  00F2DC  6BF4               	clrf	(main@temp_int+1)& (0+255),b
  9093  00F2DE  0EFF               	movlw	255
  9094  00F2E0  23F4               	addwfc	(main@temp_int+1)& (0+255),f,b
  9095                           
  9096                           ; BSR set to: 2
  9097                           ;interface_main.c: 893: if ((temp_int >= 1) && temp_int <= 6){
  9098  00F2E2  BFF4               	btfsc	(main@temp_int+1)& (0+255),7,b
  9099  00F2E4  D010               	goto	l455
  9100  00F2E6  51F4               	movf	(main@temp_int+1)& (0+255),w,b
  9101  00F2E8  E103               	bnz	u8270
  9102  00F2EA  05F3               	decf	main@temp_int& (0+255),w,b
  9103  00F2EC  A0D8               	btfss	status,0,c
  9104  00F2EE  D00B               	goto	l455
  9105  00F2F0                     u8270:
  9106                           
  9107                           ; BSR set to: 2
  9108  00F2F0  BFF4               	btfsc	(main@temp_int+1)& (0+255),7,b
  9109  00F2F2  D006               	goto	u8280
  9110  00F2F4  51F4               	movf	(main@temp_int+1)& (0+255),w,b
  9111  00F2F6  E107               	bnz	l8262
  9112  00F2F8  0E07               	movlw	7
  9113  00F2FA  5DF3               	subwf	main@temp_int& (0+255),w,b
  9114  00F2FC  B0D8               	btfsc	status,0,c
  9115  00F2FE  D003               	goto	l455
  9116  00F300                     u8280:
  9117                           
  9118                           ; BSR set to: 2
  9119                           ;interface_main.c: 894: putch(temp);
  9120  00F300  51FB               	movf	main@temp& (0+255),w,b
  9121  00F302  EC48  F051         	call	_putch
  9122  00F306                     l455:
  9123  00F306                     l8262:
  9124                           
  9125                           ;interface_main.c: 895: }
  9126                           ;interface_main.c: 896: _delay((unsigned long)((300)*(40000000/4000.0)));
  9127  00F306  0E10               	movlw	16
  9128  00F308  6E58               	movwf	(??_main+1)& (0+255),c
  9129  00F30A  0E39               	movlw	57
  9130  00F30C  6E57               	movwf	??_main& (0+255),c
  9131  00F30E  0E0E               	movlw	14
  9132  00F310                     u9817:
  9133  00F310  2EE8               	decfsz	wreg,f,c
  9134  00F312  D7FE               	bra	u9817
  9135  00F314  2E57               	decfsz	??_main& (0+255),f,c
  9136  00F316  D7FC               	bra	u9817
  9137  00F318  2E58               	decfsz	(??_main+1)& (0+255),f,c
  9138  00F31A  D7FA               	bra	u9817
  9139                           
  9140                           ;interface_main.c: 897: lcdInst(8 | (1 << 2) | (0 << 1)| 0);;
  9141  00F31C  0E0C               	movlw	12
  9142  00F31E  EC3E  F051         	call	_lcdInst
  9143                           
  9144                           ;interface_main.c: 899: if (temp == 'B'){
  9145  00F322  0E42               	movlw	66
  9146  00F324  0102               	movlb	2	; () banked
  9147  00F326  19FB               	xorwf	main@temp& (0+255),w,b
  9148  00F328  A4D8               	btfss	status,2,c
  9149  00F32A  D00D               	goto	l456
  9150                           
  9151                           ; BSR set to: 2
  9152                           ;interface_main.c: 900: _delay((unsigned long)((250)*(40000000/4000.0)));
  9153  00F32C  0E0D               	movlw	13
  9154  00F32E  6E58               	movwf	(??_main+1)& (0+255),c
  9155  00F330  0EAF               	movlw	175
  9156  00F332  6E57               	movwf	??_main& (0+255),c
  9157  00F334  0EB6               	movlw	182
  9158  00F336                     u9827:
  9159  00F336  2EE8               	decfsz	wreg,f,c
  9160  00F338  D7FE               	bra	u9827
  9161  00F33A  2E57               	decfsz	??_main& (0+255),f,c
  9162  00F33C  D7FC               	bra	u9827
  9163  00F33E  2E58               	decfsz	(??_main+1)& (0+255),f,c
  9164  00F340  D7FA               	bra	u9827
  9165  00F342  D000               	nop2	
  9166                           
  9167                           ;interface_main.c: 901: break;
  9168  00F344  D6FA               	goto	u8210
  9169  00F346                     l456:
  9170                           
  9171                           ;interface_main.c: 902: }
  9172                           ;interface_main.c: 904: lcdInst(0x01);_delay((unsigned long)((15)*(40000000/4000.0)));;
  9173  00F346  0E01               	movlw	1
  9174  00F348  EC3E  F051         	call	_lcdInst
  9175  00F34C  0EC3               	movlw	195
  9176  00F34E  6E57               	movwf	??_main& (0+255),c
  9177  00F350  0ECD               	movlw	205
  9178  00F352                     u9837:
  9179  00F352  2EE8               	decfsz	wreg,f,c
  9180  00F354  D7FE               	bra	u9837
  9181  00F356  2E57               	decfsz	??_main& (0+255),f,c
  9182  00F358  D7FC               	bra	u9837
  9183  00F35A  F000               	nop	
  9184                           
  9185                           ;interface_main.c: 905: lcdInst(0x80);_delay((unsigned long)((5)*(40000000/4000.0)));;
  9186  00F35C  0E80               	movlw	128
  9187  00F35E  EC3E  F051         	call	_lcdInst
  9188  00F362  0E41               	movlw	65
  9189  00F364  6E57               	movwf	??_main& (0+255),c
  9190  00F366  0EEE               	movlw	238
  9191  00F368                     u9847:
  9192  00F368  2EE8               	decfsz	wreg,f,c
  9193  00F36A  D7FE               	bra	u9847
  9194  00F36C  2E57               	decfsz	??_main& (0+255),f,c
  9195  00F36E  D7FC               	bra	u9847
  9196  00F370  D000               	nop2	
  9197                           
  9198                           ;interface_main.c: 906: printf("Press B for");
  9199  00F372  0E01               	movlw	low STR_16
  9200  00F374  6E0D               	movwf	printf@f,c
  9201  00F376  0EFF               	movlw	high STR_16
  9202  00F378  6E0E               	movwf	printf@f+1,c
  9203  00F37A  EC66  F061         	call	_printf	;wreg free
  9204                           
  9205                           ;interface_main.c: 907: lcdInst(0xC0);;
  9206  00F37E  0EC0               	movlw	192
  9207  00F380  EC3E  F051         	call	_lcdInst
  9208                           
  9209                           ;interface_main.c: 908: printf("Run Selection");
  9210  00F384  0EB3               	movlw	low STR_58
  9211  00F386  6E0D               	movwf	printf@f,c
  9212  00F388  0EFE               	movlw	high STR_58
  9213  00F38A  6E0E               	movwf	printf@f+1,c
  9214  00F38C  EC66  F061         	call	_printf	;wreg free
  9215                           
  9216                           ;interface_main.c: 909: _delay((unsigned long)((2000)*(40000000/4000.0)));
  9217  00F390  0E66               	movlw	102
  9218  00F392  6E58               	movwf	(??_main+1)& (0+255),c
  9219  00F394  0E76               	movlw	118
  9220  00F396  6E57               	movwf	??_main& (0+255),c
  9221  00F398  0EC1               	movlw	193
  9222  00F39A                     u9857:
  9223  00F39A  2EE8               	decfsz	wreg,f,c
  9224  00F39C  D7FE               	bra	u9857
  9225  00F39E  2E57               	decfsz	??_main& (0+255),f,c
  9226  00F3A0  D7FC               	bra	u9857
  9227  00F3A2  2E58               	decfsz	(??_main+1)& (0+255),f,c
  9228  00F3A4  D7FA               	bra	u9857
  9229  00F3A6  F000               	nop	
  9230                           
  9231                           ;interface_main.c: 911: EEPROM_ind = (41 * (temp_int-1));
  9232  00F3A8  0102               	movlb	2	; () banked
  9233  00F3AA  05F3               	decf	main@temp_int& (0+255),w,b
  9234  00F3AC  0D29               	mullw	41
  9235  00F3AE  CFF3 F2F8          	movff	prodl,main@EEPROM_ind
  9236                           
  9237                           ; BSR set to: 2
  9238                           ;interface_main.c: 912: copy_EEPROM_ind = EEPROM_ind;
  9239  00F3B2  C2F8  F1EA         	movff	main@EEPROM_ind,main@copy_EEPROM_ind
  9240                           
  9241                           ; BSR set to: 2
  9242                           ;interface_main.c: 913: lcdInst(0x01);_delay((unsigned long)((15)*(40000000/4000.0)));;
  9243  00F3B6  0E01               	movlw	1
  9244  00F3B8  EC3E  F051         	call	_lcdInst
  9245  00F3BC  0EC3               	movlw	195
  9246  00F3BE  6E57               	movwf	??_main& (0+255),c
  9247  00F3C0  0ECD               	movlw	205
  9248  00F3C2                     u9867:
  9249  00F3C2  2EE8               	decfsz	wreg,f,c
  9250  00F3C4  D7FE               	bra	u9867
  9251  00F3C6  2E57               	decfsz	??_main& (0+255),f,c
  9252  00F3C8  D7FC               	bra	u9867
  9253  00F3CA  F000               	nop	
  9254                           
  9255                           ;interface_main.c: 914: lcdInst(0x80);_delay((unsigned long)((5)*(40000000/4000.0)));;
  9256  00F3CC  0E80               	movlw	128
  9257  00F3CE  EC3E  F051         	call	_lcdInst
  9258  00F3D2  0E41               	movlw	65
  9259  00F3D4  6E57               	movwf	??_main& (0+255),c
  9260  00F3D6  0EEE               	movlw	238
  9261  00F3D8                     u9877:
  9262  00F3D8  2EE8               	decfsz	wreg,f,c
  9263  00F3DA  D7FE               	bra	u9877
  9264  00F3DC  2E57               	decfsz	??_main& (0+255),f,c
  9265  00F3DE  D7FC               	bra	u9877
  9266  00F3E0  D000               	nop2	
  9267                           
  9268                           ;interface_main.c: 915: printf("Press * to");
  9269  00F3E2  0E50               	movlw	low STR_62
  9270  00F3E4  6E0D               	movwf	printf@f,c
  9271  00F3E6  0EFF               	movlw	high STR_62
  9272  00F3E8  6E0E               	movwf	printf@f+1,c
  9273  00F3EA  EC66  F061         	call	_printf	;wreg free
  9274                           
  9275                           ;interface_main.c: 916: lcdInst(0xC0);;
  9276  00F3EE  0EC0               	movlw	192
  9277  00F3F0  EC3E  F051         	call	_lcdInst
  9278                           
  9279                           ;interface_main.c: 917: printf("view run data");
  9280  00F3F4  0EA5               	movlw	low STR_63
  9281  00F3F6  6E0D               	movwf	printf@f,c
  9282  00F3F8  0EFE               	movlw	high STR_63
  9283  00F3FA  6E0E               	movwf	printf@f+1,c
  9284  00F3FC  EC66  F061         	call	_printf	;wreg free
  9285                           
  9286                           ;interface_main.c: 919: while(past_run_count < 12){
  9287  00F400  D2DB               	goto	l497
  9288  00F402                     l459:
  9289                           
  9290                           ; BSR set to: 2
  9291                           ;interface_main.c: 920: EEPROM_ind = copy_EEPROM_ind;
  9292  00F402  C1EA  F2F8         	movff	main@copy_EEPROM_ind,main@EEPROM_ind
  9293  00F406                     
  9294                           ; BSR set to: 2
  9295  00F406  A281               	btfss	3969,1,c	;volatile
  9296  00F408  D7FE               	goto	l461
  9297                           
  9298                           ;interface_main.c: 922: keypress = (PORTB & 0xF0) >> 4;
  9299  00F40A  3881               	swapf	3969,w,c	;volatile
  9300  00F40C  0B0F               	andlw	15
  9301  00F40E  0B0F               	andlw	15
  9302  00F410  0102               	movlb	2	; () banked
  9303  00F412  6FF7               	movwf	main@keypress& (0+255),b
  9304  00F414                     
  9305                           ; BSR set to: 2
  9306  00F414  B281               	btfsc	3969,1,c	;volatile
  9307  00F416  D7FE               	goto	l464
  9308                           
  9309                           ;interface_main.c: 924: __nop();
  9310  00F418  F000               	nop	
  9311                           
  9312                           ;interface_main.c: 925: temp = keys[keypress];
  9313  00F41A  0102               	movlb	2	; () banked
  9314  00F41C  51F7               	movf	main@keypress& (0+255),w,b
  9315  00F41E  0D01               	mullw	1
  9316  00F420  0E92               	movlw	low _keys
  9317  00F422  24F3               	addwf	prodl,w,c
  9318  00F424  6EF6               	movwf	tblptrl,c
  9319  00F426  0EFB               	movlw	high _keys
  9320  00F428  20F4               	addwfc	prodh,w,c
  9321  00F42A  6EF7               	movwf	tblptrh,c
  9322  00F42C                     	if	1	;There are 3 active tblptr bytes
  9323  00F42C  6AF8               	clrf	tblptru,c
  9324  00F42E  0E00               	movlw	low (__mediumconst shr (0+16))
  9325  00F430  22F8               	addwfc	tblptru,f,c
  9326  00F432                     	endif
  9327  00F432  0008               	tblrd		*
  9328  00F434  CFF5 F2FB          	movff	tablat,main@temp
  9329                           
  9330                           ; BSR set to: 2
  9331                           ;interface_main.c: 927: if (temp == '*'){
  9332  00F438  0E2A               	movlw	42
  9333  00F43A  19FB               	xorwf	main@temp& (0+255),w,b
  9334  00F43C  A4D8               	btfss	status,2,c
  9335  00F43E  D291               	goto	l466
  9336                           
  9337                           ; BSR set to: 2
  9338                           ;interface_main.c: 928: lcdInst(0x01);_delay((unsigned long)((15)*(40000000/4000.0)));;
  9339  00F440  0E01               	movlw	1
  9340  00F442  EC3E  F051         	call	_lcdInst
  9341  00F446  0EC3               	movlw	195
  9342  00F448  6E57               	movwf	??_main& (0+255),c
  9343  00F44A  0ECD               	movlw	205
  9344  00F44C                     u9887:
  9345  00F44C  2EE8               	decfsz	wreg,f,c
  9346  00F44E  D7FE               	bra	u9887
  9347  00F450  2E57               	decfsz	??_main& (0+255),f,c
  9348  00F452  D7FC               	bra	u9887
  9349  00F454  F000               	nop	
  9350                           
  9351                           ;interface_main.c: 929: lcdInst(0x80);_delay((unsigned long)((5)*(40000000/4000.0)));;
  9352  00F456  0E80               	movlw	128
  9353  00F458  EC3E  F051         	call	_lcdInst
  9354  00F45C  0E41               	movlw	65
  9355  00F45E  6E57               	movwf	??_main& (0+255),c
  9356  00F460  0EEE               	movlw	238
  9357  00F462                     u9897:
  9358  00F462  2EE8               	decfsz	wreg,f,c
  9359  00F464  D7FE               	bra	u9897
  9360  00F466  2E57               	decfsz	??_main& (0+255),f,c
  9361  00F468  D7FC               	bra	u9897
  9362  00F46A  D000               	nop2	
  9363                           
  9364                           ;interface_main.c: 931: if (past_run_count == 0){
  9365  00F46C  0102               	movlb	2	; () banked
  9366  00F46E  51F1               	movf	main@past_run_count& (0+255),w,b
  9367  00F470  11F2               	iorwf	(main@past_run_count+1)& (0+255),w,b
  9368  00F472  A4D8               	btfss	status,2,c
  9369  00F474  D031               	goto	l467
  9370                           
  9371                           ; BSR set to: 2
  9372                           ;interface_main.c: 932: printf("Drawer: %d", read_EEPROM(EEPROM_ind));
  9373  00F476  0E45               	movlw	low STR_64
  9374  00F478  6E0D               	movwf	printf@f,c
  9375  00F47A  0EFF               	movlw	high STR_64
  9376  00F47C  6E0E               	movwf	printf@f+1,c
  9377  00F47E  51F8               	movf	main@EEPROM_ind& (0+255),w,b
  9378  00F480  EC52  F051         	call	_read_EEPROM
  9379  00F484  6E57               	movwf	??_main& (0+255),c
  9380  00F486  5057               	movf	??_main,w,c
  9381  00F488  6E0F               	movwf	?_printf+2,c
  9382  00F48A  6A10               	clrf	?_printf+3,c
  9383  00F48C  EC66  F061         	call	_printf	;wreg free
  9384                           
  9385                           ;interface_main.c: 933: lcdInst(0xC0);;
  9386  00F490  0EC0               	movlw	192
  9387  00F492  EC3E  F051         	call	_lcdInst
  9388                           
  9389                           ;interface_main.c: 934: printf("R:%d  F:%d  L:%d", read_EEPROM(EEPROM_ind+1), read_EEPRO
      +                          M(EEPROM_ind+2), read_EEPROM(EEPROM_ind+3));
  9390  00F496  0EAC               	movlw	low STR_65
  9391  00F498  6E0D               	movwf	printf@f,c
  9392  00F49A  0EFD               	movlw	high STR_65
  9393  00F49C  6E0E               	movwf	printf@f+1,c
  9394  00F49E  0102               	movlb	2	; () banked
  9395  00F4A0  29F8               	incf	main@EEPROM_ind& (0+255),w,b
  9396  00F4A2  EC52  F051         	call	_read_EEPROM
  9397  00F4A6  6E57               	movwf	??_main& (0+255),c
  9398  00F4A8  5057               	movf	??_main,w,c
  9399  00F4AA  6E0F               	movwf	?_printf+2,c
  9400  00F4AC  6A10               	clrf	?_printf+3,c
  9401  00F4AE  0102               	movlb	2	; () banked
  9402  00F4B0  51F8               	movf	main@EEPROM_ind& (0+255),w,b
  9403  00F4B2  0F02               	addlw	2
  9404  00F4B4  EC52  F051         	call	_read_EEPROM
  9405  00F4B8  6E58               	movwf	(??_main+1)& (0+255),c
  9406  00F4BA  5058               	movf	??_main+1,w,c
  9407  00F4BC  6E11               	movwf	?_printf+4,c
  9408  00F4BE  6A12               	clrf	?_printf+5,c
  9409  00F4C0  0102               	movlb	2	; () banked
  9410  00F4C2  51F8               	movf	main@EEPROM_ind& (0+255),w,b
  9411  00F4C4  0F03               	addlw	3
  9412  00F4C6  EC52  F051         	call	_read_EEPROM
  9413  00F4CA  6E59               	movwf	(??_main+2)& (0+255),c
  9414  00F4CC  5059               	movf	??_main+2,w,c
  9415  00F4CE  6E13               	movwf	?_printf+6,c
  9416  00F4D0  6A14               	clrf	?_printf+7,c
  9417  00F4D2  EC66  F061         	call	_printf	;wreg free
  9418                           
  9419                           ;interface_main.c: 935: }
  9420  00F4D6  D241               	goto	l491
  9421  00F4D8                     l467:
  9422                           
  9423                           ;interface_main.c: 937: else if (past_run_count == 1){
  9424  00F4D8  0102               	movlb	2	; () banked
  9425  00F4DA  05F1               	decf	main@past_run_count& (0+255),w,b
  9426  00F4DC  11F2               	iorwf	(main@past_run_count+1)& (0+255),w,b
  9427  00F4DE  A4D8               	btfss	status,2,c
  9428  00F4E0  D033               	goto	l469
  9429                           
  9430                           ; BSR set to: 2
  9431                           ;interface_main.c: 938: EEPROM_ind += 4;
  9432  00F4E2  0E04               	movlw	4
  9433  00F4E4  27F8               	addwf	main@EEPROM_ind& (0+255),f,b
  9434                           
  9435                           ; BSR set to: 2
  9436                           ;interface_main.c: 939: printf("Drawer: %d", read_EEPROM(EEPROM_ind));
  9437  00F4E6  0E45               	movlw	low STR_64
  9438  00F4E8  6E0D               	movwf	printf@f,c
  9439  00F4EA  0EFF               	movlw	high STR_64
  9440  00F4EC  6E0E               	movwf	printf@f+1,c
  9441  00F4EE  51F8               	movf	main@EEPROM_ind& (0+255),w,b
  9442  00F4F0  EC52  F051         	call	_read_EEPROM
  9443  00F4F4  6E57               	movwf	??_main& (0+255),c
  9444  00F4F6  5057               	movf	??_main,w,c
  9445  00F4F8  6E0F               	movwf	?_printf+2,c
  9446  00F4FA  6A10               	clrf	?_printf+3,c
  9447  00F4FC  EC66  F061         	call	_printf	;wreg free
  9448                           
  9449                           ;interface_main.c: 940: lcdInst(0xC0);;
  9450  00F500  0EC0               	movlw	192
  9451  00F502  EC3E  F051         	call	_lcdInst
  9452                           
  9453                           ;interface_main.c: 941: printf("R:%d  F:%d  L:%d", read_EEPROM(EEPROM_ind+1), read_EEPRO
      +                          M(EEPROM_ind+2), read_EEPROM(EEPROM_ind+3));
  9454  00F506  0EAC               	movlw	low STR_65
  9455  00F508  6E0D               	movwf	printf@f,c
  9456  00F50A  0EFD               	movlw	high STR_65
  9457  00F50C  6E0E               	movwf	printf@f+1,c
  9458  00F50E  0102               	movlb	2	; () banked
  9459  00F510  29F8               	incf	main@EEPROM_ind& (0+255),w,b
  9460  00F512  EC52  F051         	call	_read_EEPROM
  9461  00F516  6E57               	movwf	??_main& (0+255),c
  9462  00F518  5057               	movf	??_main,w,c
  9463  00F51A  6E0F               	movwf	?_printf+2,c
  9464  00F51C  6A10               	clrf	?_printf+3,c
  9465  00F51E  0102               	movlb	2	; () banked
  9466  00F520  51F8               	movf	main@EEPROM_ind& (0+255),w,b
  9467  00F522  0F02               	addlw	2
  9468  00F524  EC52  F051         	call	_read_EEPROM
  9469  00F528  6E58               	movwf	(??_main+1)& (0+255),c
  9470  00F52A  5058               	movf	??_main+1,w,c
  9471  00F52C  6E11               	movwf	?_printf+4,c
  9472  00F52E  6A12               	clrf	?_printf+5,c
  9473  00F530  0102               	movlb	2	; () banked
  9474  00F532  51F8               	movf	main@EEPROM_ind& (0+255),w,b
  9475  00F534  0F03               	addlw	3
  9476  00F536  EC52  F051         	call	_read_EEPROM
  9477  00F53A  6E59               	movwf	(??_main+2)& (0+255),c
  9478  00F53C  5059               	movf	??_main+2,w,c
  9479  00F53E  6E13               	movwf	?_printf+6,c
  9480  00F540  6A14               	clrf	?_printf+7,c
  9481  00F542  EC66  F061         	call	_printf	;wreg free
  9482                           
  9483                           ;interface_main.c: 942: }
  9484  00F546  D209               	goto	l491
  9485  00F548                     l469:
  9486                           
  9487                           ;interface_main.c: 944: else if (past_run_count == 2){
  9488  00F548  0E02               	movlw	2
  9489  00F54A  0102               	movlb	2	; () banked
  9490  00F54C  19F1               	xorwf	main@past_run_count& (0+255),w,b
  9491  00F54E  11F2               	iorwf	(main@past_run_count+1)& (0+255),w,b
  9492  00F550  A4D8               	btfss	status,2,c
  9493  00F552  D033               	goto	l471
  9494                           
  9495                           ; BSR set to: 2
  9496                           ;interface_main.c: 945: EEPROM_ind += 8;
  9497  00F554  0E08               	movlw	8
  9498  00F556  27F8               	addwf	main@EEPROM_ind& (0+255),f,b
  9499                           
  9500                           ; BSR set to: 2
  9501                           ;interface_main.c: 946: printf("Drawer: %d", read_EEPROM(EEPROM_ind));
  9502  00F558  0E45               	movlw	low STR_64
  9503  00F55A  6E0D               	movwf	printf@f,c
  9504  00F55C  0EFF               	movlw	high STR_64
  9505  00F55E  6E0E               	movwf	printf@f+1,c
  9506  00F560  51F8               	movf	main@EEPROM_ind& (0+255),w,b
  9507  00F562  EC52  F051         	call	_read_EEPROM
  9508  00F566  6E57               	movwf	??_main& (0+255),c
  9509  00F568  5057               	movf	??_main,w,c
  9510  00F56A  6E0F               	movwf	?_printf+2,c
  9511  00F56C  6A10               	clrf	?_printf+3,c
  9512  00F56E  EC66  F061         	call	_printf	;wreg free
  9513                           
  9514                           ;interface_main.c: 947: lcdInst(0xC0);;
  9515  00F572  0EC0               	movlw	192
  9516  00F574  EC3E  F051         	call	_lcdInst
  9517                           
  9518                           ;interface_main.c: 948: printf("R:%d  F:%d  L:%d", read_EEPROM(EEPROM_ind+1), read_EEPRO
      +                          M(EEPROM_ind+2), read_EEPROM(EEPROM_ind+3));
  9519  00F578  0EAC               	movlw	low STR_65
  9520  00F57A  6E0D               	movwf	printf@f,c
  9521  00F57C  0EFD               	movlw	high STR_65
  9522  00F57E  6E0E               	movwf	printf@f+1,c
  9523  00F580  0102               	movlb	2	; () banked
  9524  00F582  29F8               	incf	main@EEPROM_ind& (0+255),w,b
  9525  00F584  EC52  F051         	call	_read_EEPROM
  9526  00F588  6E57               	movwf	??_main& (0+255),c
  9527  00F58A  5057               	movf	??_main,w,c
  9528  00F58C  6E0F               	movwf	?_printf+2,c
  9529  00F58E  6A10               	clrf	?_printf+3,c
  9530  00F590  0102               	movlb	2	; () banked
  9531  00F592  51F8               	movf	main@EEPROM_ind& (0+255),w,b
  9532  00F594  0F02               	addlw	2
  9533  00F596  EC52  F051         	call	_read_EEPROM
  9534  00F59A  6E58               	movwf	(??_main+1)& (0+255),c
  9535  00F59C  5058               	movf	??_main+1,w,c
  9536  00F59E  6E11               	movwf	?_printf+4,c
  9537  00F5A0  6A12               	clrf	?_printf+5,c
  9538  00F5A2  0102               	movlb	2	; () banked
  9539  00F5A4  51F8               	movf	main@EEPROM_ind& (0+255),w,b
  9540  00F5A6  0F03               	addlw	3
  9541  00F5A8  EC52  F051         	call	_read_EEPROM
  9542  00F5AC  6E59               	movwf	(??_main+2)& (0+255),c
  9543  00F5AE  5059               	movf	??_main+2,w,c
  9544  00F5B0  6E13               	movwf	?_printf+6,c
  9545  00F5B2  6A14               	clrf	?_printf+7,c
  9546  00F5B4  EC66  F061         	call	_printf	;wreg free
  9547                           
  9548                           ;interface_main.c: 949: }
  9549  00F5B8  D1D0               	goto	l491
  9550  00F5BA                     l471:
  9551                           
  9552                           ;interface_main.c: 951: else if (past_run_count == 3){
  9553  00F5BA  0E03               	movlw	3
  9554  00F5BC  0102               	movlb	2	; () banked
  9555  00F5BE  19F1               	xorwf	main@past_run_count& (0+255),w,b
  9556  00F5C0  11F2               	iorwf	(main@past_run_count+1)& (0+255),w,b
  9557  00F5C2  A4D8               	btfss	status,2,c
  9558  00F5C4  D033               	goto	l473
  9559                           
  9560                           ; BSR set to: 2
  9561                           ;interface_main.c: 952: EEPROM_ind += 12;
  9562  00F5C6  0E0C               	movlw	12
  9563  00F5C8  27F8               	addwf	main@EEPROM_ind& (0+255),f,b
  9564                           
  9565                           ; BSR set to: 2
  9566                           ;interface_main.c: 953: printf("Drawer: %d", read_EEPROM(EEPROM_ind));
  9567  00F5CA  0E45               	movlw	low STR_64
  9568  00F5CC  6E0D               	movwf	printf@f,c
  9569  00F5CE  0EFF               	movlw	high STR_64
  9570  00F5D0  6E0E               	movwf	printf@f+1,c
  9571  00F5D2  51F8               	movf	main@EEPROM_ind& (0+255),w,b
  9572  00F5D4  EC52  F051         	call	_read_EEPROM
  9573  00F5D8  6E57               	movwf	??_main& (0+255),c
  9574  00F5DA  5057               	movf	??_main,w,c
  9575  00F5DC  6E0F               	movwf	?_printf+2,c
  9576  00F5DE  6A10               	clrf	?_printf+3,c
  9577  00F5E0  EC66  F061         	call	_printf	;wreg free
  9578                           
  9579                           ;interface_main.c: 954: lcdInst(0xC0);;
  9580  00F5E4  0EC0               	movlw	192
  9581  00F5E6  EC3E  F051         	call	_lcdInst
  9582                           
  9583                           ;interface_main.c: 955: printf("R:%d  F:%d  L:%d", read_EEPROM(EEPROM_ind+1), read_EEPRO
      +                          M(EEPROM_ind+2), read_EEPROM(EEPROM_ind+3));
  9584  00F5EA  0EAC               	movlw	low STR_65
  9585  00F5EC  6E0D               	movwf	printf@f,c
  9586  00F5EE  0EFD               	movlw	high STR_65
  9587  00F5F0  6E0E               	movwf	printf@f+1,c
  9588  00F5F2  0102               	movlb	2	; () banked
  9589  00F5F4  29F8               	incf	main@EEPROM_ind& (0+255),w,b
  9590  00F5F6  EC52  F051         	call	_read_EEPROM
  9591  00F5FA  6E57               	movwf	??_main& (0+255),c
  9592  00F5FC  5057               	movf	??_main,w,c
  9593  00F5FE  6E0F               	movwf	?_printf+2,c
  9594  00F600  6A10               	clrf	?_printf+3,c
  9595  00F602  0102               	movlb	2	; () banked
  9596  00F604  51F8               	movf	main@EEPROM_ind& (0+255),w,b
  9597  00F606  0F02               	addlw	2
  9598  00F608  EC52  F051         	call	_read_EEPROM
  9599  00F60C  6E58               	movwf	(??_main+1)& (0+255),c
  9600  00F60E  5058               	movf	??_main+1,w,c
  9601  00F610  6E11               	movwf	?_printf+4,c
  9602  00F612  6A12               	clrf	?_printf+5,c
  9603  00F614  0102               	movlb	2	; () banked
  9604  00F616  51F8               	movf	main@EEPROM_ind& (0+255),w,b
  9605  00F618  0F03               	addlw	3
  9606  00F61A  EC52  F051         	call	_read_EEPROM
  9607  00F61E  6E59               	movwf	(??_main+2)& (0+255),c
  9608  00F620  5059               	movf	??_main+2,w,c
  9609  00F622  6E13               	movwf	?_printf+6,c
  9610  00F624  6A14               	clrf	?_printf+7,c
  9611  00F626  EC66  F061         	call	_printf	;wreg free
  9612                           
  9613                           ;interface_main.c: 956: }
  9614  00F62A  D197               	goto	l491
  9615  00F62C                     l473:
  9616                           
  9617                           ;interface_main.c: 958: else if (past_run_count == 4){
  9618  00F62C  0E04               	movlw	4
  9619  00F62E  0102               	movlb	2	; () banked
  9620  00F630  19F1               	xorwf	main@past_run_count& (0+255),w,b
  9621  00F632  11F2               	iorwf	(main@past_run_count+1)& (0+255),w,b
  9622  00F634  A4D8               	btfss	status,2,c
  9623  00F636  D033               	goto	l475
  9624                           
  9625                           ; BSR set to: 2
  9626                           ;interface_main.c: 959: EEPROM_ind += 16;
  9627  00F638  0E10               	movlw	16
  9628  00F63A  27F8               	addwf	main@EEPROM_ind& (0+255),f,b
  9629                           
  9630                           ; BSR set to: 2
  9631                           ;interface_main.c: 960: printf("Drawer: %d", read_EEPROM(EEPROM_ind));
  9632  00F63C  0E45               	movlw	low STR_64
  9633  00F63E  6E0D               	movwf	printf@f,c
  9634  00F640  0EFF               	movlw	high STR_64
  9635  00F642  6E0E               	movwf	printf@f+1,c
  9636  00F644  51F8               	movf	main@EEPROM_ind& (0+255),w,b
  9637  00F646  EC52  F051         	call	_read_EEPROM
  9638  00F64A  6E57               	movwf	??_main& (0+255),c
  9639  00F64C  5057               	movf	??_main,w,c
  9640  00F64E  6E0F               	movwf	?_printf+2,c
  9641  00F650  6A10               	clrf	?_printf+3,c
  9642  00F652  EC66  F061         	call	_printf	;wreg free
  9643                           
  9644                           ;interface_main.c: 961: lcdInst(0xC0);;
  9645  00F656  0EC0               	movlw	192
  9646  00F658  EC3E  F051         	call	_lcdInst
  9647                           
  9648                           ;interface_main.c: 962: printf("R:%d  F:%d  L:%d", read_EEPROM(EEPROM_ind+1), read_EEPRO
      +                          M(EEPROM_ind+2), read_EEPROM(EEPROM_ind+3));
  9649  00F65C  0EAC               	movlw	low STR_65
  9650  00F65E  6E0D               	movwf	printf@f,c
  9651  00F660  0EFD               	movlw	high STR_65
  9652  00F662  6E0E               	movwf	printf@f+1,c
  9653  00F664  0102               	movlb	2	; () banked
  9654  00F666  29F8               	incf	main@EEPROM_ind& (0+255),w,b
  9655  00F668  EC52  F051         	call	_read_EEPROM
  9656  00F66C  6E57               	movwf	??_main& (0+255),c
  9657  00F66E  5057               	movf	??_main,w,c
  9658  00F670  6E0F               	movwf	?_printf+2,c
  9659  00F672  6A10               	clrf	?_printf+3,c
  9660  00F674  0102               	movlb	2	; () banked
  9661  00F676  51F8               	movf	main@EEPROM_ind& (0+255),w,b
  9662  00F678  0F02               	addlw	2
  9663  00F67A  EC52  F051         	call	_read_EEPROM
  9664  00F67E  6E58               	movwf	(??_main+1)& (0+255),c
  9665  00F680  5058               	movf	??_main+1,w,c
  9666  00F682  6E11               	movwf	?_printf+4,c
  9667  00F684  6A12               	clrf	?_printf+5,c
  9668  00F686  0102               	movlb	2	; () banked
  9669  00F688  51F8               	movf	main@EEPROM_ind& (0+255),w,b
  9670  00F68A  0F03               	addlw	3
  9671  00F68C  EC52  F051         	call	_read_EEPROM
  9672  00F690  6E59               	movwf	(??_main+2)& (0+255),c
  9673  00F692  5059               	movf	??_main+2,w,c
  9674  00F694  6E13               	movwf	?_printf+6,c
  9675  00F696  6A14               	clrf	?_printf+7,c
  9676  00F698  EC66  F061         	call	_printf	;wreg free
  9677                           
  9678                           ;interface_main.c: 963: }
  9679  00F69C  D15E               	goto	l491
  9680  00F69E                     l475:
  9681                           
  9682                           ;interface_main.c: 965: else if (past_run_count == 5){
  9683  00F69E  0E05               	movlw	5
  9684  00F6A0  0102               	movlb	2	; () banked
  9685  00F6A2  19F1               	xorwf	main@past_run_count& (0+255),w,b
  9686  00F6A4  11F2               	iorwf	(main@past_run_count+1)& (0+255),w,b
  9687  00F6A6  A4D8               	btfss	status,2,c
  9688  00F6A8  D033               	goto	l477
  9689                           
  9690                           ; BSR set to: 2
  9691                           ;interface_main.c: 966: EEPROM_ind += 20;
  9692  00F6AA  0E14               	movlw	20
  9693  00F6AC  27F8               	addwf	main@EEPROM_ind& (0+255),f,b
  9694                           
  9695                           ; BSR set to: 2
  9696                           ;interface_main.c: 967: printf("Drawer: %d", read_EEPROM(EEPROM_ind));
  9697  00F6AE  0E45               	movlw	low STR_64
  9698  00F6B0  6E0D               	movwf	printf@f,c
  9699  00F6B2  0EFF               	movlw	high STR_64
  9700  00F6B4  6E0E               	movwf	printf@f+1,c
  9701  00F6B6  51F8               	movf	main@EEPROM_ind& (0+255),w,b
  9702  00F6B8  EC52  F051         	call	_read_EEPROM
  9703  00F6BC  6E57               	movwf	??_main& (0+255),c
  9704  00F6BE  5057               	movf	??_main,w,c
  9705  00F6C0  6E0F               	movwf	?_printf+2,c
  9706  00F6C2  6A10               	clrf	?_printf+3,c
  9707  00F6C4  EC66  F061         	call	_printf	;wreg free
  9708                           
  9709                           ;interface_main.c: 968: lcdInst(0xC0);;
  9710  00F6C8  0EC0               	movlw	192
  9711  00F6CA  EC3E  F051         	call	_lcdInst
  9712                           
  9713                           ;interface_main.c: 969: printf("R:%d  F:%d  L:%d", read_EEPROM(EEPROM_ind+1), read_EEPRO
      +                          M(EEPROM_ind+2), read_EEPROM(EEPROM_ind+3));
  9714  00F6CE  0EAC               	movlw	low STR_65
  9715  00F6D0  6E0D               	movwf	printf@f,c
  9716  00F6D2  0EFD               	movlw	high STR_65
  9717  00F6D4  6E0E               	movwf	printf@f+1,c
  9718  00F6D6  0102               	movlb	2	; () banked
  9719  00F6D8  29F8               	incf	main@EEPROM_ind& (0+255),w,b
  9720  00F6DA  EC52  F051         	call	_read_EEPROM
  9721  00F6DE  6E57               	movwf	??_main& (0+255),c
  9722  00F6E0  5057               	movf	??_main,w,c
  9723  00F6E2  6E0F               	movwf	?_printf+2,c
  9724  00F6E4  6A10               	clrf	?_printf+3,c
  9725  00F6E6  0102               	movlb	2	; () banked
  9726  00F6E8  51F8               	movf	main@EEPROM_ind& (0+255),w,b
  9727  00F6EA  0F02               	addlw	2
  9728  00F6EC  EC52  F051         	call	_read_EEPROM
  9729  00F6F0  6E58               	movwf	(??_main+1)& (0+255),c
  9730  00F6F2  5058               	movf	??_main+1,w,c
  9731  00F6F4  6E11               	movwf	?_printf+4,c
  9732  00F6F6  6A12               	clrf	?_printf+5,c
  9733  00F6F8  0102               	movlb	2	; () banked
  9734  00F6FA  51F8               	movf	main@EEPROM_ind& (0+255),w,b
  9735  00F6FC  0F03               	addlw	3
  9736  00F6FE  EC52  F051         	call	_read_EEPROM
  9737  00F702  6E59               	movwf	(??_main+2)& (0+255),c
  9738  00F704  5059               	movf	??_main+2,w,c
  9739  00F706  6E13               	movwf	?_printf+6,c
  9740  00F708  6A14               	clrf	?_printf+7,c
  9741  00F70A  EC66  F061         	call	_printf	;wreg free
  9742                           
  9743                           ;interface_main.c: 970: }
  9744  00F70E  D125               	goto	l491
  9745  00F710                     l477:
  9746                           
  9747                           ;interface_main.c: 972: else if (past_run_count == 6){
  9748  00F710  0E06               	movlw	6
  9749  00F712  0102               	movlb	2	; () banked
  9750  00F714  19F1               	xorwf	main@past_run_count& (0+255),w,b
  9751  00F716  11F2               	iorwf	(main@past_run_count+1)& (0+255),w,b
  9752  00F718  A4D8               	btfss	status,2,c
  9753  00F71A  D033               	goto	l479
  9754                           
  9755                           ; BSR set to: 2
  9756                           ;interface_main.c: 973: EEPROM_ind += 24;
  9757  00F71C  0E18               	movlw	24
  9758  00F71E  27F8               	addwf	main@EEPROM_ind& (0+255),f,b
  9759                           
  9760                           ; BSR set to: 2
  9761                           ;interface_main.c: 974: printf("Drawer: %d", read_EEPROM(EEPROM_ind));
  9762  00F720  0E45               	movlw	low STR_64
  9763  00F722  6E0D               	movwf	printf@f,c
  9764  00F724  0EFF               	movlw	high STR_64
  9765  00F726  6E0E               	movwf	printf@f+1,c
  9766  00F728  51F8               	movf	main@EEPROM_ind& (0+255),w,b
  9767  00F72A  EC52  F051         	call	_read_EEPROM
  9768  00F72E  6E57               	movwf	??_main& (0+255),c
  9769  00F730  5057               	movf	??_main,w,c
  9770  00F732  6E0F               	movwf	?_printf+2,c
  9771  00F734  6A10               	clrf	?_printf+3,c
  9772  00F736  EC66  F061         	call	_printf	;wreg free
  9773                           
  9774                           ;interface_main.c: 975: lcdInst(0xC0);;
  9775  00F73A  0EC0               	movlw	192
  9776  00F73C  EC3E  F051         	call	_lcdInst
  9777                           
  9778                           ;interface_main.c: 976: printf("R:%d  F:%d  L:%d", read_EEPROM(EEPROM_ind+1), read_EEPRO
      +                          M(EEPROM_ind+2), read_EEPROM(EEPROM_ind+3));
  9779  00F740  0EAC               	movlw	low STR_65
  9780  00F742  6E0D               	movwf	printf@f,c
  9781  00F744  0EFD               	movlw	high STR_65
  9782  00F746  6E0E               	movwf	printf@f+1,c
  9783  00F748  0102               	movlb	2	; () banked
  9784  00F74A  29F8               	incf	main@EEPROM_ind& (0+255),w,b
  9785  00F74C  EC52  F051         	call	_read_EEPROM
  9786  00F750  6E57               	movwf	??_main& (0+255),c
  9787  00F752  5057               	movf	??_main,w,c
  9788  00F754  6E0F               	movwf	?_printf+2,c
  9789  00F756  6A10               	clrf	?_printf+3,c
  9790  00F758  0102               	movlb	2	; () banked
  9791  00F75A  51F8               	movf	main@EEPROM_ind& (0+255),w,b
  9792  00F75C  0F02               	addlw	2
  9793  00F75E  EC52  F051         	call	_read_EEPROM
  9794  00F762  6E58               	movwf	(??_main+1)& (0+255),c
  9795  00F764  5058               	movf	??_main+1,w,c
  9796  00F766  6E11               	movwf	?_printf+4,c
  9797  00F768  6A12               	clrf	?_printf+5,c
  9798  00F76A  0102               	movlb	2	; () banked
  9799  00F76C  51F8               	movf	main@EEPROM_ind& (0+255),w,b
  9800  00F76E  0F03               	addlw	3
  9801  00F770  EC52  F051         	call	_read_EEPROM
  9802  00F774  6E59               	movwf	(??_main+2)& (0+255),c
  9803  00F776  5059               	movf	??_main+2,w,c
  9804  00F778  6E13               	movwf	?_printf+6,c
  9805  00F77A  6A14               	clrf	?_printf+7,c
  9806  00F77C  EC66  F061         	call	_printf	;wreg free
  9807                           
  9808                           ;interface_main.c: 977: }
  9809  00F780  D0EC               	goto	l491
  9810  00F782                     l479:
  9811                           
  9812                           ;interface_main.c: 979: else if (past_run_count == 7){
  9813  00F782  0E07               	movlw	7
  9814  00F784  0102               	movlb	2	; () banked
  9815  00F786  19F1               	xorwf	main@past_run_count& (0+255),w,b
  9816  00F788  11F2               	iorwf	(main@past_run_count+1)& (0+255),w,b
  9817  00F78A  A4D8               	btfss	status,2,c
  9818  00F78C  D033               	goto	l481
  9819                           
  9820                           ; BSR set to: 2
  9821                           ;interface_main.c: 980: EEPROM_ind += 28;
  9822  00F78E  0E1C               	movlw	28
  9823  00F790  27F8               	addwf	main@EEPROM_ind& (0+255),f,b
  9824                           
  9825                           ; BSR set to: 2
  9826                           ;interface_main.c: 981: printf("Drawer: %d", read_EEPROM(EEPROM_ind));
  9827  00F792  0E45               	movlw	low STR_64
  9828  00F794  6E0D               	movwf	printf@f,c
  9829  00F796  0EFF               	movlw	high STR_64
  9830  00F798  6E0E               	movwf	printf@f+1,c
  9831  00F79A  51F8               	movf	main@EEPROM_ind& (0+255),w,b
  9832  00F79C  EC52  F051         	call	_read_EEPROM
  9833  00F7A0  6E57               	movwf	??_main& (0+255),c
  9834  00F7A2  5057               	movf	??_main,w,c
  9835  00F7A4  6E0F               	movwf	?_printf+2,c
  9836  00F7A6  6A10               	clrf	?_printf+3,c
  9837  00F7A8  EC66  F061         	call	_printf	;wreg free
  9838                           
  9839                           ;interface_main.c: 982: lcdInst(0xC0);;
  9840  00F7AC  0EC0               	movlw	192
  9841  00F7AE  EC3E  F051         	call	_lcdInst
  9842                           
  9843                           ;interface_main.c: 983: printf("R:%d  F:%d  L:%d", read_EEPROM(EEPROM_ind+1), read_EEPRO
      +                          M(EEPROM_ind+2), read_EEPROM(EEPROM_ind+3));
  9844  00F7B2  0EAC               	movlw	low STR_65
  9845  00F7B4  6E0D               	movwf	printf@f,c
  9846  00F7B6  0EFD               	movlw	high STR_65
  9847  00F7B8  6E0E               	movwf	printf@f+1,c
  9848  00F7BA  0102               	movlb	2	; () banked
  9849  00F7BC  29F8               	incf	main@EEPROM_ind& (0+255),w,b
  9850  00F7BE  EC52  F051         	call	_read_EEPROM
  9851  00F7C2  6E57               	movwf	??_main& (0+255),c
  9852  00F7C4  5057               	movf	??_main,w,c
  9853  00F7C6  6E0F               	movwf	?_printf+2,c
  9854  00F7C8  6A10               	clrf	?_printf+3,c
  9855  00F7CA  0102               	movlb	2	; () banked
  9856  00F7CC  51F8               	movf	main@EEPROM_ind& (0+255),w,b
  9857  00F7CE  0F02               	addlw	2
  9858  00F7D0  EC52  F051         	call	_read_EEPROM
  9859  00F7D4  6E58               	movwf	(??_main+1)& (0+255),c
  9860  00F7D6  5058               	movf	??_main+1,w,c
  9861  00F7D8  6E11               	movwf	?_printf+4,c
  9862  00F7DA  6A12               	clrf	?_printf+5,c
  9863  00F7DC  0102               	movlb	2	; () banked
  9864  00F7DE  51F8               	movf	main@EEPROM_ind& (0+255),w,b
  9865  00F7E0  0F03               	addlw	3
  9866  00F7E2  EC52  F051         	call	_read_EEPROM
  9867  00F7E6  6E59               	movwf	(??_main+2)& (0+255),c
  9868  00F7E8  5059               	movf	??_main+2,w,c
  9869  00F7EA  6E13               	movwf	?_printf+6,c
  9870  00F7EC  6A14               	clrf	?_printf+7,c
  9871  00F7EE  EC66  F061         	call	_printf	;wreg free
  9872                           
  9873                           ;interface_main.c: 984: }
  9874  00F7F2  D0B3               	goto	l491
  9875  00F7F4                     l481:
  9876                           
  9877                           ;interface_main.c: 986: else if (past_run_count == 8){
  9878  00F7F4  0E08               	movlw	8
  9879  00F7F6  0102               	movlb	2	; () banked
  9880  00F7F8  19F1               	xorwf	main@past_run_count& (0+255),w,b
  9881  00F7FA  11F2               	iorwf	(main@past_run_count+1)& (0+255),w,b
  9882  00F7FC  A4D8               	btfss	status,2,c
  9883  00F7FE  D039               	goto	l483
  9884                           
  9885                           ; BSR set to: 2
  9886                           ;interface_main.c: 987: EEPROM_ind += 32;
  9887  00F800  0E20               	movlw	32
  9888  00F802  27F8               	addwf	main@EEPROM_ind& (0+255),f,b
  9889                           
  9890                           ; BSR set to: 2
  9891                           ;interface_main.c: 988: for(i = 0; i < 4; i++){
  9892  00F804  0E00               	movlw	0
  9893  00F806  6FFD               	movwf	(main@i+1)& (0+255),b
  9894  00F808  0E00               	movlw	0
  9895  00F80A  6FFC               	movwf	main@i& (0+255),b
  9896  00F80C                     l8398:
  9897                           
  9898                           ; BSR set to: 2
  9899  00F80C  BFFD               	btfsc	(main@i+1)& (0+255),7,b
  9900  00F80E  D006               	goto	l484
  9901  00F810  51FD               	movf	(main@i+1)& (0+255),w,b
  9902  00F812  E113               	bnz	l8408
  9903  00F814  0E04               	movlw	4
  9904  00F816  5DFC               	subwf	main@i& (0+255),w,b
  9905  00F818  B0D8               	btfsc	status,0,c
  9906  00F81A  D00F               	goto	u8430
  9907  00F81C                     l484:
  9908                           
  9909                           ; BSR set to: 2
  9910                           ;interface_main.c: 989: EEPROM_print[i] = read_EEPROM(i + EEPROM_ind);}
  9911                           
  9912                           ; BSR set to: 2
  9913  00F81C  0ED8               	movlw	low main@EEPROM_print
  9914  00F81E  25FC               	addwf	main@i& (0+255),w,b
  9915  00F820  6ED9               	movwf	fsr2l,c
  9916  00F822  0E01               	movlw	high main@EEPROM_print
  9917  00F824  21FD               	addwfc	(main@i+1)& (0+255),w,b
  9918  00F826  6EDA               	movwf	fsr2h,c
  9919  00F828  51F8               	movf	main@EEPROM_ind& (0+255),w,b
  9920  00F82A  25FC               	addwf	main@i& (0+255),w,b
  9921  00F82C  EC52  F051         	call	_read_EEPROM
  9922  00F830  6EDF               	movwf	indf2,c
  9923  00F832  0102               	movlb	2	; () banked
  9924  00F834  4BFC               	infsnz	main@i& (0+255),f,b
  9925  00F836  2BFD               	incf	(main@i+1)& (0+255),f,b
  9926  00F838  D7E9               	goto	l8398
  9927  00F83A                     u8430:
  9928  00F83A                     l8408:
  9929                           
  9930                           ; BSR set to: 2
  9931                           ;interface_main.c: 990: printf("Marked Drawers:");
  9932  00F83A  0EDD               	movlw	low STR_80
  9933  00F83C  6E0D               	movwf	printf@f,c
  9934  00F83E  0EFD               	movlw	high STR_80
  9935  00F840  6E0E               	movwf	printf@f+1,c
  9936  00F842  EC66  F061         	call	_printf	;wreg free
  9937                           
  9938                           ;interface_main.c: 991: lcdInst(0xC0);;
  9939  00F846  0EC0               	movlw	192
  9940  00F848  EC3E  F051         	call	_lcdInst
  9941                           
  9942                           ;interface_main.c: 992: printf("D%d, D%d, D%d, D%d", EEPROM_print[0], EEPROM_print[1], E
      +                          EPROM_print[2], EEPROM_print[3]);
  9943  00F84C  0E22               	movlw	low STR_81
  9944  00F84E  6E0D               	movwf	printf@f,c
  9945  00F850  0EFD               	movlw	high STR_81
  9946  00F852  6E0E               	movwf	printf@f+1,c
  9947  00F854  C1D8  F00F         	movff	main@EEPROM_print,?_printf+2
  9948  00F858  6A10               	clrf	?_printf+3,c
  9949  00F85A  C1D9  F011         	movff	main@EEPROM_print+1,?_printf+4
  9950  00F85E  6A12               	clrf	?_printf+5,c
  9951  00F860  C1DA  F013         	movff	main@EEPROM_print+2,?_printf+6
  9952  00F864  6A14               	clrf	?_printf+7,c
  9953  00F866  C1DB  F015         	movff	main@EEPROM_print+3,?_printf+8
  9954  00F86A  6A16               	clrf	?_printf+9,c
  9955  00F86C  EC66  F061         	call	_printf	;wreg free
  9956                           
  9957                           ;interface_main.c: 993: }
  9958  00F870  D074               	goto	l491
  9959  00F872                     l483:
  9960                           
  9961                           ;interface_main.c: 995: else if (past_run_count == 9){
  9962  00F872  0E09               	movlw	9
  9963  00F874  0102               	movlb	2	; () banked
  9964  00F876  19F1               	xorwf	main@past_run_count& (0+255),w,b
  9965  00F878  11F2               	iorwf	(main@past_run_count+1)& (0+255),w,b
  9966  00F87A  A4D8               	btfss	status,2,c
  9967  00F87C  D033               	goto	l487
  9968                           
  9969                           ; BSR set to: 2
  9970                           ;interface_main.c: 996: EEPROM_ind += 36;
  9971  00F87E  0E24               	movlw	36
  9972  00F880  27F8               	addwf	main@EEPROM_ind& (0+255),f,b
  9973                           
  9974                           ; BSR set to: 2
  9975                           ;interface_main.c: 997: for(i = 0; i < 2; i++){
  9976  00F882  0E00               	movlw	0
  9977  00F884  6FFD               	movwf	(main@i+1)& (0+255),b
  9978  00F886  0E00               	movlw	0
  9979  00F888  6FFC               	movwf	main@i& (0+255),b
  9980  00F88A                     l8420:
  9981                           
  9982                           ; BSR set to: 2
  9983  00F88A  BFFD               	btfsc	(main@i+1)& (0+255),7,b
  9984  00F88C  D006               	goto	l488
  9985  00F88E  51FD               	movf	(main@i+1)& (0+255),w,b
  9986  00F890  E113               	bnz	l8430
  9987  00F892  0E02               	movlw	2
  9988  00F894  5DFC               	subwf	main@i& (0+255),w,b
  9989  00F896  B0D8               	btfsc	status,0,c
  9990  00F898  D00F               	goto	u8460
  9991  00F89A                     l488:
  9992                           
  9993                           ; BSR set to: 2
  9994                           ;interface_main.c: 998: EEPROM_print[i] = read_EEPROM(i + EEPROM_ind);}
  9995                           
  9996                           ; BSR set to: 2
  9997  00F89A  0ED8               	movlw	low main@EEPROM_print
  9998  00F89C  25FC               	addwf	main@i& (0+255),w,b
  9999  00F89E  6ED9               	movwf	fsr2l,c
 10000  00F8A0  0E01               	movlw	high main@EEPROM_print
 10001  00F8A2  21FD               	addwfc	(main@i+1)& (0+255),w,b
 10002  00F8A4  6EDA               	movwf	fsr2h,c
 10003  00F8A6  51F8               	movf	main@EEPROM_ind& (0+255),w,b
 10004  00F8A8  25FC               	addwf	main@i& (0+255),w,b
 10005  00F8AA  EC52  F051         	call	_read_EEPROM
 10006  00F8AE  6EDF               	movwf	indf2,c
 10007  00F8B0  0102               	movlb	2	; () banked
 10008  00F8B2  4BFC               	infsnz	main@i& (0+255),f,b
 10009  00F8B4  2BFD               	incf	(main@i+1)& (0+255),f,b
 10010  00F8B6  D7E9               	goto	l8420
 10011  00F8B8                     u8460:
 10012  00F8B8                     l8430:
 10013                           
 10014                           ; BSR set to: 2
 10015                           ;interface_main.c: 999: printf("Run Time");
 10016  00F8B8  0E94               	movlw	low STR_82
 10017  00F8BA  6E0D               	movwf	printf@f,c
 10018  00F8BC  0EFF               	movlw	high STR_82
 10019  00F8BE  6E0E               	movwf	printf@f+1,c
 10020  00F8C0  EC66  F061         	call	_printf	;wreg free
 10021                           
 10022                           ;interface_main.c: 1000: lcdInst(0xC0);;
 10023  00F8C4  0EC0               	movlw	192
 10024  00F8C6  EC3E  F051         	call	_lcdInst
 10025                           
 10026                           ;interface_main.c: 1001: printf("Min:Sec = %d:%d", EEPROM_print[1], EEPROM_print[0]);
 10027  00F8CA  0EFD               	movlw	low STR_83
 10028  00F8CC  6E0D               	movwf	printf@f,c
 10029  00F8CE  0EFD               	movlw	high STR_83
 10030  00F8D0  6E0E               	movwf	printf@f+1,c
 10031  00F8D2  C1D9  F00F         	movff	main@EEPROM_print+1,?_printf+2
 10032  00F8D6  6A10               	clrf	?_printf+3,c
 10033  00F8D8  C1D8  F011         	movff	main@EEPROM_print,?_printf+4
 10034  00F8DC  6A12               	clrf	?_printf+5,c
 10035  00F8DE  EC66  F061         	call	_printf	;wreg free
 10036                           
 10037                           ;interface_main.c: 1002: }
 10038  00F8E2  D03B               	goto	l491
 10039  00F8E4                     l487:
 10040                           
 10041                           ;interface_main.c: 1004: else if (past_run_count == 10){
 10042  00F8E4  0E0A               	movlw	10
 10043  00F8E6  0102               	movlb	2	; () banked
 10044  00F8E8  19F1               	xorwf	main@past_run_count& (0+255),w,b
 10045  00F8EA  11F2               	iorwf	(main@past_run_count+1)& (0+255),w,b
 10046  00F8EC  A4D8               	btfss	status,2,c
 10047  00F8EE  D035               	goto	l491
 10048                           
 10049                           ; BSR set to: 2
 10050                           ;interface_main.c: 1005: EEPROM_ind += 38;
 10051  00F8F0  0E26               	movlw	38
 10052  00F8F2  27F8               	addwf	main@EEPROM_ind& (0+255),f,b
 10053                           
 10054                           ; BSR set to: 2
 10055                           ;interface_main.c: 1006: for(i = 0; i < 3; i++){
 10056  00F8F4  0E00               	movlw	0
 10057  00F8F6  6FFD               	movwf	(main@i+1)& (0+255),b
 10058  00F8F8  0E00               	movlw	0
 10059  00F8FA  6FFC               	movwf	main@i& (0+255),b
 10060  00F8FC                     l8442:
 10061                           
 10062                           ; BSR set to: 2
 10063  00F8FC  BFFD               	btfsc	(main@i+1)& (0+255),7,b
 10064  00F8FE  D006               	goto	l492
 10065  00F900  51FD               	movf	(main@i+1)& (0+255),w,b
 10066  00F902  E113               	bnz	l8452
 10067  00F904  0E03               	movlw	3
 10068  00F906  5DFC               	subwf	main@i& (0+255),w,b
 10069  00F908  B0D8               	btfsc	status,0,c
 10070  00F90A  D00F               	goto	u8490
 10071  00F90C                     l492:
 10072                           
 10073                           ; BSR set to: 2
 10074                           ;interface_main.c: 1007: EEPROM_print[i] = read_EEPROM(i + EEPROM_ind);}
 10075                           
 10076                           ; BSR set to: 2
 10077  00F90C  0ED8               	movlw	low main@EEPROM_print
 10078  00F90E  25FC               	addwf	main@i& (0+255),w,b
 10079  00F910  6ED9               	movwf	fsr2l,c
 10080  00F912  0E01               	movlw	high main@EEPROM_print
 10081  00F914  21FD               	addwfc	(main@i+1)& (0+255),w,b
 10082  00F916  6EDA               	movwf	fsr2h,c
 10083  00F918  51F8               	movf	main@EEPROM_ind& (0+255),w,b
 10084  00F91A  25FC               	addwf	main@i& (0+255),w,b
 10085  00F91C  EC52  F051         	call	_read_EEPROM
 10086  00F920  6EDF               	movwf	indf2,c
 10087  00F922  0102               	movlb	2	; () banked
 10088  00F924  4BFC               	infsnz	main@i& (0+255),f,b
 10089  00F926  2BFD               	incf	(main@i+1)& (0+255),f,b
 10090  00F928  D7E9               	goto	l8442
 10091  00F92A                     u8490:
 10092  00F92A                     l8452:
 10093                           
 10094                           ; BSR set to: 2
 10095                           ;interface_main.c: 1008: printf("Reservoir Count");
 10096  00F92A  0E2D               	movlw	low STR_84
 10097  00F92C  6E0D               	movwf	printf@f,c
 10098  00F92E  0EFE               	movlw	high STR_84
 10099  00F930  6E0E               	movwf	printf@f+1,c
 10100  00F932  EC66  F061         	call	_printf	;wreg free
 10101                           
 10102                           ;interface_main.c: 1009: lcdInst(0xC0);;
 10103  00F936  0EC0               	movlw	192
 10104  00F938  EC3E  F051         	call	_lcdInst
 10105                           
 10106                           ;interface_main.c: 1010: printf("R %d F %d  L %d", EEPROM_print[0],EEPROM_print[1], EEPR
      +                          OM_print[2]);
 10107  00F93C  0EED               	movlw	low STR_85
 10108  00F93E  6E0D               	movwf	printf@f,c
 10109  00F940  0EFD               	movlw	high STR_85
 10110  00F942  6E0E               	movwf	printf@f+1,c
 10111  00F944  C1D8  F00F         	movff	main@EEPROM_print,?_printf+2
 10112  00F948  6A10               	clrf	?_printf+3,c
 10113  00F94A  C1D9  F011         	movff	main@EEPROM_print+1,?_printf+4
 10114  00F94E  6A12               	clrf	?_printf+5,c
 10115  00F950  C1DA  F013         	movff	main@EEPROM_print+2,?_printf+6
 10116  00F954  6A14               	clrf	?_printf+7,c
 10117  00F956  EC66  F061         	call	_printf	;wreg free
 10118  00F95A                     l491:
 10119                           
 10120                           ;interface_main.c: 1011: }
 10121                           ;interface_main.c: 1012: past_run_count += 1;
 10122  00F95A  0102               	movlb	2	; () banked
 10123  00F95C  4BF1               	infsnz	main@past_run_count& (0+255),f,b
 10124  00F95E  2BF2               	incf	(main@past_run_count+1)& (0+255),f,b
 10125                           
 10126                           ;interface_main.c: 1013: }
 10127  00F960  D02B               	goto	l497
 10128  00F962                     l466:
 10129                           
 10130                           ; BSR set to: 2
 10131                           ;interface_main.c: 1015: else if (temp == 'B'){
 10132                           
 10133                           ; BSR set to: 2
 10134  00F962  0E42               	movlw	66
 10135  00F964  19FB               	xorwf	main@temp& (0+255),w,b
 10136  00F966  B4D8               	btfsc	status,2,c
 10137  00F968  D439               	goto	u8240
 10138                           
 10139                           ; BSR set to: 2
 10140                           ;interface_main.c: 1019: else{
 10141                           ;interface_main.c: 1020: lcdInst(0x01);_delay((unsigned long)((15)*(40000000/4000.0)));;
 10142                           
 10143                           ; BSR set to: 2
 10144                           
 10145                           ; BSR set to: 2
 10146                           ;interface_main.c: 1017: }
 10147                           
 10148                           ; BSR set to: 2
 10149                           ;interface_main.c: 1016: break;
 10150  00F96A  0E01               	movlw	1
 10151  00F96C  EC3E  F051         	call	_lcdInst
 10152  00F970  0EC3               	movlw	195
 10153  00F972  6E57               	movwf	??_main& (0+255),c
 10154  00F974  0ECD               	movlw	205
 10155  00F976                     u9907:
 10156  00F976  2EE8               	decfsz	wreg,f,c
 10157  00F978  D7FE               	bra	u9907
 10158  00F97A  2E57               	decfsz	??_main& (0+255),f,c
 10159  00F97C  D7FC               	bra	u9907
 10160  00F97E  F000               	nop	
 10161                           
 10162                           ;interface_main.c: 1021: lcdInst(0x80);_delay((unsigned long)((5)*(40000000/4000.0)));;
 10163  00F980  0E80               	movlw	128
 10164  00F982  EC3E  F051         	call	_lcdInst
 10165  00F986  0E41               	movlw	65
 10166  00F988  6E57               	movwf	??_main& (0+255),c
 10167  00F98A  0EEE               	movlw	238
 10168  00F98C                     u9917:
 10169  00F98C  2EE8               	decfsz	wreg,f,c
 10170  00F98E  D7FE               	bra	u9917
 10171  00F990  2E57               	decfsz	??_main& (0+255),f,c
 10172  00F992  D7FC               	bra	u9917
 10173  00F994  D000               	nop2	
 10174                           
 10175                           ;interface_main.c: 1022: printf("Invalid Input");
 10176  00F996  0EC1               	movlw	low STR_10
 10177  00F998  6E0D               	movwf	printf@f,c
 10178  00F99A  0EFE               	movlw	high STR_10
 10179  00F99C  6E0E               	movwf	printf@f+1,c
 10180  00F99E  EC66  F061         	call	_printf	;wreg free
 10181                           
 10182                           ;interface_main.c: 1023: _delay((unsigned long)((1000)*(40000000/4000.0)));
 10183  00F9A2  0E33               	movlw	51
 10184  00F9A4  6E58               	movwf	(??_main+1)& (0+255),c
 10185  00F9A6  0EBB               	movlw	187
 10186  00F9A8  6E57               	movwf	??_main& (0+255),c
 10187  00F9AA  0EE0               	movlw	224
 10188  00F9AC                     u9927:
 10189  00F9AC  2EE8               	decfsz	wreg,f,c
 10190  00F9AE  D7FE               	bra	u9927
 10191  00F9B0  2E57               	decfsz	??_main& (0+255),f,c
 10192  00F9B2  D7FC               	bra	u9927
 10193  00F9B4  2E58               	decfsz	(??_main+1)& (0+255),f,c
 10194  00F9B6  D7FA               	bra	u9927
 10195  00F9B8                     l497:
 10196  00F9B8  0102               	movlb	2	; () banked
 10197  00F9BA  BFF2               	btfsc	(main@past_run_count+1)& (0+255),7,b
 10198  00F9BC  D522               	goto	l459
 10199  00F9BE  51F2               	movf	(main@past_run_count+1)& (0+255),w,b
 10200  00F9C0  E105               	bnz	u8510
 10201  00F9C2  0E0C               	movlw	12
 10202  00F9C4  5DF1               	subwf	main@past_run_count& (0+255),w,b
 10203  00F9C6  B0D8               	btfsc	status,0,c
 10204  00F9C8  D409               	goto	u8240
 10205  00F9CA  D51B               	goto	l459
 10206  00F9CC                     u8510:
 10207                           
 10208                           ; BSR set to: 2
 10209                           
 10210                           ; BSR set to: 2
 10211  00F9CC  D407               	goto	u8240
 10212  00F9CE                     l447:
 10213                           
 10214                           ; BSR set to: 2
 10215                           ;interface_main.c: 1033: else if (temp == 'D'){
 10216                           
 10217                           ; BSR set to: 2
 10218  00F9CE  0E44               	movlw	68
 10219  00F9D0  19FB               	xorwf	main@temp& (0+255),w,b
 10220  00F9D2  A4D8               	btfss	status,2,c
 10221  00F9D4  D0A6               	goto	l501
 10222                           
 10223                           ; BSR set to: 2
 10224                           ;interface_main.c: 1034: lcdInst(0x01);_delay((unsigned long)((15)*(40000000/4000.0)));;
 10225  00F9D6  0E01               	movlw	1
 10226  00F9D8  EC3E  F051         	call	_lcdInst
 10227  00F9DC  0EC3               	movlw	195
 10228  00F9DE  6E57               	movwf	??_main& (0+255),c
 10229  00F9E0  0ECD               	movlw	205
 10230  00F9E2                     u9937:
 10231  00F9E2  2EE8               	decfsz	wreg,f,c
 10232  00F9E4  D7FE               	bra	u9937
 10233  00F9E6  2E57               	decfsz	??_main& (0+255),f,c
 10234  00F9E8  D7FC               	bra	u9937
 10235  00F9EA  F000               	nop	
 10236                           
 10237                           ;interface_main.c: 1035: lcdInst(0x80);_delay((unsigned long)((5)*(40000000/4000.0)));;
 10238  00F9EC  0E80               	movlw	128
 10239  00F9EE  EC3E  F051         	call	_lcdInst
 10240  00F9F2  0E41               	movlw	65
 10241  00F9F4  6E57               	movwf	??_main& (0+255),c
 10242  00F9F6  0EEE               	movlw	238
 10243  00F9F8                     u9947:
 10244  00F9F8  2EE8               	decfsz	wreg,f,c
 10245  00F9FA  D7FE               	bra	u9947
 10246  00F9FC  2E57               	decfsz	??_main& (0+255),f,c
 10247  00F9FE  D7FC               	bra	u9947
 10248  00FA00  D000               	nop2	
 10249                           
 10250                           ;interface_main.c: 1036: timer_count = 0;
 10251  00FA02  0E00               	movlw	0
 10252  00FA04  0101               	movlb	1	; () banked
 10253  00FA06  6FE9               	movwf	(main@timer_count+1)& (0+255),b
 10254  00FA08  0E00               	movlw	0
 10255  00FA0A  6FE8               	movwf	main@timer_count& (0+255),b
 10256                           
 10257                           ;interface_main.c: 1037: while(timer_count <= 10){
 10258  00FA0C  D07E               	goto	l502
 10259  00FA0E                     
 10260                           ; BSR set to: 1
 10261                           ;interface_main.c: 1039: I2C_Master_Init(100000);
 10262                           
 10263                           ; BSR set to: 1
 10264  00FA0E  0EA0               	movlw	160
 10265  00FA10  6E0E               	movwf	I2C_Master_Init@clockFreq,c
 10266  00FA12  0E86               	movlw	134
 10267  00FA14  6E0F               	movwf	I2C_Master_Init@clockFreq+1,c
 10268  00FA16  0E01               	movlw	1
 10269  00FA18  6E10               	movwf	I2C_Master_Init@clockFreq+2,c
 10270  00FA1A  0E00               	movlw	0
 10271  00FA1C  6E11               	movwf	I2C_Master_Init@clockFreq+3,c
 10272  00FA1E  ECA8  F052         	call	_I2C_Master_Init	;wreg free
 10273                           
 10274                           ;interface_main.c: 1040: I2C_Master_Start();
 10275  00FA22  EC28  F051         	call	_I2C_Master_Start	;wreg free
 10276                           
 10277                           ;interface_main.c: 1041: I2C_Master_Write(0b11010000);
 10278  00FA26  0E00               	movlw	0
 10279  00FA28  6E03               	movwf	I2C_Master_Write@byteToWrite+1,c
 10280  00FA2A  0ED0               	movlw	208
 10281  00FA2C  6E02               	movwf	I2C_Master_Write@byteToWrite,c
 10282  00FA2E  EC30  F051         	call	_I2C_Master_Write	;wreg free
 10283                           
 10284                           ;interface_main.c: 1042: I2C_Master_Write(0x00);
 10285  00FA32  0E00               	movlw	0
 10286  00FA34  6E03               	movwf	I2C_Master_Write@byteToWrite+1,c
 10287  00FA36  0E00               	movlw	0
 10288  00FA38  6E02               	movwf	I2C_Master_Write@byteToWrite,c
 10289  00FA3A  EC30  F051         	call	_I2C_Master_Write	;wreg free
 10290                           
 10291                           ;interface_main.c: 1043: I2C_Master_Stop();
 10292  00FA3E  EC2C  F051         	call	_I2C_Master_Stop	;wreg free
 10293                           
 10294                           ;interface_main.c: 1046: I2C_Master_Start();
 10295  00FA42  EC28  F051         	call	_I2C_Master_Start	;wreg free
 10296                           
 10297                           ;interface_main.c: 1047: I2C_Master_Write(0b11010001);
 10298  00FA46  0E00               	movlw	0
 10299  00FA48  6E03               	movwf	I2C_Master_Write@byteToWrite+1,c
 10300  00FA4A  0ED1               	movlw	209
 10301  00FA4C  6E02               	movwf	I2C_Master_Write@byteToWrite,c
 10302  00FA4E  EC30  F051         	call	_I2C_Master_Write	;wreg free
 10303                           
 10304                           ;interface_main.c: 1048: for(i = 0; i < 6; i++){
 10305  00FA52  0E00               	movlw	0
 10306  00FA54  0102               	movlb	2	; () banked
 10307  00FA56  6FFD               	movwf	(main@i+1)& (0+255),b
 10308  00FA58  0E00               	movlw	0
 10309  00FA5A  6FFC               	movwf	main@i& (0+255),b
 10310  00FA5C                     l8494:
 10311                           
 10312                           ; BSR set to: 2
 10313  00FA5C  BFFD               	btfsc	(main@i+1)& (0+255),7,b
 10314  00FA5E  D006               	goto	l504
 10315  00FA60  51FD               	movf	(main@i+1)& (0+255),w,b
 10316  00FA62  E112               	bnz	l8504
 10317  00FA64  0E06               	movlw	6
 10318  00FA66  5DFC               	subwf	main@i& (0+255),w,b
 10319  00FA68  B0D8               	btfsc	status,0,c
 10320  00FA6A  D00E               	goto	u8540
 10321  00FA6C                     l504:
 10322                           
 10323                           ; BSR set to: 2
 10324                           ;interface_main.c: 1049: time[i] = I2C_Master_Read(0);
 10325                           
 10326                           ; BSR set to: 2
 10327  00FA6C  0EB7               	movlw	low _time
 10328  00FA6E  25FC               	addwf	main@i& (0+255),w,b
 10329  00FA70  6ED9               	movwf	fsr2l,c
 10330  00FA72  0E02               	movlw	high _time
 10331  00FA74  21FD               	addwfc	(main@i+1)& (0+255),w,b
 10332  00FA76  6EDA               	movwf	fsr2h,c
 10333  00FA78  0E00               	movlw	0
 10334  00FA7A  ECA5  F051         	call	_I2C_Master_Read
 10335  00FA7E  6EDF               	movwf	indf2,c
 10336  00FA80  0102               	movlb	2	; () banked
 10337  00FA82  4BFC               	infsnz	main@i& (0+255),f,b
 10338  00FA84  2BFD               	incf	(main@i+1)& (0+255),f,b
 10339  00FA86  D7EA               	goto	l8494
 10340  00FA88                     u8540:
 10341  00FA88                     l8504:
 10342                           
 10343                           ; BSR set to: 2
 10344                           ;interface_main.c: 1050: }
 10345                           ;interface_main.c: 1051: time[6] = I2C_Master_Read(1);
 10346  00FA88  0E01               	movlw	1
 10347  00FA8A  ECA5  F051         	call	_I2C_Master_Read
 10348  00FA8E  0102               	movlb	2	; () banked
 10349  00FA90  6FBD               	movwf	(_time+6)& (0+255),b
 10350                           
 10351                           ;interface_main.c: 1052: I2C_Master_Stop();
 10352  00FA92  EC2C  F051         	call	_I2C_Master_Stop	;wreg free
 10353                           
 10354                           ;interface_main.c: 1055: lcdInst(0x80);_delay((unsigned long)((5)*(40000000/4000.0)));;
 10355  00FA96  0E80               	movlw	128
 10356  00FA98  EC3E  F051         	call	_lcdInst
 10357  00FA9C  0E41               	movlw	65
 10358  00FA9E  6E57               	movwf	??_main& (0+255),c
 10359  00FAA0  0EEE               	movlw	238
 10360  00FAA2                     u9957:
 10361  00FAA2  2EE8               	decfsz	wreg,f,c
 10362  00FAA4  D7FE               	bra	u9957
 10363  00FAA6  2E57               	decfsz	??_main& (0+255),f,c
 10364  00FAA8  D7FC               	bra	u9957
 10365  00FAAA  D000               	nop2	
 10366                           
 10367                           ;interface_main.c: 1056: printf("Date %02x/%02x/%02x", time[6],time[5],time[4]);
 10368  00FAAC  0EFA               	movlw	low STR_87
 10369  00FAAE  6E0D               	movwf	printf@f,c
 10370  00FAB0  0EFC               	movlw	high STR_87
 10371  00FAB2  6E0E               	movwf	printf@f+1,c
 10372  00FAB4  C2BD  F00F         	movff	_time+6,?_printf+2
 10373  00FAB8  6A10               	clrf	?_printf+3,c
 10374  00FABA  C2BC  F011         	movff	_time+5,?_printf+4
 10375  00FABE  6A12               	clrf	?_printf+5,c
 10376  00FAC0  C2BB  F013         	movff	_time+4,?_printf+6
 10377  00FAC4  6A14               	clrf	?_printf+7,c
 10378  00FAC6  EC66  F061         	call	_printf	;wreg free
 10379                           
 10380                           ;interface_main.c: 1057: lcdInst(0xC0);;
 10381  00FACA  0EC0               	movlw	192
 10382  00FACC  EC3E  F051         	call	_lcdInst
 10383                           
 10384                           ;interface_main.c: 1058: printf("Time %02x:%02x:%02x", time[2],time[1],time[0]);
 10385  00FAD0  0E0E               	movlw	low STR_88
 10386  00FAD2  6E0D               	movwf	printf@f,c
 10387  00FAD4  0EFD               	movlw	high STR_88
 10388  00FAD6  6E0E               	movwf	printf@f+1,c
 10389  00FAD8  C2B9  F00F         	movff	_time+2,?_printf+2
 10390  00FADC  6A10               	clrf	?_printf+3,c
 10391  00FADE  C2B8  F011         	movff	_time+1,?_printf+4
 10392  00FAE2  6A12               	clrf	?_printf+5,c
 10393  00FAE4  C2B7  F013         	movff	_time,?_printf+6
 10394  00FAE8  6A14               	clrf	?_printf+7,c
 10395  00FAEA  EC66  F061         	call	_printf	;wreg free
 10396                           
 10397                           ;interface_main.c: 1059: _delay((unsigned long)((1000)*(40000000/4000.0)));
 10398  00FAEE  0E33               	movlw	51
 10399  00FAF0  6E58               	movwf	(??_main+1)& (0+255),c
 10400  00FAF2  0EBB               	movlw	187
 10401  00FAF4  6E57               	movwf	??_main& (0+255),c
 10402  00FAF6  0EE0               	movlw	224
 10403  00FAF8                     u9967:
 10404  00FAF8  2EE8               	decfsz	wreg,f,c
 10405  00FAFA  D7FE               	bra	u9967
 10406  00FAFC  2E57               	decfsz	??_main& (0+255),f,c
 10407  00FAFE  D7FC               	bra	u9967
 10408  00FB00  2E58               	decfsz	(??_main+1)& (0+255),f,c
 10409  00FB02  D7FA               	bra	u9967
 10410                           
 10411                           ;interface_main.c: 1060: timer_count++;
 10412  00FB04  0101               	movlb	1	; () banked
 10413  00FB06  4BE8               	infsnz	main@timer_count& (0+255),f,b
 10414  00FB08  2BE9               	incf	(main@timer_count+1)& (0+255),f,b
 10415  00FB0A                     l502:
 10416                           
 10417                           ; BSR set to: 1
 10418  00FB0A  BFE9               	btfsc	(main@timer_count+1)& (0+255),7,b
 10419  00FB0C  D780               	goto	l503
 10420  00FB0E  51E9               	movf	(main@timer_count+1)& (0+255),w,b
 10421  00FB10  E106               	bnz	u8550
 10422  00FB12  0E0B               	movlw	11
 10423  00FB14  5DE8               	subwf	main@timer_count& (0+255),w,b
 10424  00FB16  B0D8               	btfsc	status,0,c
 10425  00FB18  EF9D  F078         	goto	u8210
 10426  00FB1C  D778               	goto	l503
 10427  00FB1E                     u8550:
 10428                           
 10429                           ; BSR set to: 1
 10430                           ;interface_main.c: 1061: }
 10431                           ;interface_main.c: 1062: }
 10432  00FB1E  EF9D  F078         	goto	u8210
 10433  00FB22                     l501:
 10434                           
 10435                           ;interface_main.c: 1065: else if (temp == 'B'){
 10436                           
 10437                           ; BSR set to: 1
 10438  00FB22  0E42               	movlw	66
 10439  00FB24  0102               	movlb	2	; () banked
 10440  00FB26  19FB               	xorwf	main@temp& (0+255),w,b
 10441  00FB28  B4D8               	btfsc	status,2,c
 10442  00FB2A  EFB9  F069         	goto	l215
 10443                           
 10444                           ; BSR set to: 2
 10445                           ;interface_main.c: 1068: else{
 10446                           ;interface_main.c: 1069: lcdInst(0x01);_delay((unsigned long)((15)*(40000000/4000.0)));;
 10447                           
 10448                           ; BSR set to: 2
 10449                           
 10450                           ; BSR set to: 2
 10451                           
 10452                           ; BSR set to: 2
 10453                           ;interface_main.c: 1066: break;}
 10454  00FB2E  0E01               	movlw	1
 10455  00FB30  EC3E  F051         	call	_lcdInst
 10456  00FB34  0EC3               	movlw	195
 10457  00FB36  6E57               	movwf	??_main& (0+255),c
 10458  00FB38  0ECD               	movlw	205
 10459  00FB3A                     u9977:
 10460  00FB3A  2EE8               	decfsz	wreg,f,c
 10461  00FB3C  D7FE               	bra	u9977
 10462  00FB3E  2E57               	decfsz	??_main& (0+255),f,c
 10463  00FB40  D7FC               	bra	u9977
 10464  00FB42  F000               	nop	
 10465                           
 10466                           ;interface_main.c: 1070: lcdInst(0x80);_delay((unsigned long)((5)*(40000000/4000.0)));;
 10467  00FB44  0E80               	movlw	128
 10468  00FB46  EC3E  F051         	call	_lcdInst
 10469  00FB4A  0E41               	movlw	65
 10470  00FB4C  6E57               	movwf	??_main& (0+255),c
 10471  00FB4E  0EEE               	movlw	238
 10472  00FB50                     u9987:
 10473  00FB50  2EE8               	decfsz	wreg,f,c
 10474  00FB52  D7FE               	bra	u9987
 10475  00FB54  2E57               	decfsz	??_main& (0+255),f,c
 10476  00FB56  D7FC               	bra	u9987
 10477  00FB58  D000               	nop2	
 10478                           
 10479                           ;interface_main.c: 1071: printf("Invalid Input");
 10480  00FB5A  0EC1               	movlw	low STR_10
 10481  00FB5C  6E0D               	movwf	printf@f,c
 10482  00FB5E  0EFE               	movlw	high STR_10
 10483  00FB60  6E0E               	movwf	printf@f+1,c
 10484  00FB62  EC66  F061         	call	_printf	;wreg free
 10485                           
 10486                           ;interface_main.c: 1072: _delay((unsigned long)((1500)*(40000000/4000.0)));
 10487  00FB66  0E4D               	movlw	77
 10488  00FB68  6E58               	movwf	(??_main+1)& (0+255),c
 10489  00FB6A  0E19               	movlw	25
 10490  00FB6C  6E57               	movwf	??_main& (0+255),c
 10491  00FB6E  0E50               	movlw	80
 10492  00FB70                     u9997:
 10493  00FB70  2EE8               	decfsz	wreg,f,c
 10494  00FB72  D7FE               	bra	u9997
 10495  00FB74  2E57               	decfsz	??_main& (0+255),f,c
 10496  00FB76  D7FC               	bra	u9997
 10497  00FB78  2E58               	decfsz	(??_main+1)& (0+255),f,c
 10498  00FB7A  D7FA               	bra	u9997
 10499                           
 10500                           ;interface_main.c: 1073: continue;
 10501  00FB7C  EF9D  F078         	goto	u8210
 10502  00FB80                     __end_of_main:
 10503                           	opt stack 0
 10504                           tblptru	equ	0xFF8
 10505                           tblptrh	equ	0xFF7
 10506                           tblptrl	equ	0xFF6
 10507                           tablat	equ	0xFF5
 10508                           prodh	equ	0xFF4
 10509                           prodl	equ	0xFF3
 10510                           intcon	equ	0xFF2
 10511                           postinc0	equ	0xFEE
 10512                           wreg	equ	0xFE8
 10513                           postinc1	equ	0xFE6
 10514                           postdec1	equ	0xFE5
 10515                           plusw1	equ	0xFE3
 10516                           fsr1h	equ	0xFE2
 10517                           fsr1l	equ	0xFE1
 10518                           indf2	equ	0xFDF
 10519                           postinc2	equ	0xFDE
 10520                           postdec2	equ	0xFDD
 10521                           plusw2	equ	0xFDB
 10522                           fsr2h	equ	0xFDA
 10523                           fsr2l	equ	0xFD9
 10524                           status	equ	0xFD8
 10525                           
 10526 ;; *************** function _store_EEPROM *****************
 10527 ;; Defined at:
 10528 ;;		line 57 in file "EEPROM_storage.c"
 10529 ;; Parameters:    Size  Location     Type
 10530 ;;		None
 10531 ;; Auto vars:     Size  Location     Type
 10532 ;;  i               2    8[COMRAM] short 
 10533 ;;  j               2    6[COMRAM] short 
 10534 ;; Return value:  Size  Location     Type
 10535 ;;                  1    wreg      void 
 10536 ;; Registers used:
 10537 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10538 ;; Tracked objects:
 10539 ;;		On entry : 0/0
 10540 ;;		On exit  : 0/0
 10541 ;;		Unchanged: 0/0
 10542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10543 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10544 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10545 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10546 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10547 ;;Total ram usage:        8 bytes
 10548 ;; Hardware stack levels used:    1
 10549 ;; Hardware stack levels required when called:    1
 10550 ;; This function calls:
 10551 ;;		_write_EEPROM
 10552 ;; This function is called by:
 10553 ;;		_main
 10554 ;; This function uses a non-reentrant model
 10555 ;;
 10556                           
 10557                           	psect	text1
 10558  00ADF8                     __ptext1:
 10559                           	opt stack 0
 10560  00ADF8                     _store_EEPROM:
 10561                           	opt stack 29
 10562                           
 10563                           ;EEPROM_storage.c: 58: short int i, j;
 10564                           ;EEPROM_storage.c: 60: for (i = 0; i < 8; i++){
 10565                           
 10566                           ;incstack = 0
 10567  00ADF8  0E00               	movlw	0
 10568  00ADFA  6E0A               	movwf	store_EEPROM@i+1,c
 10569  00ADFC  0E00               	movlw	0
 10570  00ADFE  6E09               	movwf	store_EEPROM@i,c
 10571  00AE00                     l6708:
 10572  00AE00  BE0A               	btfsc	store_EEPROM@i+1,7,c
 10573  00AE02  D006               	goto	l1260
 10574  00AE04  500A               	movf	store_EEPROM@i+1,w,c
 10575  00AE06  E13C               	bnz	l6728
 10576  00AE08  0E08               	movlw	8
 10577  00AE0A  5C09               	subwf	store_EEPROM@i,w,c
 10578  00AE0C  B0D8               	btfsc	status,0,c
 10579  00AE0E  D038               	goto	u6270
 10580  00AE10                     l1260:
 10581                           
 10582                           ;EEPROM_storage.c: 61: for (j = 0; j < 4; j++){
 10583  00AE10  0E00               	movlw	0
 10584  00AE12  6E08               	movwf	store_EEPROM@j+1,c
 10585  00AE14  0E00               	movlw	0
 10586  00AE16  6E07               	movwf	store_EEPROM@j,c
 10587  00AE18                     l6714:
 10588  00AE18  BE08               	btfsc	store_EEPROM@j+1,7,c
 10589  00AE1A  D006               	goto	l1262
 10590  00AE1C  5008               	movf	store_EEPROM@j+1,w,c
 10591  00AE1E  E12D               	bnz	l6724
 10592  00AE20  0E04               	movlw	4
 10593  00AE22  5C07               	subwf	store_EEPROM@j,w,c
 10594  00AE24  B0D8               	btfsc	status,0,c
 10595  00AE26  D029               	goto	u6260
 10596  00AE28                     l1262:
 10597                           
 10598                           ;EEPROM_storage.c: 62: write_EEPROM((4*i + j), EEPROM_mat[i][j]);}}
 10599  00AE28  C009  F003         	movff	store_EEPROM@i,??_store_EEPROM
 10600  00AE2C  C00A  F004         	movff	store_EEPROM@i+1,??_store_EEPROM+1
 10601  00AE30  90D8               	bcf	status,0,c
 10602  00AE32  3603               	rlcf	??_store_EEPROM,f,c
 10603  00AE34  3604               	rlcf	??_store_EEPROM+1,f,c
 10604  00AE36  90D8               	bcf	status,0,c
 10605  00AE38  3603               	rlcf	??_store_EEPROM,f,c
 10606  00AE3A  3604               	rlcf	??_store_EEPROM+1,f,c
 10607  00AE3C  90D8               	bcf	status,0,c
 10608  00AE3E  3603               	rlcf	??_store_EEPROM,f,c
 10609  00AE40  3604               	rlcf	??_store_EEPROM+1,f,c
 10610  00AE42  0E60               	movlw	low _EEPROM_mat
 10611  00AE44  6E05               	movwf	(??_store_EEPROM+2)& (0+255),c
 10612  00AE46  0E03               	movlw	high _EEPROM_mat
 10613  00AE48  6E06               	movwf	(??_store_EEPROM+3)& (0+255),c
 10614  00AE4A  5003               	movf	??_store_EEPROM,w,c
 10615  00AE4C  2605               	addwf	??_store_EEPROM+2,f,c
 10616  00AE4E  5004               	movf	??_store_EEPROM+1,w,c
 10617  00AE50  2206               	addwfc	??_store_EEPROM+3,f,c
 10618  00AE52  90D8               	bcf	status,0,c
 10619  00AE54  3407               	rlcf	store_EEPROM@j,w,c
 10620  00AE56  6ED9               	movwf	fsr2l,c
 10621  00AE58  3408               	rlcf	store_EEPROM@j+1,w,c
 10622  00AE5A  6EDA               	movwf	fsr2h,c
 10623  00AE5C  5005               	movf	??_store_EEPROM+2,w,c
 10624  00AE5E  26D9               	addwf	fsr2l,f,c
 10625  00AE60  5006               	movf	??_store_EEPROM+3,w,c
 10626  00AE62  22DA               	addwfc	fsr2h,f,c
 10627  00AE64  50DF               	movf	indf2,w,c
 10628  00AE66  6E01               	movwf	write_EEPROM@data,c
 10629  00AE68  4409               	rlncf	store_EEPROM@i,w,c
 10630  00AE6A  46E8               	rlncf	wreg,f,c
 10631  00AE6C  0BFC               	andlw	252
 10632  00AE6E  2407               	addwf	store_EEPROM@j,w,c
 10633  00AE70  ECCA  F051         	call	_write_EEPROM
 10634  00AE74  4A07               	infsnz	store_EEPROM@j,f,c
 10635  00AE76  2A08               	incf	store_EEPROM@j+1,f,c
 10636  00AE78  D7CF               	goto	l6714
 10637  00AE7A                     u6260:
 10638  00AE7A                     l6724:
 10639  00AE7A  4A09               	infsnz	store_EEPROM@i,f,c
 10640  00AE7C  2A0A               	incf	store_EEPROM@i+1,f,c
 10641  00AE7E  D7C0               	goto	l6708
 10642  00AE80                     u6270:
 10643  00AE80                     l6728:
 10644                           
 10645                           ;EEPROM_storage.c: 64: for (i = 0; i < 4; i++){
 10646  00AE80  0E00               	movlw	0
 10647  00AE82  6E0A               	movwf	store_EEPROM@i+1,c
 10648  00AE84  0E00               	movlw	0
 10649  00AE86  6E09               	movwf	store_EEPROM@i,c
 10650  00AE88                     l6730:
 10651  00AE88  BE0A               	btfsc	store_EEPROM@i+1,7,c
 10652  00AE8A  D006               	goto	l1264
 10653  00AE8C  500A               	movf	store_EEPROM@i+1,w,c
 10654  00AE8E  E116               	bnz	l6740
 10655  00AE90  0E04               	movlw	4
 10656  00AE92  5C09               	subwf	store_EEPROM@i,w,c
 10657  00AE94  B0D8               	btfsc	status,0,c
 10658  00AE96  D012               	goto	u6290
 10659  00AE98                     l1264:
 10660                           
 10661                           ;EEPROM_storage.c: 65: write_EEPROM(32 + i, marked_drawers[i]);}
 10662  00AE98  90D8               	bcf	status,0,c
 10663  00AE9A  3409               	rlcf	store_EEPROM@i,w,c
 10664  00AE9C  6ED9               	movwf	fsr2l,c
 10665  00AE9E  340A               	rlcf	store_EEPROM@i+1,w,c
 10666  00AEA0  6EDA               	movwf	fsr2h,c
 10667  00AEA2  0EAF               	movlw	low _marked_drawers
 10668  00AEA4  26D9               	addwf	fsr2l,f,c
 10669  00AEA6  0E02               	movlw	high _marked_drawers
 10670  00AEA8  22DA               	addwfc	fsr2h,f,c
 10671  00AEAA  50DF               	movf	indf2,w,c
 10672  00AEAC  6E01               	movwf	write_EEPROM@data,c
 10673  00AEAE  5009               	movf	store_EEPROM@i,w,c
 10674  00AEB0  0F20               	addlw	32
 10675  00AEB2  ECCA  F051         	call	_write_EEPROM
 10676  00AEB6  4A09               	infsnz	store_EEPROM@i,f,c
 10677  00AEB8  2A0A               	incf	store_EEPROM@i+1,f,c
 10678  00AEBA  D7E6               	goto	l6730
 10679  00AEBC                     u6290:
 10680  00AEBC                     l6740:
 10681                           
 10682                           ;EEPROM_storage.c: 67: write_EEPROM(36, run_time_seconds);
 10683  00AEBC  C2D2  F001         	movff	_run_time_seconds,write_EEPROM@data
 10684  00AEC0  0E24               	movlw	36
 10685  00AEC2  ECCA  F051         	call	_write_EEPROM
 10686                           
 10687                           ;EEPROM_storage.c: 68: write_EEPROM(37, run_time_minutes);
 10688  00AEC6  C2D4  F001         	movff	_run_time_minutes,write_EEPROM@data
 10689  00AECA  0E25               	movlw	37
 10690  00AECC  ECCA  F051         	call	_write_EEPROM
 10691                           
 10692                           ;EEPROM_storage.c: 70: for (i = 0; i < 3; i++){
 10693  00AED0  0E00               	movlw	0
 10694  00AED2  6E0A               	movwf	store_EEPROM@i+1,c
 10695  00AED4  0E00               	movlw	0
 10696  00AED6  6E09               	movwf	store_EEPROM@i,c
 10697  00AED8                     l6744:
 10698  00AED8  BE0A               	btfsc	store_EEPROM@i+1,7,c
 10699  00AEDA  D006               	goto	l1266
 10700  00AEDC  500A               	movf	store_EEPROM@i+1,w,c
 10701  00AEDE  E116               	bnz	l1268
 10702  00AEE0  0E03               	movlw	3
 10703  00AEE2  5C09               	subwf	store_EEPROM@i,w,c
 10704  00AEE4  B0D8               	btfsc	status,0,c
 10705  00AEE6  0012               	return	
 10706  00AEE8                     l1266:
 10707                           
 10708                           ;EEPROM_storage.c: 71: write_EEPROM(38 + i, reservoir_count[i]);
 10709  00AEE8  90D8               	bcf	status,0,c
 10710  00AEEA  3409               	rlcf	store_EEPROM@i,w,c
 10711  00AEEC  6ED9               	movwf	fsr2l,c
 10712  00AEEE  340A               	rlcf	store_EEPROM@i+1,w,c
 10713  00AEF0  6EDA               	movwf	fsr2h,c
 10714  00AEF2  0EBE               	movlw	low _reservoir_count
 10715  00AEF4  26D9               	addwf	fsr2l,f,c
 10716  00AEF6  0E02               	movlw	high _reservoir_count
 10717  00AEF8  22DA               	addwfc	fsr2h,f,c
 10718  00AEFA  50DF               	movf	indf2,w,c
 10719  00AEFC  6E01               	movwf	write_EEPROM@data,c
 10720  00AEFE  5009               	movf	store_EEPROM@i,w,c
 10721  00AF00  0F26               	addlw	38
 10722  00AF02  ECCA  F051         	call	_write_EEPROM
 10723  00AF06  4A09               	infsnz	store_EEPROM@i,f,c
 10724  00AF08  2A0A               	incf	store_EEPROM@i+1,f,c
 10725  00AF0A  D7E6               	goto	l6744
 10726  00AF0C                     l1268:
 10727  00AF0C  0012               	return		;funcret
 10728  00AF0E                     __end_of_store_EEPROM:
 10729                           	opt stack 0
 10730                           tblptru	equ	0xFF8
 10731                           tblptrh	equ	0xFF7
 10732                           tblptrl	equ	0xFF6
 10733                           tablat	equ	0xFF5
 10734                           prodh	equ	0xFF4
 10735                           prodl	equ	0xFF3
 10736                           intcon	equ	0xFF2
 10737                           postinc0	equ	0xFEE
 10738                           wreg	equ	0xFE8
 10739                           postinc1	equ	0xFE6
 10740                           postdec1	equ	0xFE5
 10741                           plusw1	equ	0xFE3
 10742                           fsr1h	equ	0xFE2
 10743                           fsr1l	equ	0xFE1
 10744                           indf2	equ	0xFDF
 10745                           postinc2	equ	0xFDE
 10746                           postdec2	equ	0xFDD
 10747                           plusw2	equ	0xFDB
 10748                           fsr2h	equ	0xFDA
 10749                           fsr2l	equ	0xFD9
 10750                           status	equ	0xFD8
 10751                           
 10752 ;; *************** function _shift_EEPROM *****************
 10753 ;; Defined at:
 10754 ;;		line 47 in file "EEPROM_storage.c"
 10755 ;; Parameters:    Size  Location     Type
 10756 ;;		None
 10757 ;; Auto vars:     Size  Location     Type
 10758 ;;  i               2    5[COMRAM] short 
 10759 ;;  val             2    3[COMRAM] short 
 10760 ;; Return value:  Size  Location     Type
 10761 ;;                  1    wreg      void 
 10762 ;; Registers used:
 10763 ;;		wreg, status,2, status,0, cstack
 10764 ;; Tracked objects:
 10765 ;;		On entry : 0/0
 10766 ;;		On exit  : 0/0
 10767 ;;		Unchanged: 0/0
 10768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10769 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10770 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10771 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10772 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10773 ;;Total ram usage:        5 bytes
 10774 ;; Hardware stack levels used:    1
 10775 ;; Hardware stack levels required when called:    1
 10776 ;; This function calls:
 10777 ;;		_read_EEPROM
 10778 ;;		_write_EEPROM
 10779 ;; This function is called by:
 10780 ;;		_main
 10781 ;; This function uses a non-reentrant model
 10782 ;;
 10783                           
 10784                           	psect	text2
 10785  00A3BE                     __ptext2:
 10786                           	opt stack 0
 10787  00A3BE                     _shift_EEPROM:
 10788                           	opt stack 29
 10789                           
 10790                           ;EEPROM_storage.c: 48: short int i;
 10791                           ;EEPROM_storage.c: 49: short int val = 0;
 10792                           
 10793                           ;incstack = 0
 10794  00A3BE  0E00               	movlw	0
 10795  00A3C0  6E05               	movwf	shift_EEPROM@val+1,c
 10796  00A3C2  0E00               	movlw	0
 10797  00A3C4  6E04               	movwf	shift_EEPROM@val,c
 10798                           
 10799                           ;EEPROM_storage.c: 51: for (i = 204; i >= 0; i--){
 10800  00A3C6  0E00               	movlw	0
 10801  00A3C8  6E07               	movwf	shift_EEPROM@i+1,c
 10802  00A3CA  0ECC               	movlw	204
 10803  00A3CC  6E06               	movwf	shift_EEPROM@i,c
 10804  00A3CE                     l6696:
 10805  00A3CE  BE07               	btfsc	shift_EEPROM@i+1,7,c
 10806  00A3D0  0012               	return	
 10807                           
 10808                           ;EEPROM_storage.c: 52: val = read_EEPROM(i);
 10809  00A3D2  5006               	movf	shift_EEPROM@i,w,c
 10810  00A3D4  EC52  F051         	call	_read_EEPROM
 10811  00A3D8  6E03               	movwf	??_shift_EEPROM& (0+255),c
 10812  00A3DA  5003               	movf	??_shift_EEPROM,w,c
 10813  00A3DC  6E04               	movwf	shift_EEPROM@val,c
 10814  00A3DE  6A05               	clrf	shift_EEPROM@val+1,c
 10815                           
 10816                           ;EEPROM_storage.c: 53: write_EEPROM(i+41, val);
 10817  00A3E0  C004  F001         	movff	shift_EEPROM@val,write_EEPROM@data
 10818  00A3E4  5006               	movf	shift_EEPROM@i,w,c
 10819  00A3E6  0F29               	addlw	41
 10820  00A3E8  ECCA  F051         	call	_write_EEPROM
 10821  00A3EC  0606               	decf	shift_EEPROM@i,f,c
 10822  00A3EE  A0D8               	btfss	status,0,c
 10823  00A3F0  0607               	decf	shift_EEPROM@i+1,f,c
 10824  00A3F2  D7ED               	goto	l6696
 10825  00A3F4                     __end_of_shift_EEPROM:
 10826                           	opt stack 0
 10827                           tblptru	equ	0xFF8
 10828                           tblptrh	equ	0xFF7
 10829                           tblptrl	equ	0xFF6
 10830                           tablat	equ	0xFF5
 10831                           prodh	equ	0xFF4
 10832                           prodl	equ	0xFF3
 10833                           intcon	equ	0xFF2
 10834                           postinc0	equ	0xFEE
 10835                           wreg	equ	0xFE8
 10836                           postinc1	equ	0xFE6
 10837                           postdec1	equ	0xFE5
 10838                           plusw1	equ	0xFE3
 10839                           fsr1h	equ	0xFE2
 10840                           fsr1l	equ	0xFE1
 10841                           indf2	equ	0xFDF
 10842                           postinc2	equ	0xFDE
 10843                           postdec2	equ	0xFDD
 10844                           plusw2	equ	0xFDB
 10845                           fsr2h	equ	0xFDA
 10846                           fsr2l	equ	0xFD9
 10847                           status	equ	0xFD8
 10848                           
 10849 ;; *************** function _write_EEPROM *****************
 10850 ;; Defined at:
 10851 ;;		line 18 in file "EEPROM_storage.c"
 10852 ;; Parameters:    Size  Location     Type
 10853 ;;  address         1    wreg     unsigned char 
 10854 ;;  data            1    0[COMRAM] unsigned char 
 10855 ;; Auto vars:     Size  Location     Type
 10856 ;;  address         1    1[COMRAM] unsigned char 
 10857 ;; Return value:  Size  Location     Type
 10858 ;;                  1    wreg      void 
 10859 ;; Registers used:
 10860 ;;		wreg, status,2
 10861 ;; Tracked objects:
 10862 ;;		On entry : 0/0
 10863 ;;		On exit  : 0/0
 10864 ;;		Unchanged: 0/0
 10865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10866 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10867 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10868 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10869 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10870 ;;Total ram usage:        2 bytes
 10871 ;; Hardware stack levels used:    1
 10872 ;; This function calls:
 10873 ;;		Nothing
 10874 ;; This function is called by:
 10875 ;;		_shift_EEPROM
 10876 ;;		_store_EEPROM
 10877 ;; This function uses a non-reentrant model
 10878 ;;
 10879                           
 10880                           	psect	text3
 10881  00A394                     __ptext3:
 10882                           	opt stack 0
 10883  00A394                     _write_EEPROM:
 10884                           	opt stack 29
 10885                           
 10886                           ;incstack = 0
 10887                           ;write_EEPROM@address stored from wreg
 10888  00A394  6E02               	movwf	write_EEPROM@address,c
 10889  00A396                     
 10890                           ;EEPROM_storage.c: 19: while( EECON1bits.WR ){continue;}
 10891  00A396  B2A6               	btfsc	4006,1,c	;volsfr
 10892  00A398  D7FE               	goto	l6336
 10893                           
 10894                           ;EEPROM_storage.c: 21: EECON1bits.WREN=1;
 10895  00A39A  84A6               	bsf	4006,2,c	;volsfr
 10896                           
 10897                           ;EEPROM_storage.c: 22: EEADR=address;
 10898  00A39C  C002  FFA9         	movff	write_EEPROM@address,4009	;volatile
 10899                           
 10900                           ;EEPROM_storage.c: 23: EEDATA=data;
 10901  00A3A0  C001  FFA8         	movff	write_EEPROM@data,4008	;volatile
 10902                           
 10903                           ;EEPROM_storage.c: 24: EECON1bits.EEPGD=0;
 10904  00A3A4  9EA6               	bcf	4006,7,c	;volsfr
 10905                           
 10906                           ;EEPROM_storage.c: 25: EECON1bits.CFGS=0;
 10907  00A3A6  9CA6               	bcf	4006,6,c	;volsfr
 10908                           
 10909                           ;EEPROM_storage.c: 26: INTCONbits.GIE=0;
 10910  00A3A8  9EF2               	bcf	intcon,7,c	;volatile
 10911                           
 10912                           ;EEPROM_storage.c: 28: EECON2 = 0x55;
 10913  00A3AA  0E55               	movlw	85
 10914  00A3AC  6EA7               	movwf	4007,c	;volsfr
 10915                           
 10916                           ;EEPROM_storage.c: 29: EECON2 = 0xAA;
 10917  00A3AE  0EAA               	movlw	170
 10918  00A3B0  6EA7               	movwf	4007,c	;volsfr
 10919                           
 10920                           ;EEPROM_storage.c: 30: EECON1bits.WR = 1;
 10921  00A3B2  82A6               	bsf	4006,1,c	;volsfr
 10922                           
 10923                           ;EEPROM_storage.c: 32: INTCONbits.GIE = 1;
 10924  00A3B4  8EF2               	bsf	intcon,7,c	;volatile
 10925  00A3B6  B2A6               	btfsc	4006,1,c	;volsfr
 10926  00A3B8  D7FE               	goto	l1244
 10927                           
 10928                           ;EEPROM_storage.c: 34: EECON1bits.WREN=0;
 10929  00A3BA  94A6               	bcf	4006,2,c	;volsfr
 10930  00A3BC  0012               	return		;funcret
 10931  00A3BE                     __end_of_write_EEPROM:
 10932                           	opt stack 0
 10933                           tblptru	equ	0xFF8
 10934                           tblptrh	equ	0xFF7
 10935                           tblptrl	equ	0xFF6
 10936                           tablat	equ	0xFF5
 10937                           prodh	equ	0xFF4
 10938                           prodl	equ	0xFF3
 10939                           intcon	equ	0xFF2
 10940                           postinc0	equ	0xFEE
 10941                           wreg	equ	0xFE8
 10942                           postinc1	equ	0xFE6
 10943                           postdec1	equ	0xFE5
 10944                           plusw1	equ	0xFE3
 10945                           fsr1h	equ	0xFE2
 10946                           fsr1l	equ	0xFE1
 10947                           indf2	equ	0xFDF
 10948                           postinc2	equ	0xFDE
 10949                           postdec2	equ	0xFDD
 10950                           plusw2	equ	0xFDB
 10951                           fsr2h	equ	0xFDA
 10952                           fsr2l	equ	0xFD9
 10953                           status	equ	0xFD8
 10954                           
 10955 ;; *************** function _set_total_init_time *****************
 10956 ;; Defined at:
 10957 ;;		line 173 in file "add_functions.c"
 10958 ;; Parameters:    Size  Location     Type
 10959 ;;		None
 10960 ;; Auto vars:     Size  Location     Type
 10961 ;;  i               2   28[COMRAM] short 
 10962 ;; Return value:  Size  Location     Type
 10963 ;;                  1    wreg      void 
 10964 ;; Registers used:
 10965 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10966 ;; Tracked objects:
 10967 ;;		On entry : 0/0
 10968 ;;		On exit  : 0/0
 10969 ;;		Unchanged: 0/0
 10970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10971 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10972 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10973 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10974 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10975 ;;Total ram usage:        9 bytes
 10976 ;; Hardware stack levels used:    1
 10977 ;; Hardware stack levels required when called:    2
 10978 ;; This function calls:
 10979 ;;		_I2C_Master_Init
 10980 ;;		_I2C_Master_Read
 10981 ;;		_I2C_Master_Start
 10982 ;;		_I2C_Master_Stop
 10983 ;;		_I2C_Master_Write
 10984 ;;		___wmul
 10985 ;; This function is called by:
 10986 ;;		_main
 10987 ;; This function uses a non-reentrant model
 10988 ;;
 10989                           
 10990                           	psect	text4
 10991  00AF0E                     __ptext4:
 10992                           	opt stack 0
 10993  00AF0E                     _set_total_init_time:
 10994                           	opt stack 28
 10995                           
 10996                           ;add_functions.c: 174: short int i = 0;
 10997                           
 10998                           ;incstack = 0
 10999  00AF0E  0E00               	movlw	0
 11000  00AF10  6E1E               	movwf	set_total_init_time@i+1,c
 11001  00AF12  0E00               	movlw	0
 11002  00AF14  6E1D               	movwf	set_total_init_time@i,c
 11003                           
 11004                           ;add_functions.c: 176: I2C_Master_Init(100000);
 11005  00AF16  0EA0               	movlw	160
 11006  00AF18  6E0E               	movwf	I2C_Master_Init@clockFreq,c
 11007  00AF1A  0E86               	movlw	134
 11008  00AF1C  6E0F               	movwf	I2C_Master_Init@clockFreq+1,c
 11009  00AF1E  0E01               	movlw	1
 11010  00AF20  6E10               	movwf	I2C_Master_Init@clockFreq+2,c
 11011  00AF22  0E00               	movlw	0
 11012  00AF24  6E11               	movwf	I2C_Master_Init@clockFreq+3,c
 11013  00AF26  ECA8  F052         	call	_I2C_Master_Init	;wreg free
 11014                           
 11015                           ;add_functions.c: 177: I2C_Master_Start();
 11016  00AF2A  EC28  F051         	call	_I2C_Master_Start	;wreg free
 11017                           
 11018                           ;add_functions.c: 178: I2C_Master_Write(0b11010000);
 11019  00AF2E  0E00               	movlw	0
 11020  00AF30  6E03               	movwf	I2C_Master_Write@byteToWrite+1,c
 11021  00AF32  0ED0               	movlw	208
 11022  00AF34  6E02               	movwf	I2C_Master_Write@byteToWrite,c
 11023  00AF36  EC30  F051         	call	_I2C_Master_Write	;wreg free
 11024                           
 11025                           ;add_functions.c: 179: I2C_Master_Write(0x00);
 11026  00AF3A  0E00               	movlw	0
 11027  00AF3C  6E03               	movwf	I2C_Master_Write@byteToWrite+1,c
 11028  00AF3E  0E00               	movlw	0
 11029  00AF40  6E02               	movwf	I2C_Master_Write@byteToWrite,c
 11030  00AF42  EC30  F051         	call	_I2C_Master_Write	;wreg free
 11031                           
 11032                           ;add_functions.c: 180: I2C_Master_Stop();
 11033  00AF46  EC2C  F051         	call	_I2C_Master_Stop	;wreg free
 11034                           
 11035                           ;add_functions.c: 183: I2C_Master_Start();
 11036  00AF4A  EC28  F051         	call	_I2C_Master_Start	;wreg free
 11037                           
 11038                           ;add_functions.c: 184: I2C_Master_Write(0b11010001);
 11039  00AF4E  0E00               	movlw	0
 11040  00AF50  6E03               	movwf	I2C_Master_Write@byteToWrite+1,c
 11041  00AF52  0ED1               	movlw	209
 11042  00AF54  6E02               	movwf	I2C_Master_Write@byteToWrite,c
 11043  00AF56  EC30  F051         	call	_I2C_Master_Write	;wreg free
 11044                           
 11045                           ;add_functions.c: 185: for(i = 0; i < 6; i++){
 11046  00AF5A  0E00               	movlw	0
 11047  00AF5C  6E1E               	movwf	set_total_init_time@i+1,c
 11048  00AF5E  0E00               	movlw	0
 11049  00AF60  6E1D               	movwf	set_total_init_time@i,c
 11050  00AF62                     l6520:
 11051  00AF62  BE1E               	btfsc	set_total_init_time@i+1,7,c
 11052  00AF64  D006               	goto	l1168
 11053  00AF66  501E               	movf	set_total_init_time@i+1,w,c
 11054  00AF68  E111               	bnz	l6530
 11055  00AF6A  0E06               	movlw	6
 11056  00AF6C  5C1D               	subwf	set_total_init_time@i,w,c
 11057  00AF6E  B0D8               	btfsc	status,0,c
 11058  00AF70  D00D               	goto	u5930
 11059  00AF72                     l1168:
 11060                           
 11061                           ;add_functions.c: 186: time[i] = I2C_Master_Read(0);
 11062  00AF72  0EB7               	movlw	low _time
 11063  00AF74  241D               	addwf	set_total_init_time@i,w,c
 11064  00AF76  6ED9               	movwf	fsr2l,c
 11065  00AF78  0E02               	movlw	high _time
 11066  00AF7A  201E               	addwfc	set_total_init_time@i+1,w,c
 11067  00AF7C  6EDA               	movwf	fsr2h,c
 11068  00AF7E  0E00               	movlw	0
 11069  00AF80  ECA5  F051         	call	_I2C_Master_Read
 11070  00AF84  6EDF               	movwf	indf2,c
 11071  00AF86  4A1D               	infsnz	set_total_init_time@i,f,c
 11072  00AF88  2A1E               	incf	set_total_init_time@i+1,f,c
 11073  00AF8A  D7EB               	goto	l6520
 11074  00AF8C                     u5930:
 11075  00AF8C                     l6530:
 11076                           
 11077                           ;add_functions.c: 187: }
 11078                           ;add_functions.c: 188: time[6] = I2C_Master_Read(1);
 11079  00AF8C  0E01               	movlw	1
 11080  00AF8E  ECA5  F051         	call	_I2C_Master_Read
 11081  00AF92  0102               	movlb	2	; () banked
 11082  00AF94  6FBD               	movwf	(_time+6)& (0+255),b
 11083                           
 11084                           ;add_functions.c: 189: I2C_Master_Stop();
 11085  00AF96  EC2C  F051         	call	_I2C_Master_Stop	;wreg free
 11086                           
 11087                           ;add_functions.c: 191: total_init_time = (((time[2]&0x0F))*3600 + (((time[1] & 0xF0) >> 
      +                          4)*10 + (time[1]&0x0F))*60 + ((time[0] & 0xF0) >> 4)*10 + (time[0]&0x0F));
 11088  00AF9A  C2B9  F016         	movff	_time+2,??_set_total_init_time
 11089  00AF9E  0E0F               	movlw	15
 11090  00AFA0  1616               	andwf	??_set_total_init_time,f,c
 11091  00AFA2  5016               	movf	??_set_total_init_time,w,c
 11092  00AFA4  6E01               	movwf	___wmul@multiplier,c
 11093  00AFA6  6A02               	clrf	___wmul@multiplier+1,c
 11094  00AFA8  0E0E               	movlw	14
 11095  00AFAA  6E04               	movwf	___wmul@multiplicand+1,c
 11096  00AFAC  0E10               	movlw	16
 11097  00AFAE  6E03               	movwf	___wmul@multiplicand,c
 11098  00AFB0  ECB7  F051         	call	___wmul	;wreg free
 11099  00AFB4  C001  F017         	movff	?___wmul,??_set_total_init_time+1
 11100  00AFB8  C002  F018         	movff	?___wmul+1,??_set_total_init_time+2
 11101  00AFBC  C2B8  F019         	movff	_time+1,??_set_total_init_time+3
 11102  00AFC0  0E0F               	movlw	15
 11103  00AFC2  1619               	andwf	??_set_total_init_time+3,f,c
 11104  00AFC4  C2B8  F01A         	movff	_time+1,??_set_total_init_time+4
 11105  00AFC8  3A1A               	swapf	??_set_total_init_time+4,f,c
 11106  00AFCA  0E0F               	movlw	15
 11107  00AFCC  161A               	andwf	??_set_total_init_time+4,f,c
 11108  00AFCE  0E0F               	movlw	15
 11109  00AFD0  161A               	andwf	??_set_total_init_time+4,f,c
 11110  00AFD2  501A               	movf	??_set_total_init_time+4,w,c
 11111  00AFD4  0D0A               	mullw	10
 11112  00AFD6  5019               	movf	??_set_total_init_time+3,w,c
 11113  00AFD8  24F3               	addwf	prodl,w,c
 11114  00AFDA  6E01               	movwf	___wmul@multiplier,c
 11115  00AFDC  0E00               	movlw	0
 11116  00AFDE  20F4               	addwfc	prodh,w,c
 11117  00AFE0  6E02               	movwf	___wmul@multiplier+1,c
 11118  00AFE2  0E00               	movlw	0
 11119  00AFE4  6E04               	movwf	___wmul@multiplicand+1,c
 11120  00AFE6  0E3C               	movlw	60
 11121  00AFE8  6E03               	movwf	___wmul@multiplicand,c
 11122  00AFEA  ECB7  F051         	call	___wmul	;wreg free
 11123  00AFEE  5001               	movf	?___wmul,w,c
 11124  00AFF0  2617               	addwf	??_set_total_init_time+1,f,c
 11125  00AFF2  5002               	movf	?___wmul+1,w,c
 11126  00AFF4  2218               	addwfc	??_set_total_init_time+2,f,c
 11127  00AFF6  C2B7  F01B         	movff	_time,??_set_total_init_time+5
 11128  00AFFA  3A1B               	swapf	??_set_total_init_time+5,f,c
 11129  00AFFC  0E0F               	movlw	15
 11130  00AFFE  161B               	andwf	??_set_total_init_time+5,f,c
 11131  00B000  0E0F               	movlw	15
 11132  00B002  161B               	andwf	??_set_total_init_time+5,f,c
 11133  00B004  501B               	movf	??_set_total_init_time+5,w,c
 11134  00B006  0D0A               	mullw	10
 11135  00B008  50F3               	movf	prodl,w,c
 11136  00B00A  2617               	addwf	??_set_total_init_time+1,f,c
 11137  00B00C  50F4               	movf	prodh,w,c
 11138  00B00E  2218               	addwfc	??_set_total_init_time+2,f,c
 11139  00B010  C2B7  F01C         	movff	_time,??_set_total_init_time+6
 11140  00B014  0E0F               	movlw	15
 11141  00B016  161C               	andwf	??_set_total_init_time+6,f,c
 11142  00B018  501C               	movf	??_set_total_init_time+6,w,c
 11143  00B01A  2617               	addwf	??_set_total_init_time+1,f,c
 11144  00B01C  0E00               	movlw	0
 11145  00B01E  2218               	addwfc	??_set_total_init_time+2,f,c
 11146  00B020  C017  F2CC         	movff	??_set_total_init_time+1,_total_init_time
 11147  00B024  C018  F2CD         	movff	??_set_total_init_time+2,_total_init_time+1
 11148  00B028  0102               	movlb	2	; () banked
 11149  00B02A  0E00               	movlw	0
 11150  00B02C  BFCD               	btfsc	(_total_init_time+1)& (0+255),7,b
 11151  00B02E  0EFF               	movlw	-1
 11152  00B030  6FCE               	movwf	(_total_init_time+2)& (0+255),b
 11153  00B032  6FCF               	movwf	(_total_init_time+3)& (0+255),b
 11154                           
 11155                           ; BSR set to: 2
 11156  00B034  0012               	return		;funcret
 11157  00B036                     __end_of_set_total_init_time:
 11158                           	opt stack 0
 11159                           tblptru	equ	0xFF8
 11160                           tblptrh	equ	0xFF7
 11161                           tblptrl	equ	0xFF6
 11162                           tablat	equ	0xFF5
 11163                           prodh	equ	0xFF4
 11164                           prodl	equ	0xFF3
 11165                           intcon	equ	0xFF2
 11166                           postinc0	equ	0xFEE
 11167                           wreg	equ	0xFE8
 11168                           postinc1	equ	0xFE6
 11169                           postdec1	equ	0xFE5
 11170                           plusw1	equ	0xFE3
 11171                           fsr1h	equ	0xFE2
 11172                           fsr1l	equ	0xFE1
 11173                           indf2	equ	0xFDF
 11174                           postinc2	equ	0xFDE
 11175                           postdec2	equ	0xFDD
 11176                           plusw2	equ	0xFDB
 11177                           fsr2h	equ	0xFDA
 11178                           fsr2l	equ	0xFD9
 11179                           status	equ	0xFD8
 11180                           
 11181 ;; *************** function _package_food *****************
 11182 ;; Defined at:
 11183 ;;		line 114 in file "machine_code.c"
 11184 ;; Parameters:    Size  Location     Type
 11185 ;;  mat             2   48[COMRAM] PTR int [3]
 11186 ;;		 -> main@mat(96), 
 11187 ;; Auto vars:     Size  Location     Type
 11188 ;;  j               2   60[COMRAM] short 
 11189 ;;  row_ind         2   58[COMRAM] short 
 11190 ;;  i               2   56[COMRAM] short 
 11191 ;;  row_used        2   54[COMRAM] short 
 11192 ;;  count           2   52[COMRAM] short 
 11193 ;; Return value:  Size  Location     Type
 11194 ;;                  1    wreg      void 
 11195 ;; Registers used:
 11196 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11197 ;; Tracked objects:
 11198 ;;		On entry : 0/0
 11199 ;;		On exit  : 0/0
 11200 ;;		Unchanged: 0/0
 11201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11202 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11203 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11204 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11205 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11206 ;;Total ram usage:       14 bytes
 11207 ;; Hardware stack levels used:    1
 11208 ;; Hardware stack levels required when called:    5
 11209 ;; This function calls:
 11210 ;;		___wmul
 11211 ;;		_finalize
 11212 ;;		_height_mech
 11213 ;;		_hook_mech
 11214 ;;		_initialize
 11215 ;;		_load_mech
 11216 ;;		_sensor_row_check
 11217 ;;		_servo_slide
 11218 ;; This function is called by:
 11219 ;;		_main
 11220 ;; This function uses a non-reentrant model
 11221 ;;
 11222                           
 11223                           	psect	text5
 11224  00B6C4                     __ptext5:
 11225                           	opt stack 0
 11226  00B6C4                     _package_food:
 11227                           	opt stack 25
 11228                           
 11229                           ;machine_code.c: 115: short int i = 0, j = 0, row_ind = 0, count = 0, row_used = 0;
 11230                           
 11231                           ; BSR set to: 2
 11232                           ;incstack = 0
 11233  00B6C4  0E00               	movlw	0
 11234  00B6C6  6E3A               	movwf	package_food@i+1,c
 11235  00B6C8  0E00               	movlw	0
 11236  00B6CA  6E39               	movwf	package_food@i,c
 11237  00B6CC  0E00               	movlw	0
 11238  00B6CE  6E3E               	movwf	package_food@j+1,c
 11239  00B6D0  0E00               	movlw	0
 11240  00B6D2  6E3D               	movwf	package_food@j,c
 11241  00B6D4  0E00               	movlw	0
 11242  00B6D6  6E3C               	movwf	package_food@row_ind+1,c
 11243  00B6D8  0E00               	movlw	0
 11244  00B6DA  6E3B               	movwf	package_food@row_ind,c
 11245  00B6DC  0E00               	movlw	0
 11246  00B6DE  6E36               	movwf	package_food@count+1,c
 11247  00B6E0  0E00               	movlw	0
 11248  00B6E2  6E35               	movwf	package_food@count,c
 11249  00B6E4  0E00               	movlw	0
 11250  00B6E6  6E38               	movwf	package_food@row_used+1,c
 11251  00B6E8  0E00               	movlw	0
 11252  00B6EA  6E37               	movwf	package_food@row_used,c
 11253                           
 11254                           ;machine_code.c: 116: initialize(mat);
 11255  00B6EC  C031  F007         	movff	package_food@mat,initialize@mat
 11256  00B6F0  C032  F008         	movff	package_food@mat+1,initialize@mat+1
 11257  00B6F4  EC1B  F058         	call	_initialize	;wreg free
 11258                           
 11259                           ;machine_code.c: 118: for (i = 0; i < 4; i++){
 11260  00B6F8  0E00               	movlw	0
 11261  00B6FA  6E3A               	movwf	package_food@i+1,c
 11262  00B6FC  0E00               	movlw	0
 11263  00B6FE  6E39               	movwf	package_food@i,c
 11264  00B700  BE3A               	btfsc	package_food@i+1,7,c
 11265  00B702  D008               	goto	l673
 11266  00B704  503A               	movf	package_food@i+1,w,c
 11267  00B706  E105               	bnz	u5940
 11268  00B708  0E04               	movlw	4
 11269  00B70A  5C39               	subwf	package_food@i,w,c
 11270  00B70C  B0D8               	btfsc	status,0,c
 11271  00B70E  D0FE               	goto	u6020
 11272  00B710  D001               	goto	l673
 11273  00B712                     u5940:
 11274  00B712  D0FC               	goto	u6020
 11275  00B714                     l673:
 11276                           
 11277                           ;machine_code.c: 119: count = 0;
 11278  00B714  0E00               	movlw	0
 11279  00B716  6E36               	movwf	package_food@count+1,c
 11280  00B718  0E00               	movlw	0
 11281  00B71A  6E35               	movwf	package_food@count,c
 11282                           
 11283                           ;machine_code.c: 120: row_ind = 4*i;
 11284  00B71C  C039  F033         	movff	package_food@i,??_package_food
 11285  00B720  C03A  F034         	movff	package_food@i+1,??_package_food+1
 11286  00B724  90D8               	bcf	status,0,c
 11287  00B726  3633               	rlcf	??_package_food,f,c
 11288  00B728  3634               	rlcf	??_package_food+1,f,c
 11289  00B72A  90D8               	bcf	status,0,c
 11290  00B72C  3633               	rlcf	??_package_food,f,c
 11291  00B72E  3634               	rlcf	??_package_food+1,f,c
 11292  00B730  C033  F03B         	movff	??_package_food,package_food@row_ind
 11293  00B734  C034  F03C         	movff	??_package_food+1,package_food@row_ind+1
 11294                           
 11295                           ;machine_code.c: 122: row_used = sensor_row_check(row_ind, count);
 11296  00B738  C03B  F007         	movff	package_food@row_ind,sensor_row_check@row_ind
 11297  00B73C  C03C  F008         	movff	package_food@row_ind+1,sensor_row_check@row_ind+1
 11298  00B740  C035  F009         	movff	package_food@count,sensor_row_check@count
 11299  00B744  C036  F00A         	movff	package_food@count+1,sensor_row_check@count+1
 11300  00B748  ECB6  F05F         	call	_sensor_row_check	;wreg free
 11301  00B74C  C007  F037         	movff	?_sensor_row_check,package_food@row_used
 11302  00B750  C008  F038         	movff	?_sensor_row_check+1,package_food@row_used+1
 11303                           
 11304                           ;machine_code.c: 123: if (row_used == 0){
 11305  00B754  5037               	movf	package_food@row_used,w,c
 11306  00B756  1038               	iorwf	package_food@row_used+1,w,c
 11307  00B758  B4D8               	btfsc	status,2,c
 11308  00B75A  D0D1               	goto	l676
 11309                           
 11310                           ;machine_code.c: 127: else{
 11311                           ;machine_code.c: 128: height_mech((i+1) - curr_height, curr_height);
 11312                           
 11313                           ;machine_code.c: 125: }
 11314                           
 11315                           ;machine_code.c: 124: continue;
 11316  00B75C  C2E4  F033         	movff	_curr_height,??_package_food
 11317  00B760  C2E5  F034         	movff	_curr_height+1,??_package_food+1
 11318  00B764  1E33               	comf	??_package_food,f,c
 11319  00B766  1E34               	comf	??_package_food+1,f,c
 11320  00B768  4A33               	infsnz	??_package_food,f,c
 11321  00B76A  2A34               	incf	??_package_food+1,f,c
 11322  00B76C  5039               	movf	package_food@i,w,c
 11323  00B76E  2633               	addwf	??_package_food,f,c
 11324  00B770  503A               	movf	package_food@i+1,w,c
 11325  00B772  2234               	addwfc	??_package_food+1,f,c
 11326  00B774  0E01               	movlw	1
 11327  00B776  2433               	addwf	??_package_food,w,c
 11328  00B778  6E08               	movwf	height_mech@dy,c
 11329  00B77A  0E00               	movlw	0
 11330  00B77C  2034               	addwfc	??_package_food+1,w,c
 11331  00B77E  6E09               	movwf	height_mech@dy+1,c
 11332  00B780  C2E4  F00A         	movff	_curr_height,height_mech@curr_height
 11333  00B784  C2E5  F00B         	movff	_curr_height+1,height_mech@curr_height+1
 11334  00B788  EC1E  F05E         	call	_height_mech	;wreg free
 11335                           
 11336                           ;machine_code.c: 129: curr_height = (i+1);
 11337  00B78C  0E01               	movlw	1
 11338  00B78E  2439               	addwf	package_food@i,w,c
 11339  00B790  0102               	movlb	2	; () banked
 11340  00B792  6FE4               	movwf	_curr_height& (0+255),b
 11341  00B794  0E00               	movlw	0
 11342  00B796  203A               	addwfc	package_food@i+1,w,c
 11343  00B798  6FE5               	movwf	(_curr_height+1)& (0+255),b
 11344                           
 11345                           ; BSR set to: 2
 11346                           ;machine_code.c: 130: count++;
 11347  00B79A  4A35               	infsnz	package_food@count,f,c
 11348  00B79C  2A36               	incf	package_food@count+1,f,c
 11349                           
 11350                           ; BSR set to: 2
 11351                           ;machine_code.c: 131: row_used = sensor_row_check(row_ind, count);
 11352  00B79E  C03B  F007         	movff	package_food@row_ind,sensor_row_check@row_ind
 11353  00B7A2  C03C  F008         	movff	package_food@row_ind+1,sensor_row_check@row_ind+1
 11354  00B7A6  C035  F009         	movff	package_food@count,sensor_row_check@count
 11355  00B7AA  C036  F00A         	movff	package_food@count+1,sensor_row_check@count+1
 11356  00B7AE  ECB6  F05F         	call	_sensor_row_check	;wreg free
 11357  00B7B2  C007  F037         	movff	?_sensor_row_check,package_food@row_used
 11358  00B7B6  C008  F038         	movff	?_sensor_row_check+1,package_food@row_used+1
 11359                           
 11360                           ;machine_code.c: 132: if (row_used == 0){
 11361  00B7BA  5037               	movf	package_food@row_used,w,c
 11362  00B7BC  1038               	iorwf	package_food@row_used+1,w,c
 11363  00B7BE  B4D8               	btfsc	status,2,c
 11364  00B7C0  D09E               	goto	l676
 11365                           
 11366                           ;machine_code.c: 134: }
 11367                           ;machine_code.c: 135: }
 11368                           ;machine_code.c: 137: hook_mech(0);
 11369                           
 11370                           ;machine_code.c: 133: continue;
 11371  00B7C2  0E00               	movlw	0
 11372  00B7C4  6E07               	movwf	hook_mech@z+1,c
 11373  00B7C6  0E00               	movlw	0
 11374  00B7C8  6E06               	movwf	hook_mech@z,c
 11375  00B7CA  ECFA  F051         	call	_hook_mech	;wreg free
 11376                           
 11377                           ;machine_code.c: 138: _delay((unsigned long)((2500)*(40000000/4000.0)));
 11378  00B7CE  0E7F               	movlw	127
 11379  00B7D0  6E34               	movwf	(??_package_food+1)& (0+255),c
 11380  00B7D2  0ED4               	movlw	212
 11381  00B7D4  6E33               	movwf	??_package_food& (0+255),c
 11382  00B7D6  0E32               	movlw	50
 11383  00B7D8                     u10007:
 11384  00B7D8  2EE8               	decfsz	wreg,f,c
 11385  00B7DA  D7FE               	bra	u10007
 11386  00B7DC  2E33               	decfsz	??_package_food& (0+255),f,c
 11387  00B7DE  D7FC               	bra	u10007
 11388  00B7E0  2E34               	decfsz	(??_package_food+1)& (0+255),f,c
 11389  00B7E2  D7FA               	bra	u10007
 11390                           
 11391                           ;machine_code.c: 139: for (j = 0; j < 4; j++){
 11392  00B7E4  0E00               	movlw	0
 11393  00B7E6  6E3E               	movwf	package_food@j+1,c
 11394  00B7E8  0E00               	movlw	0
 11395  00B7EA  6E3D               	movwf	package_food@j,c
 11396  00B7EC  BE3E               	btfsc	package_food@j+1,7,c
 11397  00B7EE  D006               	goto	l679
 11398  00B7F0  503E               	movf	package_food@j+1,w,c
 11399  00B7F2  E174               	bnz	l680
 11400  00B7F4  0E04               	movlw	4
 11401  00B7F6  5C3D               	subwf	package_food@j,w,c
 11402  00B7F8  B0D8               	btfsc	status,0,c
 11403  00B7FA  D070               	goto	u6010
 11404  00B7FC                     l679:
 11405                           
 11406                           ;machine_code.c: 140: if ((changed_mat[row_ind + j][0] > 0)||(changed_mat[row_ind + j][1
      +                          ] > 0)||(changed_mat[row_ind + j][2] > 0)){
 11407  00B7FC  503D               	movf	package_food@j,w,c
 11408  00B7FE  243B               	addwf	package_food@row_ind,w,c
 11409  00B800  6E01               	movwf	___wmul@multiplier,c
 11410  00B802  503E               	movf	package_food@j+1,w,c
 11411  00B804  203C               	addwfc	package_food@row_ind+1,w,c
 11412  00B806  6E02               	movwf	___wmul@multiplier+1,c
 11413  00B808  0E00               	movlw	0
 11414  00B80A  6E04               	movwf	___wmul@multiplicand+1,c
 11415  00B80C  0E06               	movlw	6
 11416  00B80E  6E03               	movwf	___wmul@multiplicand,c
 11417  00B810  ECB7  F051         	call	___wmul	;wreg free
 11418  00B814  0E00               	movlw	low _changed_mat
 11419  00B816  2401               	addwf	?___wmul,w,c
 11420  00B818  6ED9               	movwf	fsr2l,c
 11421  00B81A  0E03               	movlw	high _changed_mat
 11422  00B81C  2002               	addwfc	?___wmul+1,w,c
 11423  00B81E  6EDA               	movwf	fsr2h,c
 11424  00B820  0E01               	movlw	1
 11425  00B822  BEDB               	btfsc	plusw2,7,c
 11426  00B824  D006               	goto	u5980
 11427  00B826  0E01               	movlw	1
 11428  00B828  50DB               	movf	plusw2,w,c
 11429  00B82A  E141               	bnz	l6584
 11430  00B82C  04DE               	decf	postinc2,w,c
 11431  00B82E  B0D8               	btfsc	status,0,c
 11432  00B830  D03E               	goto	u6000
 11433  00B832                     u5980:
 11434  00B832  503D               	movf	package_food@j,w,c
 11435  00B834  243B               	addwf	package_food@row_ind,w,c
 11436  00B836  6E01               	movwf	___wmul@multiplier,c
 11437  00B838  503E               	movf	package_food@j+1,w,c
 11438  00B83A  203C               	addwfc	package_food@row_ind+1,w,c
 11439  00B83C  6E02               	movwf	___wmul@multiplier+1,c
 11440  00B83E  0E00               	movlw	0
 11441  00B840  6E04               	movwf	___wmul@multiplicand+1,c
 11442  00B842  0E06               	movlw	6
 11443  00B844  6E03               	movwf	___wmul@multiplicand,c
 11444  00B846  ECB7  F051         	call	___wmul	;wreg free
 11445  00B84A  0E02               	movlw	2
 11446  00B84C  2601               	addwf	?___wmul,f,c
 11447  00B84E  0E00               	movlw	0
 11448  00B850  2202               	addwfc	?___wmul+1,f,c
 11449  00B852  0E00               	movlw	low _changed_mat
 11450  00B854  2401               	addwf	?___wmul,w,c
 11451  00B856  6ED9               	movwf	fsr2l,c
 11452  00B858  0E03               	movlw	high _changed_mat
 11453  00B85A  2002               	addwfc	?___wmul+1,w,c
 11454  00B85C  6EDA               	movwf	fsr2h,c
 11455  00B85E  0E01               	movlw	1
 11456  00B860  BEDB               	btfsc	plusw2,7,c
 11457  00B862  D006               	goto	u5990
 11458  00B864  0E01               	movlw	1
 11459  00B866  50DB               	movf	plusw2,w,c
 11460  00B868  E122               	bnz	l6584
 11461  00B86A  04DE               	decf	postinc2,w,c
 11462  00B86C  B0D8               	btfsc	status,0,c
 11463  00B86E  D01F               	goto	u6000
 11464  00B870                     u5990:
 11465  00B870  503D               	movf	package_food@j,w,c
 11466  00B872  243B               	addwf	package_food@row_ind,w,c
 11467  00B874  6E01               	movwf	___wmul@multiplier,c
 11468  00B876  503E               	movf	package_food@j+1,w,c
 11469  00B878  203C               	addwfc	package_food@row_ind+1,w,c
 11470  00B87A  6E02               	movwf	___wmul@multiplier+1,c
 11471  00B87C  0E00               	movlw	0
 11472  00B87E  6E04               	movwf	___wmul@multiplicand+1,c
 11473  00B880  0E06               	movlw	6
 11474  00B882  6E03               	movwf	___wmul@multiplicand,c
 11475  00B884  ECB7  F051         	call	___wmul	;wreg free
 11476  00B888  0E04               	movlw	4
 11477  00B88A  2601               	addwf	?___wmul,f,c
 11478  00B88C  0E00               	movlw	0
 11479  00B88E  2202               	addwfc	?___wmul+1,f,c
 11480  00B890  0E00               	movlw	low _changed_mat
 11481  00B892  2401               	addwf	?___wmul,w,c
 11482  00B894  6ED9               	movwf	fsr2l,c
 11483  00B896  0E03               	movlw	high _changed_mat
 11484  00B898  2002               	addwfc	?___wmul+1,w,c
 11485  00B89A  6EDA               	movwf	fsr2h,c
 11486  00B89C  0E01               	movlw	1
 11487  00B89E  BEDB               	btfsc	plusw2,7,c
 11488  00B8A0  D016               	goto	l681
 11489  00B8A2  0E01               	movlw	1
 11490  00B8A4  50DB               	movf	plusw2,w,c
 11491  00B8A6  E103               	bnz	l6584
 11492  00B8A8  04DE               	decf	postinc2,w,c
 11493  00B8AA  A0D8               	btfss	status,0,c
 11494  00B8AC  D010               	goto	l681
 11495  00B8AE                     u6000:
 11496  00B8AE                     l6584:
 11497                           
 11498                           ;machine_code.c: 141: servo_slide(j);
 11499  00B8AE  C03D  F006         	movff	package_food@j,servo_slide@x
 11500  00B8B2  C03E  F007         	movff	package_food@j+1,servo_slide@x+1
 11501  00B8B6  EC8A  F055         	call	_servo_slide	;wreg free
 11502                           
 11503                           ;machine_code.c: 142: load_mech(row_ind, j);
 11504  00B8BA  C03B  F007         	movff	package_food@row_ind,load_mech@row
 11505  00B8BE  C03C  F008         	movff	package_food@row_ind+1,load_mech@row+1
 11506  00B8C2  C03D  F009         	movff	package_food@j,load_mech@j
 11507  00B8C6  C03E  F00A         	movff	package_food@j+1,load_mech@j+1
 11508  00B8CA  EC35  F05A         	call	_load_mech	;wreg free
 11509  00B8CE                     l681:
 11510  00B8CE  4A3D               	infsnz	package_food@j,f,c
 11511  00B8D0  2A3E               	incf	package_food@j+1,f,c
 11512  00B8D2  BE3E               	btfsc	package_food@j+1,7,c
 11513  00B8D4  D793               	goto	l679
 11514  00B8D6  503E               	movf	package_food@j+1,w,c
 11515  00B8D8  E101               	bnz	l6590
 11516  00B8DA  D78C               	goto	L8
 11517  00B8DC                     u6010:
 11518  00B8DC                     l680:
 11519  00B8DC                     l6590:
 11520                           
 11521                           ;machine_code.c: 143: }
 11522                           ;machine_code.c: 144: }
 11523                           ;machine_code.c: 145: _delay((unsigned long)((1000)*(40000000/4000.0)));
 11524  00B8DC  0E33               	movlw	51
 11525  00B8DE  6E34               	movwf	(??_package_food+1)& (0+255),c
 11526  00B8E0  0EBB               	movlw	187
 11527  00B8E2  6E33               	movwf	??_package_food& (0+255),c
 11528  00B8E4  0EE0               	movlw	224
 11529  00B8E6                     u10017:
 11530  00B8E6  2EE8               	decfsz	wreg,f,c
 11531  00B8E8  D7FE               	bra	u10017
 11532  00B8EA  2E33               	decfsz	??_package_food& (0+255),f,c
 11533  00B8EC  D7FC               	bra	u10017
 11534  00B8EE  2E34               	decfsz	(??_package_food+1)& (0+255),f,c
 11535  00B8F0  D7FA               	bra	u10017
 11536                           
 11537                           ;machine_code.c: 146: hook_mech(1);
 11538  00B8F2  0E00               	movlw	0
 11539  00B8F4  6E07               	movwf	hook_mech@z+1,c
 11540  00B8F6  0E01               	movlw	1
 11541  00B8F8  6E06               	movwf	hook_mech@z,c
 11542  00B8FA  ECFA  F051         	call	_hook_mech	;wreg free
 11543  00B8FE                     l676:
 11544  00B8FE  4A39               	infsnz	package_food@i,f,c
 11545  00B900  2A3A               	incf	package_food@i+1,f,c
 11546  00B902  BE3A               	btfsc	package_food@i+1,7,c
 11547  00B904  D707               	goto	l673
 11548  00B906  503A               	movf	package_food@i+1,w,c
 11549  00B908  E101               	bnz	l6598
 11550  00B90A  D6FE               	goto	L9
 11551  00B90C                     u6020:
 11552  00B90C                     l6598:
 11553                           
 11554                           ;machine_code.c: 148: }
 11555                           ;machine_code.c: 150: finalize(curr_height, mat);
 11556  00B90C  C2E4  F027         	movff	_curr_height,finalize@curr_height
 11557  00B910  C2E5  F028         	movff	_curr_height+1,finalize@curr_height+1
 11558  00B914  C031  F029         	movff	package_food@mat,finalize@mat
 11559  00B918  C032  F02A         	movff	package_food@mat+1,finalize@mat+1
 11560  00B91C  EC72  F059         	call	_finalize	;wreg free
 11561  00B920  0012               	return		;funcret
 11562  00B922                     __end_of_package_food:
 11563                           	opt stack 0
 11564                           tblptru	equ	0xFF8
 11565                           tblptrh	equ	0xFF7
 11566                           tblptrl	equ	0xFF6
 11567                           tablat	equ	0xFF5
 11568                           prodh	equ	0xFF4
 11569                           prodl	equ	0xFF3
 11570                           intcon	equ	0xFF2
 11571                           postinc0	equ	0xFEE
 11572                           wreg	equ	0xFE8
 11573                           postinc1	equ	0xFE6
 11574                           postdec1	equ	0xFE5
 11575                           plusw1	equ	0xFE3
 11576                           fsr1h	equ	0xFE2
 11577                           fsr1l	equ	0xFE1
 11578                           indf2	equ	0xFDF
 11579                           postinc2	equ	0xFDE
 11580                           postdec2	equ	0xFDD
 11581                           plusw2	equ	0xFDB
 11582                           fsr2h	equ	0xFDA
 11583                           fsr2l	equ	0xFD9
 11584                           status	equ	0xFD8
 11585                           
 11586 ;; *************** function _sensor_row_check *****************
 11587 ;; Defined at:
 11588 ;;		line 155 in file "machine_code.c"
 11589 ;; Parameters:    Size  Location     Type
 11590 ;;  row_ind         2    6[COMRAM] short 
 11591 ;;  count           2    8[COMRAM] short 
 11592 ;; Auto vars:     Size  Location     Type
 11593 ;;  marked_row      8   12[COMRAM] int [4]
 11594 ;;  i               2   26[COMRAM] short 
 11595 ;;  j               2   24[COMRAM] short 
 11596 ;;  pieces          2   22[COMRAM] short 
 11597 ;;  drawer_bool     2   20[COMRAM] short 
 11598 ;; Return value:  Size  Location     Type
 11599 ;;                  2    6[COMRAM] short 
 11600 ;; Registers used:
 11601 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11602 ;; Tracked objects:
 11603 ;;		On entry : 0/0
 11604 ;;		On exit  : 0/0
 11605 ;;		Unchanged: 0/0
 11606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11607 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11608 ;;      Locals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11609 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11610 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11611 ;;Total ram usage:       22 bytes
 11612 ;; Hardware stack levels used:    1
 11613 ;; Hardware stack levels required when called:    2
 11614 ;; This function calls:
 11615 ;;		___wmul
 11616 ;;		_receive_data_RX
 11617 ;; This function is called by:
 11618 ;;		_package_food
 11619 ;; This function uses a non-reentrant model
 11620 ;;
 11621                           
 11622                           	psect	text6
 11623  00BF6C                     __ptext6:
 11624                           	opt stack 0
 11625  00BF6C                     _sensor_row_check:
 11626                           	opt stack 27
 11627                           
 11628                           ;machine_code.c: 165: short int i = 0, j = 0, drawer_bool = 0, pieces = 0;
 11629                           
 11630                           ;incstack = 0
 11631  00BF6C  0E00               	movlw	0
 11632  00BF6E  6E1C               	movwf	sensor_row_check@i+1,c
 11633  00BF70  0E00               	movlw	0
 11634  00BF72  6E1B               	movwf	sensor_row_check@i,c
 11635  00BF74  0E00               	movlw	0
 11636  00BF76  6E1A               	movwf	sensor_row_check@j+1,c
 11637  00BF78  0E00               	movlw	0
 11638  00BF7A  6E19               	movwf	sensor_row_check@j,c
 11639  00BF7C  0E00               	movlw	0
 11640  00BF7E  6E16               	movwf	sensor_row_check@drawer_bool+1,c
 11641  00BF80  0E00               	movlw	0
 11642  00BF82  6E15               	movwf	sensor_row_check@drawer_bool,c
 11643  00BF84  0E00               	movlw	0
 11644  00BF86  6E18               	movwf	sensor_row_check@pieces+1,c
 11645  00BF88  0E00               	movlw	0
 11646  00BF8A  6E17               	movwf	sensor_row_check@pieces,c
 11647                           
 11648                           ;machine_code.c: 166: int marked_row[4] = {0};
 11649  00BF8C  EE22  F097         	lfsr	2,sensor_row_check@F3197
 11650  00BF90  EE10  F00D         	lfsr	1,sensor_row_check@marked_row
 11651  00BF94  0E07               	movlw	7
 11652  00BF96                     u5321:
 11653  00BF96  CFDB FFE3          	movff	plusw2,plusw1
 11654  00BF9A  06E8               	decf	wreg,f,c
 11655  00BF9C  E2FC               	bc	u5321
 11656                           
 11657                           ;machine_code.c: 168: while (i < 4){
 11658  00BF9E  D00F               	goto	l689
 11659  00BFA0                     
 11660                           ;machine_code.c: 169: marked_row[i] = 0;
 11661  00BFA0  90D8               	bcf	status,0,c
 11662  00BFA2  341B               	rlcf	sensor_row_check@i,w,c
 11663  00BFA4  6ED9               	movwf	fsr2l,c
 11664  00BFA6  341C               	rlcf	sensor_row_check@i+1,w,c
 11665  00BFA8  6EDA               	movwf	fsr2h,c
 11666  00BFAA  0E0D               	movlw	low sensor_row_check@marked_row
 11667  00BFAC  26D9               	addwf	fsr2l,f,c
 11668  00BFAE  0E00               	movlw	high sensor_row_check@marked_row
 11669  00BFB0  22DA               	addwfc	fsr2h,f,c
 11670  00BFB2  0E00               	movlw	0
 11671  00BFB4  6EDE               	movwf	postinc2,c
 11672  00BFB6  0E00               	movlw	0
 11673  00BFB8  6EDD               	movwf	postdec2,c
 11674                           
 11675                           ;machine_code.c: 170: i++;}
 11676  00BFBA  4A1B               	infsnz	sensor_row_check@i,f,c
 11677  00BFBC  2A1C               	incf	sensor_row_check@i+1,f,c
 11678  00BFBE                     l689:
 11679  00BFBE  BE1C               	btfsc	sensor_row_check@i+1,7,c
 11680  00BFC0  D7EF               	goto	l690
 11681  00BFC2  501C               	movf	sensor_row_check@i+1,w,c
 11682  00BFC4  E104               	bnz	l6078
 11683  00BFC6  0E04               	movlw	4
 11684  00BFC8  5C1B               	subwf	sensor_row_check@i,w,c
 11685  00BFCA  A0D8               	btfss	status,0,c
 11686  00BFCC  D7E9               	goto	l690
 11687  00BFCE                     l6078:
 11688                           
 11689                           ;machine_code.c: 171: i = 0;
 11690  00BFCE  0E00               	movlw	0
 11691  00BFD0  6E1C               	movwf	sensor_row_check@i+1,c
 11692  00BFD2  0E00               	movlw	0
 11693  00BFD4  6E1B               	movwf	sensor_row_check@i,c
 11694                           
 11695                           ;machine_code.c: 173: if (count == 0){
 11696  00BFD6  5009               	movf	sensor_row_check@count,w,c
 11697  00BFD8  100A               	iorwf	sensor_row_check@count+1,w,c
 11698  00BFDA  A4D8               	btfss	status,2,c
 11699  00BFDC  D055               	goto	l692
 11700                           
 11701                           ;machine_code.c: 174: for (i = 0; i < 4; i++){
 11702  00BFDE  0E00               	movlw	0
 11703  00BFE0  6E1C               	movwf	sensor_row_check@i+1,c
 11704  00BFE2  0E00               	movlw	0
 11705  00BFE4  6E1B               	movwf	sensor_row_check@i,c
 11706  00BFE6  BE1C               	btfsc	sensor_row_check@i+1,7,c
 11707  00BFE8  D003               	goto	l693
 11708  00BFEA  501C               	movf	sensor_row_check@i+1,w,c
 11709  00BFEC  E148               	bnz	l694
 11710  00BFEE  D043               	goto	L10
 11711  00BFF0                     l693:
 11712                           
 11713                           ;machine_code.c: 175: pieces = 0;
 11714  00BFF0  0E00               	movlw	0
 11715  00BFF2  6E18               	movwf	sensor_row_check@pieces+1,c
 11716  00BFF4  0E00               	movlw	0
 11717  00BFF6  6E17               	movwf	sensor_row_check@pieces,c
 11718                           
 11719                           ;machine_code.c: 176: for (j = 0; j < 3; j++){
 11720  00BFF8  0E00               	movlw	0
 11721  00BFFA  6E1A               	movwf	sensor_row_check@j+1,c
 11722  00BFFC  0E00               	movlw	0
 11723  00BFFE  6E19               	movwf	sensor_row_check@j,c
 11724  00C000                     l6090:
 11725  00C000  BE1A               	btfsc	sensor_row_check@j+1,7,c
 11726  00C002  D006               	goto	l695
 11727  00C004  501A               	movf	sensor_row_check@j+1,w,c
 11728  00C006  E128               	bnz	l6100
 11729  00C008  0E03               	movlw	3
 11730  00C00A  5C19               	subwf	sensor_row_check@j,w,c
 11731  00C00C  B0D8               	btfsc	status,0,c
 11732  00C00E  D024               	goto	u5370
 11733  00C010                     l695:
 11734                           
 11735                           ;machine_code.c: 177: pieces += changed_mat[i + row_ind][j];}
 11736  00C010  5007               	movf	sensor_row_check@row_ind,w,c
 11737  00C012  241B               	addwf	sensor_row_check@i,w,c
 11738  00C014  6E01               	movwf	___wmul@multiplier,c
 11739  00C016  5008               	movf	sensor_row_check@row_ind+1,w,c
 11740  00C018  201C               	addwfc	sensor_row_check@i+1,w,c
 11741  00C01A  6E02               	movwf	___wmul@multiplier+1,c
 11742  00C01C  0E00               	movlw	0
 11743  00C01E  6E04               	movwf	___wmul@multiplicand+1,c
 11744  00C020  0E06               	movlw	6
 11745  00C022  6E03               	movwf	___wmul@multiplicand,c
 11746  00C024  ECB7  F051         	call	___wmul	;wreg free
 11747  00C028  0E00               	movlw	low _changed_mat
 11748  00C02A  6E0B               	movwf	??_sensor_row_check& (0+255),c
 11749  00C02C  0E03               	movlw	high _changed_mat
 11750  00C02E  6E0C               	movwf	(??_sensor_row_check+1)& (0+255),c
 11751  00C030  5001               	movf	?___wmul,w,c
 11752  00C032  260B               	addwf	??_sensor_row_check,f,c
 11753  00C034  5002               	movf	?___wmul+1,w,c
 11754  00C036  220C               	addwfc	??_sensor_row_check+1,f,c
 11755  00C038  90D8               	bcf	status,0,c
 11756  00C03A  3419               	rlcf	sensor_row_check@j,w,c
 11757  00C03C  6ED9               	movwf	fsr2l,c
 11758  00C03E  341A               	rlcf	sensor_row_check@j+1,w,c
 11759  00C040  6EDA               	movwf	fsr2h,c
 11760  00C042  500B               	movf	??_sensor_row_check,w,c
 11761  00C044  26D9               	addwf	fsr2l,f,c
 11762  00C046  500C               	movf	??_sensor_row_check+1,w,c
 11763  00C048  22DA               	addwfc	fsr2h,f,c
 11764  00C04A  50DE               	movf	postinc2,w,c
 11765  00C04C  2617               	addwf	sensor_row_check@pieces,f,c
 11766  00C04E  50DD               	movf	postdec2,w,c
 11767  00C050  2218               	addwfc	sensor_row_check@pieces+1,f,c
 11768  00C052  4A19               	infsnz	sensor_row_check@j,f,c
 11769  00C054  2A1A               	incf	sensor_row_check@j+1,f,c
 11770  00C056  D7D4               	goto	l6090
 11771  00C058                     u5370:
 11772  00C058                     l6100:
 11773                           
 11774                           ;machine_code.c: 178: if (pieces != 0){
 11775  00C058  5017               	movf	sensor_row_check@pieces,w,c
 11776  00C05A  1018               	iorwf	sensor_row_check@pieces+1,w,c
 11777  00C05C  B4D8               	btfsc	status,2,c
 11778  00C05E  D005               	goto	l697
 11779                           
 11780                           ;machine_code.c: 179: drawer_bool = 1;
 11781  00C060  0E00               	movlw	0
 11782  00C062  6E16               	movwf	sensor_row_check@drawer_bool+1,c
 11783  00C064  0E01               	movlw	1
 11784  00C066  6E15               	movwf	sensor_row_check@drawer_bool,c
 11785                           
 11786                           ;machine_code.c: 180: break;}
 11787  00C068  D00A               	goto	u5390
 11788  00C06A                     l697:
 11789  00C06A  4A1B               	infsnz	sensor_row_check@i,f,c
 11790  00C06C  2A1C               	incf	sensor_row_check@i+1,f,c
 11791  00C06E  BE1C               	btfsc	sensor_row_check@i+1,7,c
 11792  00C070  D7BF               	goto	l693
 11793  00C072  501C               	movf	sensor_row_check@i+1,w,c
 11794  00C074  E104               	bnz	u5390
 11795  00C076                     L10:
 11796  00C076  0E04               	movlw	4
 11797  00C078  5C1B               	subwf	sensor_row_check@i,w,c
 11798  00C07A  A0D8               	btfss	status,0,c
 11799  00C07C  D7B9               	goto	l693
 11800  00C07E                     u5390:
 11801  00C07E                     l694:
 11802                           
 11803                           ;machine_code.c: 181: }
 11804                           ;machine_code.c: 182: return drawer_bool;
 11805  00C07E  C015  F007         	movff	sensor_row_check@drawer_bool,?_sensor_row_check
 11806  00C082  C016  F008         	movff	sensor_row_check@drawer_bool+1,?_sensor_row_check+1
 11807                           
 11808                           ;machine_code.c: 184: }
 11809  00C086  0012               	return	
 11810  00C088                     l692:
 11811                           
 11812                           ;machine_code.c: 186: else{
 11813                           ;machine_code.c: 190: data[0] = 'L';
 11814  00C088  0E4C               	movlw	76
 11815  00C08A  6E7F               	movwf	_data,c
 11816                           
 11817                           ;machine_code.c: 191: receive_data_RX();
 11818  00C08C  EC78  F051         	call	_receive_data_RX	;wreg free
 11819                           
 11820                           ;machine_code.c: 192: marked_row[0] = data_RX;
 11821  00C090  C296  F00D         	movff	_data_RX,sensor_row_check@marked_row
 11822  00C094  6A0E               	clrf	sensor_row_check@marked_row+1,c
 11823                           
 11824                           ;machine_code.c: 194: data[0] = 'M';
 11825  00C096  0E4D               	movlw	77
 11826  00C098  6E7F               	movwf	_data,c
 11827                           
 11828                           ;machine_code.c: 195: receive_data_RX();
 11829  00C09A  EC78  F051         	call	_receive_data_RX	;wreg free
 11830                           
 11831                           ;machine_code.c: 196: marked_row[1] = data_RX;
 11832  00C09E  C296  F00F         	movff	_data_RX,sensor_row_check@marked_row+2
 11833  00C0A2  6A10               	clrf	sensor_row_check@marked_row+3,c
 11834                           
 11835                           ;machine_code.c: 198: data[0] = 'N';
 11836  00C0A4  0E4E               	movlw	78
 11837  00C0A6  6E7F               	movwf	_data,c
 11838                           
 11839                           ;machine_code.c: 199: receive_data_RX();
 11840  00C0A8  EC78  F051         	call	_receive_data_RX	;wreg free
 11841                           
 11842                           ;machine_code.c: 200: marked_row[2] = data_RX;
 11843  00C0AC  C296  F011         	movff	_data_RX,sensor_row_check@marked_row+4
 11844  00C0B0  6A12               	clrf	sensor_row_check@marked_row+5,c
 11845                           
 11846                           ;machine_code.c: 202: data[0] = 'O';
 11847  00C0B2  0E4F               	movlw	79
 11848  00C0B4  6E7F               	movwf	_data,c
 11849                           
 11850                           ;machine_code.c: 203: receive_data_RX();
 11851  00C0B6  EC78  F051         	call	_receive_data_RX	;wreg free
 11852                           
 11853                           ;machine_code.c: 204: marked_row[3] = data_RX;
 11854  00C0BA  C296  F013         	movff	_data_RX,sensor_row_check@marked_row+6
 11855  00C0BE  6A14               	clrf	sensor_row_check@marked_row+7,c
 11856                           
 11857                           ;machine_code.c: 207: for (i = 0; i < 4; i++){
 11858  00C0C0  0E00               	movlw	0
 11859  00C0C2  6E1C               	movwf	sensor_row_check@i+1,c
 11860  00C0C4  0E00               	movlw	0
 11861  00C0C6  6E1B               	movwf	sensor_row_check@i,c
 11862  00C0C8  BE1C               	btfsc	sensor_row_check@i+1,7,c
 11863  00C0CA  D008               	goto	l700
 11864  00C0CC  501C               	movf	sensor_row_check@i+1,w,c
 11865  00C0CE  E105               	bnz	u5400
 11866  00C0D0  0E04               	movlw	4
 11867  00C0D2  5C1B               	subwf	sensor_row_check@i,w,c
 11868  00C0D4  B0D8               	btfsc	status,0,c
 11869  00C0D6  D094               	goto	u5490
 11870  00C0D8  D001               	goto	l700
 11871  00C0DA                     u5400:
 11872  00C0DA  D092               	goto	u5490
 11873  00C0DC                     l700:
 11874                           
 11875                           ;machine_code.c: 208: pieces = 0;
 11876  00C0DC  0E00               	movlw	0
 11877  00C0DE  6E18               	movwf	sensor_row_check@pieces+1,c
 11878  00C0E0  0E00               	movlw	0
 11879  00C0E2  6E17               	movwf	sensor_row_check@pieces,c
 11880                           
 11881                           ;machine_code.c: 209: for (j = 0; j < 3; j++){
 11882  00C0E4  0E00               	movlw	0
 11883  00C0E6  6E1A               	movwf	sensor_row_check@j+1,c
 11884  00C0E8  0E00               	movlw	0
 11885  00C0EA  6E19               	movwf	sensor_row_check@j,c
 11886  00C0EC                     l6138:
 11887  00C0EC  BE1A               	btfsc	sensor_row_check@j+1,7,c
 11888  00C0EE  D006               	goto	l702
 11889  00C0F0  501A               	movf	sensor_row_check@j+1,w,c
 11890  00C0F2  E128               	bnz	l6148
 11891  00C0F4  0E03               	movlw	3
 11892  00C0F6  5C19               	subwf	sensor_row_check@j,w,c
 11893  00C0F8  B0D8               	btfsc	status,0,c
 11894  00C0FA  D024               	goto	u5420
 11895  00C0FC                     l702:
 11896                           
 11897                           ;machine_code.c: 210: pieces += changed_mat[i + row_ind][j];}
 11898  00C0FC  5007               	movf	sensor_row_check@row_ind,w,c
 11899  00C0FE  241B               	addwf	sensor_row_check@i,w,c
 11900  00C100  6E01               	movwf	___wmul@multiplier,c
 11901  00C102  5008               	movf	sensor_row_check@row_ind+1,w,c
 11902  00C104  201C               	addwfc	sensor_row_check@i+1,w,c
 11903  00C106  6E02               	movwf	___wmul@multiplier+1,c
 11904  00C108  0E00               	movlw	0
 11905  00C10A  6E04               	movwf	___wmul@multiplicand+1,c
 11906  00C10C  0E06               	movlw	6
 11907  00C10E  6E03               	movwf	___wmul@multiplicand,c
 11908  00C110  ECB7  F051         	call	___wmul	;wreg free
 11909  00C114  0E00               	movlw	low _changed_mat
 11910  00C116  6E0B               	movwf	??_sensor_row_check& (0+255),c
 11911  00C118  0E03               	movlw	high _changed_mat
 11912  00C11A  6E0C               	movwf	(??_sensor_row_check+1)& (0+255),c
 11913  00C11C  5001               	movf	?___wmul,w,c
 11914  00C11E  260B               	addwf	??_sensor_row_check,f,c
 11915  00C120  5002               	movf	?___wmul+1,w,c
 11916  00C122  220C               	addwfc	??_sensor_row_check+1,f,c
 11917  00C124  90D8               	bcf	status,0,c
 11918  00C126  3419               	rlcf	sensor_row_check@j,w,c
 11919  00C128  6ED9               	movwf	fsr2l,c
 11920  00C12A  341A               	rlcf	sensor_row_check@j+1,w,c
 11921  00C12C  6EDA               	movwf	fsr2h,c
 11922  00C12E  500B               	movf	??_sensor_row_check,w,c
 11923  00C130  26D9               	addwf	fsr2l,f,c
 11924  00C132  500C               	movf	??_sensor_row_check+1,w,c
 11925  00C134  22DA               	addwfc	fsr2h,f,c
 11926  00C136  50DE               	movf	postinc2,w,c
 11927  00C138  2617               	addwf	sensor_row_check@pieces,f,c
 11928  00C13A  50DD               	movf	postdec2,w,c
 11929  00C13C  2218               	addwfc	sensor_row_check@pieces+1,f,c
 11930  00C13E  4A19               	infsnz	sensor_row_check@j,f,c
 11931  00C140  2A1A               	incf	sensor_row_check@j+1,f,c
 11932  00C142  D7D4               	goto	l6138
 11933  00C144                     u5420:
 11934  00C144                     l6148:
 11935                           
 11936                           ;machine_code.c: 211: if ((pieces != 0)&&(marked_row[i] != 1)){
 11937  00C144  5017               	movf	sensor_row_check@pieces,w,c
 11938  00C146  1018               	iorwf	sensor_row_check@pieces+1,w,c
 11939  00C148  B4D8               	btfsc	status,2,c
 11940  00C14A  D012               	goto	l704
 11941  00C14C  90D8               	bcf	status,0,c
 11942  00C14E  341B               	rlcf	sensor_row_check@i,w,c
 11943  00C150  6ED9               	movwf	fsr2l,c
 11944  00C152  341C               	rlcf	sensor_row_check@i+1,w,c
 11945  00C154  6EDA               	movwf	fsr2h,c
 11946  00C156  0E0D               	movlw	low sensor_row_check@marked_row
 11947  00C158  26D9               	addwf	fsr2l,f,c
 11948  00C15A  0E00               	movlw	high sensor_row_check@marked_row
 11949  00C15C  22DA               	addwfc	fsr2h,f,c
 11950  00C15E  04DE               	decf	postinc2,w,c
 11951  00C160  10DE               	iorwf	postinc2,w,c
 11952  00C162  B4D8               	btfsc	status,2,c
 11953  00C164  D005               	goto	l704
 11954                           
 11955                           ;machine_code.c: 212: drawer_bool = 1;
 11956  00C166  0E00               	movlw	0
 11957  00C168  6E16               	movwf	sensor_row_check@drawer_bool+1,c
 11958  00C16A  0E01               	movlw	1
 11959  00C16C  6E15               	movwf	sensor_row_check@drawer_bool,c
 11960                           
 11961                           ;machine_code.c: 213: continue;}
 11962  00C16E  D041               	goto	u5480
 11963  00C170                     l704:
 11964                           
 11965                           ;machine_code.c: 214: else if ((pieces != 0)&&(marked_row[i] == 1)){
 11966  00C170  5017               	movf	sensor_row_check@pieces,w,c
 11967  00C172  1018               	iorwf	sensor_row_check@pieces+1,w,c
 11968  00C174  B4D8               	btfsc	status,2,c
 11969  00C176  D03D               	goto	u5480
 11970  00C178  90D8               	bcf	status,0,c
 11971  00C17A  341B               	rlcf	sensor_row_check@i,w,c
 11972  00C17C  6ED9               	movwf	fsr2l,c
 11973  00C17E  341C               	rlcf	sensor_row_check@i+1,w,c
 11974  00C180  6EDA               	movwf	fsr2h,c
 11975  00C182  0E0D               	movlw	low sensor_row_check@marked_row
 11976  00C184  26D9               	addwf	fsr2l,f,c
 11977  00C186  0E00               	movlw	high sensor_row_check@marked_row
 11978  00C188  22DA               	addwfc	fsr2h,f,c
 11979  00C18A  04DE               	decf	postinc2,w,c
 11980  00C18C  10DE               	iorwf	postinc2,w,c
 11981  00C18E  A4D8               	btfss	status,2,c
 11982  00C190  D030               	goto	u5480
 11983                           
 11984                           ;machine_code.c: 215: for (j = 0; j < 3; j++){
 11985  00C192  0E00               	movlw	0
 11986  00C194  6E1A               	movwf	sensor_row_check@j+1,c
 11987  00C196  0E00               	movlw	0
 11988  00C198  6E19               	movwf	sensor_row_check@j,c
 11989  00C19A                     l6162:
 11990  00C19A  BE1A               	btfsc	sensor_row_check@j+1,7,c
 11991  00C19C  D006               	goto	l708
 11992  00C19E  501A               	movf	sensor_row_check@j+1,w,c
 11993  00C1A0  E128               	bnz	l6172
 11994  00C1A2  0E03               	movlw	3
 11995  00C1A4  5C19               	subwf	sensor_row_check@j,w,c
 11996  00C1A6  B0D8               	btfsc	status,0,c
 11997  00C1A8  D024               	goto	u5480
 11998  00C1AA                     l708:
 11999                           
 12000                           ;machine_code.c: 216: changed_mat[i + row_ind][j] = 0;}}
 12001  00C1AA  5007               	movf	sensor_row_check@row_ind,w,c
 12002  00C1AC  241B               	addwf	sensor_row_check@i,w,c
 12003  00C1AE  6E01               	movwf	___wmul@multiplier,c
 12004  00C1B0  5008               	movf	sensor_row_check@row_ind+1,w,c
 12005  00C1B2  201C               	addwfc	sensor_row_check@i+1,w,c
 12006  00C1B4  6E02               	movwf	___wmul@multiplier+1,c
 12007  00C1B6  0E00               	movlw	0
 12008  00C1B8  6E04               	movwf	___wmul@multiplicand+1,c
 12009  00C1BA  0E06               	movlw	6
 12010  00C1BC  6E03               	movwf	___wmul@multiplicand,c
 12011  00C1BE  ECB7  F051         	call	___wmul	;wreg free
 12012  00C1C2  0E00               	movlw	low _changed_mat
 12013  00C1C4  6E0B               	movwf	??_sensor_row_check& (0+255),c
 12014  00C1C6  0E03               	movlw	high _changed_mat
 12015  00C1C8  6E0C               	movwf	(??_sensor_row_check+1)& (0+255),c
 12016  00C1CA  5001               	movf	?___wmul,w,c
 12017  00C1CC  260B               	addwf	??_sensor_row_check,f,c
 12018  00C1CE  5002               	movf	?___wmul+1,w,c
 12019  00C1D0  220C               	addwfc	??_sensor_row_check+1,f,c
 12020  00C1D2  90D8               	bcf	status,0,c
 12021  00C1D4  3419               	rlcf	sensor_row_check@j,w,c
 12022  00C1D6  6ED9               	movwf	fsr2l,c
 12023  00C1D8  341A               	rlcf	sensor_row_check@j+1,w,c
 12024  00C1DA  6EDA               	movwf	fsr2h,c
 12025  00C1DC  500B               	movf	??_sensor_row_check,w,c
 12026  00C1DE  26D9               	addwf	fsr2l,f,c
 12027  00C1E0  500C               	movf	??_sensor_row_check+1,w,c
 12028  00C1E2  22DA               	addwfc	fsr2h,f,c
 12029  00C1E4  0E00               	movlw	0
 12030  00C1E6  6EDE               	movwf	postinc2,c
 12031  00C1E8  0E00               	movlw	0
 12032  00C1EA  6EDD               	movwf	postdec2,c
 12033  00C1EC  4A19               	infsnz	sensor_row_check@j,f,c
 12034  00C1EE  2A1A               	incf	sensor_row_check@j+1,f,c
 12035  00C1F0  D7D4               	goto	l6162
 12036  00C1F2                     u5480:
 12037  00C1F2                     l6172:
 12038  00C1F2  4A1B               	infsnz	sensor_row_check@i,f,c
 12039  00C1F4  2A1C               	incf	sensor_row_check@i+1,f,c
 12040  00C1F6  BE1C               	btfsc	sensor_row_check@i+1,7,c
 12041  00C1F8  D771               	goto	l700
 12042  00C1FA  501C               	movf	sensor_row_check@i+1,w,c
 12043  00C1FC  E101               	bnz	l6176
 12044  00C1FE  D768               	goto	L11
 12045  00C200                     u5490:
 12046  00C200                     l6176:
 12047                           
 12048                           ;machine_code.c: 217: }
 12049                           ;machine_code.c: 219: for (i = 0; i < 4; i++){
 12050  00C200  0E00               	movlw	0
 12051  00C202  6E1C               	movwf	sensor_row_check@i+1,c
 12052  00C204  0E00               	movlw	0
 12053  00C206  6E1B               	movwf	sensor_row_check@i,c
 12054  00C208  BE1C               	btfsc	sensor_row_check@i+1,7,c
 12055  00C20A  D003               	goto	l710
 12056  00C20C  501C               	movf	sensor_row_check@i+1,w,c
 12057  00C20E  E159               	bnz	l711
 12058  00C210  D054               	goto	L12
 12059  00C212                     l710:
 12060                           
 12061                           ;machine_code.c: 220: if (marked_drawers[i] == 0){
 12062  00C212  90D8               	bcf	status,0,c
 12063  00C214  341B               	rlcf	sensor_row_check@i,w,c
 12064  00C216  6ED9               	movwf	fsr2l,c
 12065  00C218  341C               	rlcf	sensor_row_check@i+1,w,c
 12066  00C21A  6EDA               	movwf	fsr2h,c
 12067  00C21C  0EAF               	movlw	low _marked_drawers
 12068  00C21E  26D9               	addwf	fsr2l,f,c
 12069  00C220  0E02               	movlw	high _marked_drawers
 12070  00C222  22DA               	addwfc	fsr2h,f,c
 12071  00C224  50DE               	movf	postinc2,w,c
 12072  00C226  10DE               	iorwf	postinc2,w,c
 12073  00C228  A4D8               	btfss	status,2,c
 12074  00C22A  D041               	goto	u5540
 12075                           
 12076                           ;machine_code.c: 221: for (j = 0; j < 4; j++){
 12077  00C22C  0E00               	movlw	0
 12078  00C22E  6E1A               	movwf	sensor_row_check@j+1,c
 12079  00C230  0E00               	movlw	0
 12080  00C232  6E19               	movwf	sensor_row_check@j,c
 12081  00C234                     l6186:
 12082  00C234  BE1A               	btfsc	sensor_row_check@j+1,7,c
 12083  00C236  D006               	goto	l713
 12084  00C238  501A               	movf	sensor_row_check@j+1,w,c
 12085  00C23A  E139               	bnz	l6198
 12086  00C23C  0E04               	movlw	4
 12087  00C23E  5C19               	subwf	sensor_row_check@j,w,c
 12088  00C240  B0D8               	btfsc	status,0,c
 12089  00C242  D035               	goto	u5540
 12090  00C244                     l713:
 12091                           
 12092                           ;machine_code.c: 222: if (marked_row[j] == 1){
 12093  00C244  90D8               	bcf	status,0,c
 12094  00C246  3419               	rlcf	sensor_row_check@j,w,c
 12095  00C248  6ED9               	movwf	fsr2l,c
 12096  00C24A  341A               	rlcf	sensor_row_check@j+1,w,c
 12097  00C24C  6EDA               	movwf	fsr2h,c
 12098  00C24E  0E0D               	movlw	low sensor_row_check@marked_row
 12099  00C250  26D9               	addwf	fsr2l,f,c
 12100  00C252  0E00               	movlw	high sensor_row_check@marked_row
 12101  00C254  22DA               	addwfc	fsr2h,f,c
 12102  00C256  04DE               	decf	postinc2,w,c
 12103  00C258  10DE               	iorwf	postinc2,w,c
 12104  00C25A  A4D8               	btfss	status,2,c
 12105  00C25C  D025               	goto	l715
 12106                           
 12107                           ;machine_code.c: 223: marked_drawers[i] = (row_ind + j + 1);
 12108  00C25E  5019               	movf	sensor_row_check@j,w,c
 12109  00C260  2407               	addwf	sensor_row_check@row_ind,w,c
 12110  00C262  6E0B               	movwf	??_sensor_row_check& (0+255),c
 12111  00C264  501A               	movf	sensor_row_check@j+1,w,c
 12112  00C266  2008               	addwfc	sensor_row_check@row_ind+1,w,c
 12113  00C268  6E0C               	movwf	(??_sensor_row_check+1)& (0+255),c
 12114  00C26A  0E01               	movlw	1
 12115  00C26C  260B               	addwf	??_sensor_row_check,f,c
 12116  00C26E  0E00               	movlw	0
 12117  00C270  220C               	addwfc	??_sensor_row_check+1,f,c
 12118  00C272  90D8               	bcf	status,0,c
 12119  00C274  341B               	rlcf	sensor_row_check@i,w,c
 12120  00C276  6ED9               	movwf	fsr2l,c
 12121  00C278  341C               	rlcf	sensor_row_check@i+1,w,c
 12122  00C27A  6EDA               	movwf	fsr2h,c
 12123  00C27C  0EAF               	movlw	low _marked_drawers
 12124  00C27E  26D9               	addwf	fsr2l,f,c
 12125  00C280  0E02               	movlw	high _marked_drawers
 12126  00C282  22DA               	addwfc	fsr2h,f,c
 12127  00C284  C00B  FFDE         	movff	??_sensor_row_check,postinc2
 12128  00C288  C00C  FFDD         	movff	??_sensor_row_check+1,postdec2
 12129                           
 12130                           ;machine_code.c: 224: marked_row[j] = 0;
 12131  00C28C  90D8               	bcf	status,0,c
 12132  00C28E  3419               	rlcf	sensor_row_check@j,w,c
 12133  00C290  6ED9               	movwf	fsr2l,c
 12134  00C292  341A               	rlcf	sensor_row_check@j+1,w,c
 12135  00C294  6EDA               	movwf	fsr2h,c
 12136  00C296  0E0D               	movlw	low sensor_row_check@marked_row
 12137  00C298  26D9               	addwf	fsr2l,f,c
 12138  00C29A  0E00               	movlw	high sensor_row_check@marked_row
 12139  00C29C  22DA               	addwfc	fsr2h,f,c
 12140  00C29E  0E00               	movlw	0
 12141  00C2A0  6EDE               	movwf	postinc2,c
 12142  00C2A2  0E00               	movlw	0
 12143  00C2A4  6EDD               	movwf	postdec2,c
 12144                           
 12145                           ;machine_code.c: 225: break;
 12146  00C2A6  D003               	goto	u5540
 12147  00C2A8                     l715:
 12148  00C2A8  4A19               	infsnz	sensor_row_check@j,f,c
 12149  00C2AA  2A1A               	incf	sensor_row_check@j+1,f,c
 12150  00C2AC  D7C3               	goto	l6186
 12151  00C2AE                     u5540:
 12152  00C2AE                     l6198:
 12153  00C2AE  4A1B               	infsnz	sensor_row_check@i,f,c
 12154  00C2B0  2A1C               	incf	sensor_row_check@i+1,f,c
 12155  00C2B2  BE1C               	btfsc	sensor_row_check@i+1,7,c
 12156  00C2B4  D7AE               	goto	l710
 12157  00C2B6  501C               	movf	sensor_row_check@i+1,w,c
 12158  00C2B8  E104               	bnz	u5550
 12159  00C2BA                     L12:
 12160  00C2BA  0E04               	movlw	4
 12161  00C2BC  5C1B               	subwf	sensor_row_check@i,w,c
 12162  00C2BE  A0D8               	btfss	status,0,c
 12163  00C2C0  D7A8               	goto	l710
 12164  00C2C2                     u5550:
 12165  00C2C2                     l711:
 12166                           
 12167                           ;machine_code.c: 226: }}}}
 12168                           ;machine_code.c: 228: return drawer_bool;
 12169  00C2C2  C015  F007         	movff	sensor_row_check@drawer_bool,?_sensor_row_check
 12170  00C2C6  C016  F008         	movff	sensor_row_check@drawer_bool+1,?_sensor_row_check+1
 12171  00C2CA  0012               	return	
 12172  00C2CC                     __end_of_sensor_row_check:
 12173                           	opt stack 0
 12174                           tblptru	equ	0xFF8
 12175                           tblptrh	equ	0xFF7
 12176                           tblptrl	equ	0xFF6
 12177                           tablat	equ	0xFF5
 12178                           prodh	equ	0xFF4
 12179                           prodl	equ	0xFF3
 12180                           intcon	equ	0xFF2
 12181                           postinc0	equ	0xFEE
 12182                           wreg	equ	0xFE8
 12183                           postinc1	equ	0xFE6
 12184                           postdec1	equ	0xFE5
 12185                           plusw1	equ	0xFE3
 12186                           fsr1h	equ	0xFE2
 12187                           fsr1l	equ	0xFE1
 12188                           indf2	equ	0xFDF
 12189                           postinc2	equ	0xFDE
 12190                           postdec2	equ	0xFDD
 12191                           plusw2	equ	0xFDB
 12192                           fsr2h	equ	0xFDA
 12193                           fsr2l	equ	0xFD9
 12194                           status	equ	0xFD8
 12195                           
 12196 ;; *************** function _load_mech *****************
 12197 ;; Defined at:
 12198 ;;		line 367 in file "machine_code.c"
 12199 ;; Parameters:    Size  Location     Type
 12200 ;;  row             2    6[COMRAM] short 
 12201 ;;  j               2    8[COMRAM] short 
 12202 ;; Auto vars:     Size  Location     Type
 12203 ;;  i               2   14[COMRAM] short 
 12204 ;;  pieces          2   12[COMRAM] short 
 12205 ;; Return value:  Size  Location     Type
 12206 ;;                  1    wreg      void 
 12207 ;; Registers used:
 12208 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12209 ;; Tracked objects:
 12210 ;;		On entry : 0/0
 12211 ;;		On exit  : 0/0
 12212 ;;		Unchanged: 0/0
 12213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12214 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12215 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12216 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12217 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12218 ;;Total ram usage:       10 bytes
 12219 ;; Hardware stack levels used:    1
 12220 ;; Hardware stack levels required when called:    2
 12221 ;; This function calls:
 12222 ;;		___wmul
 12223 ;;		_receive_data_RX
 12224 ;;		_uartTransmitBlocking
 12225 ;; This function is called by:
 12226 ;;		_package_food
 12227 ;; This function uses a non-reentrant model
 12228 ;;
 12229                           
 12230                           	psect	text7
 12231  00B46A                     __ptext7:
 12232                           	opt stack 0
 12233  00B46A                     _load_mech:
 12234                           	opt stack 27
 12235                           
 12236                           ;machine_code.c: 378: short int i = 0, pieces = 0;
 12237                           
 12238                           ;incstack = 0
 12239  00B46A  0E00               	movlw	0
 12240  00B46C  6E10               	movwf	load_mech@i+1,c
 12241  00B46E  0E00               	movlw	0
 12242  00B470  6E0F               	movwf	load_mech@i,c
 12243  00B472  0E00               	movlw	0
 12244  00B474  6E0E               	movwf	load_mech@pieces+1,c
 12245  00B476  0E00               	movlw	0
 12246  00B478  6E0D               	movwf	load_mech@pieces,c
 12247                           
 12248                           ;machine_code.c: 380: while(i < 3){
 12249  00B47A  D10A               	goto	l766
 12250  00B47C                     
 12251                           ;machine_code.c: 381: pieces = 0; p_count = 0;
 12252  00B47C  0E00               	movlw	0
 12253  00B47E  6E0E               	movwf	load_mech@pieces+1,c
 12254  00B480  0E00               	movlw	0
 12255  00B482  6E0D               	movwf	load_mech@pieces,c
 12256  00B484  0E00               	movlw	0
 12257  00B486  0102               	movlb	2	; () banked
 12258  00B488  6FD1               	movwf	(_p_count+1)& (0+255),b
 12259  00B48A  0E00               	movlw	0
 12260  00B48C  6FD0               	movwf	_p_count& (0+255),b
 12261                           
 12262                           ; BSR set to: 2
 12263                           ;machine_code.c: 383: if (i == 0){
 12264  00B48E  500F               	movf	load_mech@i,w,c
 12265  00B490  1010               	iorwf	load_mech@i+1,w,c
 12266  00B492  A4D8               	btfss	status,2,c
 12267  00B494  D051               	goto	l768
 12268                           
 12269                           ; BSR set to: 2
 12270                           ;machine_code.c: 384: pieces = changed_mat[row + j][i];
 12271  00B496  5009               	movf	load_mech@j,w,c
 12272  00B498  2407               	addwf	load_mech@row,w,c
 12273  00B49A  6E01               	movwf	___wmul@multiplier,c
 12274  00B49C  500A               	movf	load_mech@j+1,w,c
 12275  00B49E  2008               	addwfc	load_mech@row+1,w,c
 12276  00B4A0  6E02               	movwf	___wmul@multiplier+1,c
 12277  00B4A2  0E00               	movlw	0
 12278  00B4A4  6E04               	movwf	___wmul@multiplicand+1,c
 12279  00B4A6  0E06               	movlw	6
 12280  00B4A8  6E03               	movwf	___wmul@multiplicand,c
 12281  00B4AA  ECB7  F051         	call	___wmul	;wreg free
 12282  00B4AE  0E00               	movlw	low _changed_mat
 12283  00B4B0  6E0B               	movwf	??_load_mech& (0+255),c
 12284  00B4B2  0E03               	movlw	high _changed_mat
 12285  00B4B4  6E0C               	movwf	(??_load_mech+1)& (0+255),c
 12286  00B4B6  5001               	movf	?___wmul,w,c
 12287  00B4B8  260B               	addwf	??_load_mech,f,c
 12288  00B4BA  5002               	movf	?___wmul+1,w,c
 12289  00B4BC  220C               	addwfc	??_load_mech+1,f,c
 12290  00B4BE  90D8               	bcf	status,0,c
 12291  00B4C0  340F               	rlcf	load_mech@i,w,c
 12292  00B4C2  6ED9               	movwf	fsr2l,c
 12293  00B4C4  3410               	rlcf	load_mech@i+1,w,c
 12294  00B4C6  6EDA               	movwf	fsr2h,c
 12295  00B4C8  500B               	movf	??_load_mech,w,c
 12296  00B4CA  26D9               	addwf	fsr2l,f,c
 12297  00B4CC  500C               	movf	??_load_mech+1,w,c
 12298  00B4CE  22DA               	addwfc	fsr2h,f,c
 12299  00B4D0  CFDE F00D          	movff	postinc2,load_mech@pieces
 12300  00B4D4  CFDD F00E          	movff	postdec2,load_mech@pieces+1
 12301                           
 12302                           ;machine_code.c: 385: if (pieces != 0){
 12303  00B4D8  500D               	movf	load_mech@pieces,w,c
 12304  00B4DA  100E               	iorwf	load_mech@pieces+1,w,c
 12305  00B4DC  A4D8               	btfss	status,2,c
 12306  00B4DE  D020               	goto	l770
 12307  00B4E0  D0D5               	goto	u5670
 12308  00B4E2                     
 12309                           ;machine_code.c: 387: data[0] = '1';
 12310  00B4E2  0E31               	movlw	49
 12311  00B4E4  6E7F               	movwf	_data,c
 12312                           
 12313                           ;machine_code.c: 388: uartTransmitBlocking(data, 1);
 12314  00B4E6  0E7F               	movlw	low _data
 12315  00B4E8  6E01               	movwf	uartTransmitBlocking@data,c
 12316  00B4EA  0E00               	movlw	high _data
 12317  00B4EC  6E02               	movwf	uartTransmitBlocking@data+1,c
 12318  00B4EE  0E01               	movlw	1
 12319  00B4F0  6E03               	movwf	uartTransmitBlocking@numBytes,c
 12320  00B4F2  ECD4  F054         	call	_uartTransmitBlocking	;wreg free
 12321                           
 12322                           ;machine_code.c: 389: data[0] = 'P';
 12323  00B4F6  0E50               	movlw	80
 12324  00B4F8  6E7F               	movwf	_data,c
 12325                           
 12326                           ;machine_code.c: 390: receive_data_RX();
 12327  00B4FA  EC78  F051         	call	_receive_data_RX	;wreg free
 12328                           
 12329                           ;machine_code.c: 391: if (data_RX == 1){p_count++;}
 12330  00B4FE  0102               	movlb	2	; () banked
 12331  00B500  0596               	decf	_data_RX& (0+255),w,b
 12332  00B502  A4D8               	btfss	status,2,c
 12333  00B504  D002               	goto	l772
 12334                           
 12335                           ; BSR set to: 2
 12336  00B506  4BD0               	infsnz	_p_count& (0+255),f,b
 12337  00B508  2BD1               	incf	(_p_count+1)& (0+255),f,b
 12338  00B50A                     l772:
 12339                           
 12340                           ; BSR set to: 2
 12341                           ;machine_code.c: 392: _delay((unsigned long)((100)*(40000000/4000.0)));
 12342                           
 12343                           ; BSR set to: 2
 12344  00B50A  0E06               	movlw	6
 12345  00B50C  6E0C               	movwf	(??_load_mech+1)& (0+255),c
 12346  00B50E  0E13               	movlw	19
 12347  00B510  6E0B               	movwf	??_load_mech& (0+255),c
 12348  00B512  0EAE               	movlw	174
 12349  00B514                     u10027:
 12350  00B514  2EE8               	decfsz	wreg,f,c
 12351  00B516  D7FE               	bra	u10027
 12352  00B518  2E0B               	decfsz	??_load_mech& (0+255),f,c
 12353  00B51A  D7FC               	bra	u10027
 12354  00B51C  2E0C               	decfsz	(??_load_mech+1)& (0+255),f,c
 12355  00B51E  D7FA               	bra	u10027
 12356  00B520                     l770:
 12357  00B520  500D               	movf	load_mech@pieces,w,c
 12358  00B522  0102               	movlb	2	; () banked
 12359  00B524  5DD0               	subwf	_p_count& (0+255),w,b
 12360  00B526  51D1               	movf	(_p_count+1)& (0+255),w,b
 12361  00B528  0A80               	xorlw	128
 12362  00B52A  6E0B               	movwf	??_load_mech& (0+255),c
 12363  00B52C  500E               	movf	load_mech@pieces+1,w,c
 12364  00B52E  0A80               	xorlw	128
 12365  00B530  580B               	subwfb	??_load_mech& (0+255),w,c
 12366  00B532  B0D8               	btfsc	status,0,c
 12367  00B534  D0AB               	goto	u5670
 12368  00B536  D7D5               	goto	l771
 12369  00B538                     l768:
 12370                           
 12371                           ; BSR set to: 2
 12372                           ;machine_code.c: 395: else if (i == 1){
 12373                           
 12374                           ; BSR set to: 2
 12375  00B538  040F               	decf	load_mech@i,w,c
 12376  00B53A  1010               	iorwf	load_mech@i+1,w,c
 12377  00B53C  A4D8               	btfss	status,2,c
 12378  00B53E  D051               	goto	l775
 12379                           
 12380                           ; BSR set to: 2
 12381                           ;machine_code.c: 396: pieces = changed_mat[row + j][i];
 12382  00B540  5009               	movf	load_mech@j,w,c
 12383  00B542  2407               	addwf	load_mech@row,w,c
 12384  00B544  6E01               	movwf	___wmul@multiplier,c
 12385  00B546  500A               	movf	load_mech@j+1,w,c
 12386  00B548  2008               	addwfc	load_mech@row+1,w,c
 12387  00B54A  6E02               	movwf	___wmul@multiplier+1,c
 12388  00B54C  0E00               	movlw	0
 12389  00B54E  6E04               	movwf	___wmul@multiplicand+1,c
 12390  00B550  0E06               	movlw	6
 12391  00B552  6E03               	movwf	___wmul@multiplicand,c
 12392  00B554  ECB7  F051         	call	___wmul	;wreg free
 12393  00B558  0E00               	movlw	low _changed_mat
 12394  00B55A  6E0B               	movwf	??_load_mech& (0+255),c
 12395  00B55C  0E03               	movlw	high _changed_mat
 12396  00B55E  6E0C               	movwf	(??_load_mech+1)& (0+255),c
 12397  00B560  5001               	movf	?___wmul,w,c
 12398  00B562  260B               	addwf	??_load_mech,f,c
 12399  00B564  5002               	movf	?___wmul+1,w,c
 12400  00B566  220C               	addwfc	??_load_mech+1,f,c
 12401  00B568  90D8               	bcf	status,0,c
 12402  00B56A  340F               	rlcf	load_mech@i,w,c
 12403  00B56C  6ED9               	movwf	fsr2l,c
 12404  00B56E  3410               	rlcf	load_mech@i+1,w,c
 12405  00B570  6EDA               	movwf	fsr2h,c
 12406  00B572  500B               	movf	??_load_mech,w,c
 12407  00B574  26D9               	addwf	fsr2l,f,c
 12408  00B576  500C               	movf	??_load_mech+1,w,c
 12409  00B578  22DA               	addwfc	fsr2h,f,c
 12410  00B57A  CFDE F00D          	movff	postinc2,load_mech@pieces
 12411  00B57E  CFDD F00E          	movff	postdec2,load_mech@pieces+1
 12412                           
 12413                           ;machine_code.c: 397: if (pieces != 0){
 12414  00B582  500D               	movf	load_mech@pieces,w,c
 12415  00B584  100E               	iorwf	load_mech@pieces+1,w,c
 12416  00B586  A4D8               	btfss	status,2,c
 12417  00B588  D020               	goto	l777
 12418  00B58A  D080               	goto	u5670
 12419  00B58C                     
 12420                           ;machine_code.c: 399: data[0] = '2';
 12421  00B58C  0E32               	movlw	50
 12422  00B58E  6E7F               	movwf	_data,c
 12423                           
 12424                           ;machine_code.c: 400: uartTransmitBlocking(data, 1);
 12425  00B590  0E7F               	movlw	low _data
 12426  00B592  6E01               	movwf	uartTransmitBlocking@data,c
 12427  00B594  0E00               	movlw	high _data
 12428  00B596  6E02               	movwf	uartTransmitBlocking@data+1,c
 12429  00B598  0E01               	movlw	1
 12430  00B59A  6E03               	movwf	uartTransmitBlocking@numBytes,c
 12431  00B59C  ECD4  F054         	call	_uartTransmitBlocking	;wreg free
 12432                           
 12433                           ;machine_code.c: 401: data[0] = 'P';
 12434  00B5A0  0E50               	movlw	80
 12435  00B5A2  6E7F               	movwf	_data,c
 12436                           
 12437                           ;machine_code.c: 402: receive_data_RX();
 12438  00B5A4  EC78  F051         	call	_receive_data_RX	;wreg free
 12439                           
 12440                           ;machine_code.c: 403: if (data_RX == 1){p_count++;}
 12441  00B5A8  0102               	movlb	2	; () banked
 12442  00B5AA  0596               	decf	_data_RX& (0+255),w,b
 12443  00B5AC  A4D8               	btfss	status,2,c
 12444  00B5AE  D002               	goto	l779
 12445                           
 12446                           ; BSR set to: 2
 12447  00B5B0  4BD0               	infsnz	_p_count& (0+255),f,b
 12448  00B5B2  2BD1               	incf	(_p_count+1)& (0+255),f,b
 12449  00B5B4                     l779:
 12450                           
 12451                           ; BSR set to: 2
 12452                           ;machine_code.c: 404: _delay((unsigned long)((100)*(40000000/4000.0)));
 12453                           
 12454                           ; BSR set to: 2
 12455  00B5B4  0E06               	movlw	6
 12456  00B5B6  6E0C               	movwf	(??_load_mech+1)& (0+255),c
 12457  00B5B8  0E13               	movlw	19
 12458  00B5BA  6E0B               	movwf	??_load_mech& (0+255),c
 12459  00B5BC  0EAE               	movlw	174
 12460  00B5BE                     u10037:
 12461  00B5BE  2EE8               	decfsz	wreg,f,c
 12462  00B5C0  D7FE               	bra	u10037
 12463  00B5C2  2E0B               	decfsz	??_load_mech& (0+255),f,c
 12464  00B5C4  D7FC               	bra	u10037
 12465  00B5C6  2E0C               	decfsz	(??_load_mech+1)& (0+255),f,c
 12466  00B5C8  D7FA               	bra	u10037
 12467  00B5CA                     l777:
 12468  00B5CA  500D               	movf	load_mech@pieces,w,c
 12469  00B5CC  0102               	movlb	2	; () banked
 12470  00B5CE  5DD0               	subwf	_p_count& (0+255),w,b
 12471  00B5D0  51D1               	movf	(_p_count+1)& (0+255),w,b
 12472  00B5D2  0A80               	xorlw	128
 12473  00B5D4  6E0B               	movwf	??_load_mech& (0+255),c
 12474  00B5D6  500E               	movf	load_mech@pieces+1,w,c
 12475  00B5D8  0A80               	xorlw	128
 12476  00B5DA  580B               	subwfb	??_load_mech& (0+255),w,c
 12477  00B5DC  B0D8               	btfsc	status,0,c
 12478  00B5DE  D056               	goto	u5670
 12479  00B5E0  D7D5               	goto	l778
 12480  00B5E2                     l775:
 12481                           
 12482                           ; BSR set to: 2
 12483                           ;machine_code.c: 407: else if (i == 2){
 12484                           
 12485                           ; BSR set to: 2
 12486  00B5E2  0E02               	movlw	2
 12487  00B5E4  180F               	xorwf	load_mech@i,w,c
 12488  00B5E6  1010               	iorwf	load_mech@i+1,w,c
 12489  00B5E8  A4D8               	btfss	status,2,c
 12490  00B5EA  D050               	goto	u5670
 12491                           
 12492                           ; BSR set to: 2
 12493                           ;machine_code.c: 408: pieces = changed_mat[row + j][i];
 12494  00B5EC  5009               	movf	load_mech@j,w,c
 12495  00B5EE  2407               	addwf	load_mech@row,w,c
 12496  00B5F0  6E01               	movwf	___wmul@multiplier,c
 12497  00B5F2  500A               	movf	load_mech@j+1,w,c
 12498  00B5F4  2008               	addwfc	load_mech@row+1,w,c
 12499  00B5F6  6E02               	movwf	___wmul@multiplier+1,c
 12500  00B5F8  0E00               	movlw	0
 12501  00B5FA  6E04               	movwf	___wmul@multiplicand+1,c
 12502  00B5FC  0E06               	movlw	6
 12503  00B5FE  6E03               	movwf	___wmul@multiplicand,c
 12504  00B600  ECB7  F051         	call	___wmul	;wreg free
 12505  00B604  0E00               	movlw	low _changed_mat
 12506  00B606  6E0B               	movwf	??_load_mech& (0+255),c
 12507  00B608  0E03               	movlw	high _changed_mat
 12508  00B60A  6E0C               	movwf	(??_load_mech+1)& (0+255),c
 12509  00B60C  5001               	movf	?___wmul,w,c
 12510  00B60E  260B               	addwf	??_load_mech,f,c
 12511  00B610  5002               	movf	?___wmul+1,w,c
 12512  00B612  220C               	addwfc	??_load_mech+1,f,c
 12513  00B614  90D8               	bcf	status,0,c
 12514  00B616  340F               	rlcf	load_mech@i,w,c
 12515  00B618  6ED9               	movwf	fsr2l,c
 12516  00B61A  3410               	rlcf	load_mech@i+1,w,c
 12517  00B61C  6EDA               	movwf	fsr2h,c
 12518  00B61E  500B               	movf	??_load_mech,w,c
 12519  00B620  26D9               	addwf	fsr2l,f,c
 12520  00B622  500C               	movf	??_load_mech+1,w,c
 12521  00B624  22DA               	addwfc	fsr2h,f,c
 12522  00B626  CFDE F00D          	movff	postinc2,load_mech@pieces
 12523  00B62A  CFDD F00E          	movff	postdec2,load_mech@pieces+1
 12524                           
 12525                           ;machine_code.c: 409: if (pieces != 0){
 12526  00B62E  500D               	movf	load_mech@pieces,w,c
 12527  00B630  100E               	iorwf	load_mech@pieces+1,w,c
 12528  00B632  A4D8               	btfss	status,2,c
 12529  00B634  D020               	goto	l784
 12530  00B636  D02A               	goto	u5670
 12531  00B638                     
 12532                           ;machine_code.c: 411: data[0] = '3';
 12533  00B638  0E33               	movlw	51
 12534  00B63A  6E7F               	movwf	_data,c
 12535                           
 12536                           ;machine_code.c: 412: uartTransmitBlocking(data, 1);
 12537  00B63C  0E7F               	movlw	low _data
 12538  00B63E  6E01               	movwf	uartTransmitBlocking@data,c
 12539  00B640  0E00               	movlw	high _data
 12540  00B642  6E02               	movwf	uartTransmitBlocking@data+1,c
 12541  00B644  0E01               	movlw	1
 12542  00B646  6E03               	movwf	uartTransmitBlocking@numBytes,c
 12543  00B648  ECD4  F054         	call	_uartTransmitBlocking	;wreg free
 12544                           
 12545                           ;machine_code.c: 413: data[0] = 'P';
 12546  00B64C  0E50               	movlw	80
 12547  00B64E  6E7F               	movwf	_data,c
 12548                           
 12549                           ;machine_code.c: 414: receive_data_RX();
 12550  00B650  EC78  F051         	call	_receive_data_RX	;wreg free
 12551                           
 12552                           ;machine_code.c: 415: if (data_RX == 1){p_count++;}
 12553  00B654  0102               	movlb	2	; () banked
 12554  00B656  0596               	decf	_data_RX& (0+255),w,b
 12555  00B658  A4D8               	btfss	status,2,c
 12556  00B65A  D002               	goto	l786
 12557                           
 12558                           ; BSR set to: 2
 12559  00B65C  4BD0               	infsnz	_p_count& (0+255),f,b
 12560  00B65E  2BD1               	incf	(_p_count+1)& (0+255),f,b
 12561  00B660                     l786:
 12562                           
 12563                           ; BSR set to: 2
 12564                           ;machine_code.c: 416: _delay((unsigned long)((100)*(40000000/4000.0)));
 12565                           
 12566                           ; BSR set to: 2
 12567  00B660  0E06               	movlw	6
 12568  00B662  6E0C               	movwf	(??_load_mech+1)& (0+255),c
 12569  00B664  0E13               	movlw	19
 12570  00B666  6E0B               	movwf	??_load_mech& (0+255),c
 12571  00B668  0EAE               	movlw	174
 12572  00B66A                     u10047:
 12573  00B66A  2EE8               	decfsz	wreg,f,c
 12574  00B66C  D7FE               	bra	u10047
 12575  00B66E  2E0B               	decfsz	??_load_mech& (0+255),f,c
 12576  00B670  D7FC               	bra	u10047
 12577  00B672  2E0C               	decfsz	(??_load_mech+1)& (0+255),f,c
 12578  00B674  D7FA               	bra	u10047
 12579  00B676                     l784:
 12580  00B676  500D               	movf	load_mech@pieces,w,c
 12581  00B678  0102               	movlb	2	; () banked
 12582  00B67A  5DD0               	subwf	_p_count& (0+255),w,b
 12583  00B67C  51D1               	movf	(_p_count+1)& (0+255),w,b
 12584  00B67E  0A80               	xorlw	128
 12585  00B680  6E0B               	movwf	??_load_mech& (0+255),c
 12586  00B682  500E               	movf	load_mech@pieces+1,w,c
 12587  00B684  0A80               	xorlw	128
 12588  00B686  580B               	subwfb	??_load_mech& (0+255),w,c
 12589  00B688  A0D8               	btfss	status,0,c
 12590  00B68A  D7D6               	goto	l785
 12591  00B68C                     u5670:
 12592                           
 12593                           ;machine_code.c: 417: }}}
 12594                           ;machine_code.c: 418: i++;
 12595                           
 12596                           ; BSR set to: 2
 12597                           
 12598                           ; BSR set to: 2
 12599                           
 12600                           ; BSR set to: 2
 12601                           
 12602                           ; BSR set to: 2
 12603                           
 12604                           ; BSR set to: 2
 12605  00B68C  4A0F               	infsnz	load_mech@i,f,c
 12606  00B68E  2A10               	incf	load_mech@i+1,f,c
 12607  00B690                     l766:
 12608  00B690  BE10               	btfsc	load_mech@i+1,7,c
 12609  00B692  D6F4               	goto	l767
 12610  00B694  5010               	movf	load_mech@i+1,w,c
 12611  00B696  E104               	bnz	l6270
 12612  00B698  0E03               	movlw	3
 12613  00B69A  5C0F               	subwf	load_mech@i,w,c
 12614  00B69C  A0D8               	btfss	status,0,c
 12615  00B69E  D6EE               	goto	l767
 12616  00B6A0                     l6270:
 12617                           
 12618                           ;machine_code.c: 419: }
 12619                           ;machine_code.c: 420: p_count = 0;
 12620  00B6A0  0E00               	movlw	0
 12621  00B6A2  0102               	movlb	2	; () banked
 12622  00B6A4  6FD1               	movwf	(_p_count+1)& (0+255),b
 12623  00B6A6  0E00               	movlw	0
 12624  00B6A8  6FD0               	movwf	_p_count& (0+255),b
 12625                           
 12626                           ; BSR set to: 2
 12627                           ;machine_code.c: 421: _delay((unsigned long)((500)*(40000000/4000.0)));
 12628  00B6AA  0E1A               	movlw	26
 12629  00B6AC  6E0C               	movwf	(??_load_mech+1)& (0+255),c
 12630  00B6AE  0E5E               	movlw	94
 12631  00B6B0  6E0B               	movwf	??_load_mech& (0+255),c
 12632  00B6B2  0E6E               	movlw	110
 12633  00B6B4                     u10057:
 12634  00B6B4  2EE8               	decfsz	wreg,f,c
 12635  00B6B6  D7FE               	bra	u10057
 12636  00B6B8  2E0B               	decfsz	??_load_mech& (0+255),f,c
 12637  00B6BA  D7FC               	bra	u10057
 12638  00B6BC  2E0C               	decfsz	(??_load_mech+1)& (0+255),f,c
 12639  00B6BE  D7FA               	bra	u10057
 12640  00B6C0  D000               	nop2	
 12641  00B6C2  0012               	return		;funcret
 12642  00B6C4                     __end_of_load_mech:
 12643                           	opt stack 0
 12644                           tblptru	equ	0xFF8
 12645                           tblptrh	equ	0xFF7
 12646                           tblptrl	equ	0xFF6
 12647                           tablat	equ	0xFF5
 12648                           prodh	equ	0xFF4
 12649                           prodl	equ	0xFF3
 12650                           intcon	equ	0xFF2
 12651                           postinc0	equ	0xFEE
 12652                           wreg	equ	0xFE8
 12653                           postinc1	equ	0xFE6
 12654                           postdec1	equ	0xFE5
 12655                           plusw1	equ	0xFE3
 12656                           fsr1h	equ	0xFE2
 12657                           fsr1l	equ	0xFE1
 12658                           indf2	equ	0xFDF
 12659                           postinc2	equ	0xFDE
 12660                           postdec2	equ	0xFDD
 12661                           plusw2	equ	0xFDB
 12662                           fsr2h	equ	0xFDA
 12663                           fsr2l	equ	0xFD9
 12664                           status	equ	0xFD8
 12665                           
 12666 ;; *************** function _initialize *****************
 12667 ;; Defined at:
 12668 ;;		line 473 in file "machine_code.c"
 12669 ;; Parameters:    Size  Location     Type
 12670 ;;  mat             2    6[COMRAM] PTR int [3]
 12671 ;;		 -> main@mat(96), 
 12672 ;; Auto vars:     Size  Location     Type
 12673 ;;  i               2   14[COMRAM] short 
 12674 ;;  j               2   12[COMRAM] short 
 12675 ;; Return value:  Size  Location     Type
 12676 ;;                  1    wreg      void 
 12677 ;; Registers used:
 12678 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12679 ;; Tracked objects:
 12680 ;;		On entry : 0/0
 12681 ;;		On exit  : 0/0
 12682 ;;		Unchanged: 0/0
 12683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12684 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12685 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12686 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12687 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12688 ;;Total ram usage:       10 bytes
 12689 ;; Hardware stack levels used:    1
 12690 ;; Hardware stack levels required when called:    1
 12691 ;; This function calls:
 12692 ;;		___wmul
 12693 ;; This function is called by:
 12694 ;;		_package_food
 12695 ;; This function uses a non-reentrant model
 12696 ;;
 12697                           
 12698                           	psect	text8
 12699  00B036                     __ptext8:
 12700                           	opt stack 0
 12701  00B036                     _initialize:
 12702                           	opt stack 28
 12703                           
 12704                           ;machine_code.c: 476: short int i = 0, j = 0;
 12705                           
 12706                           ;incstack = 0
 12707  00B036  0E00               	movlw	0
 12708  00B038  6E10               	movwf	initialize@i+1,c
 12709  00B03A  0E00               	movlw	0
 12710  00B03C  6E0F               	movwf	initialize@i,c
 12711  00B03E  0E00               	movlw	0
 12712  00B040  6E0E               	movwf	initialize@j+1,c
 12713  00B042  0E00               	movlw	0
 12714  00B044  6E0D               	movwf	initialize@j,c
 12715                           
 12716                           ;machine_code.c: 478: p_count = 0;
 12717  00B046  0E00               	movlw	0
 12718  00B048  0102               	movlb	2	; () banked
 12719  00B04A  6FD1               	movwf	(_p_count+1)& (0+255),b
 12720  00B04C  0E00               	movlw	0
 12721  00B04E  6FD0               	movwf	_p_count& (0+255),b
 12722                           
 12723                           ;machine_code.c: 479: data_RX = 0;
 12724  00B050  0E00               	movlw	0
 12725  00B052  6F96               	movwf	_data_RX& (0+255),b
 12726                           
 12727                           ;machine_code.c: 480: curr_height = 0;
 12728  00B054  0E00               	movlw	0
 12729  00B056  6FE5               	movwf	(_curr_height+1)& (0+255),b
 12730  00B058  0E00               	movlw	0
 12731  00B05A  6FE4               	movwf	_curr_height& (0+255),b
 12732                           
 12733                           ;machine_code.c: 481: data[0] = '0';
 12734  00B05C  0E30               	movlw	48
 12735  00B05E  6E7F               	movwf	_data,c
 12736                           
 12737                           ;machine_code.c: 483: for (i = 0; i < 16; i++){
 12738  00B060  0E00               	movlw	0
 12739  00B062  6E10               	movwf	initialize@i+1,c
 12740  00B064  0E00               	movlw	0
 12741  00B066  6E0F               	movwf	initialize@i,c
 12742  00B068                     l6024:
 12743                           
 12744                           ; BSR set to: 2
 12745  00B068  BE10               	btfsc	initialize@i+1,7,c
 12746  00B06A  D006               	goto	l806
 12747  00B06C  5010               	movf	initialize@i+1,w,c
 12748  00B06E  E150               	bnz	l6044
 12749  00B070  0E10               	movlw	16
 12750  00B072  5C0F               	subwf	initialize@i,w,c
 12751  00B074  B0D8               	btfsc	status,0,c
 12752  00B076  D04C               	goto	u5270
 12753  00B078                     l806:
 12754                           
 12755                           ;machine_code.c: 484: for (j = 0; j < 3; j++){
 12756                           
 12757                           ; BSR set to: 2
 12758  00B078  0E00               	movlw	0
 12759  00B07A  6E0E               	movwf	initialize@j+1,c
 12760  00B07C  0E00               	movlw	0
 12761  00B07E  6E0D               	movwf	initialize@j,c
 12762  00B080                     l6030:
 12763  00B080  BE0E               	btfsc	initialize@j+1,7,c
 12764  00B082  D006               	goto	l808
 12765  00B084  500E               	movf	initialize@j+1,w,c
 12766  00B086  E141               	bnz	l6040
 12767  00B088  0E03               	movlw	3
 12768  00B08A  5C0D               	subwf	initialize@j,w,c
 12769  00B08C  B0D8               	btfsc	status,0,c
 12770  00B08E  D03D               	goto	u5260
 12771  00B090                     l808:
 12772                           
 12773                           ;machine_code.c: 485: changed_mat[i][j] = mat[i][j];}}
 12774  00B090  C00F  F001         	movff	initialize@i,___wmul@multiplier
 12775  00B094  C010  F002         	movff	initialize@i+1,___wmul@multiplier+1
 12776  00B098  0E00               	movlw	0
 12777  00B09A  6E04               	movwf	___wmul@multiplicand+1,c
 12778  00B09C  0E06               	movlw	6
 12779  00B09E  6E03               	movwf	___wmul@multiplicand,c
 12780  00B0A0  ECB7  F051         	call	___wmul	;wreg free
 12781  00B0A4  C007  F009         	movff	initialize@mat,??_initialize
 12782  00B0A8  C008  F00A         	movff	initialize@mat+1,??_initialize+1
 12783  00B0AC  5001               	movf	?___wmul,w,c
 12784  00B0AE  2609               	addwf	??_initialize,f,c
 12785  00B0B0  5002               	movf	?___wmul+1,w,c
 12786  00B0B2  220A               	addwfc	??_initialize+1,f,c
 12787  00B0B4  90D8               	bcf	status,0,c
 12788  00B0B6  340D               	rlcf	initialize@j,w,c
 12789  00B0B8  6ED9               	movwf	fsr2l,c
 12790  00B0BA  340E               	rlcf	initialize@j+1,w,c
 12791  00B0BC  6EDA               	movwf	fsr2h,c
 12792  00B0BE  5009               	movf	??_initialize,w,c
 12793  00B0C0  26D9               	addwf	fsr2l,f,c
 12794  00B0C2  500A               	movf	??_initialize+1,w,c
 12795  00B0C4  22DA               	addwfc	fsr2h,f,c
 12796  00B0C6  C00F  F001         	movff	initialize@i,___wmul@multiplier
 12797  00B0CA  C010  F002         	movff	initialize@i+1,___wmul@multiplier+1
 12798  00B0CE  0E00               	movlw	0
 12799  00B0D0  6E04               	movwf	___wmul@multiplicand+1,c
 12800  00B0D2  0E06               	movlw	6
 12801  00B0D4  6E03               	movwf	___wmul@multiplicand,c
 12802  00B0D6  ECB7  F051         	call	___wmul	;wreg free
 12803  00B0DA  0E00               	movlw	low _changed_mat
 12804  00B0DC  6E0B               	movwf	(??_initialize+2)& (0+255),c
 12805  00B0DE  0E03               	movlw	high _changed_mat
 12806  00B0E0  6E0C               	movwf	(??_initialize+3)& (0+255),c
 12807  00B0E2  5001               	movf	?___wmul,w,c
 12808  00B0E4  260B               	addwf	??_initialize+2,f,c
 12809  00B0E6  5002               	movf	?___wmul+1,w,c
 12810  00B0E8  220C               	addwfc	??_initialize+3,f,c
 12811  00B0EA  90D8               	bcf	status,0,c
 12812  00B0EC  340D               	rlcf	initialize@j,w,c
 12813  00B0EE  6EE1               	movwf	fsr1l,c
 12814  00B0F0  340E               	rlcf	initialize@j+1,w,c
 12815  00B0F2  6EE2               	movwf	fsr1h,c
 12816  00B0F4  500B               	movf	??_initialize+2,w,c
 12817  00B0F6  26E1               	addwf	fsr1l,f,c
 12818  00B0F8  500C               	movf	??_initialize+3,w,c
 12819  00B0FA  22E2               	addwfc	fsr1h,f,c
 12820  00B0FC  CFDE FFE6          	movff	postinc2,postinc1
 12821  00B100  CFDD FFE5          	movff	postdec2,postdec1
 12822  00B104  4A0D               	infsnz	initialize@j,f,c
 12823  00B106  2A0E               	incf	initialize@j+1,f,c
 12824  00B108  D7BB               	goto	l6030
 12825  00B10A                     u5260:
 12826  00B10A                     l6040:
 12827  00B10A  4A0F               	infsnz	initialize@i,f,c
 12828  00B10C  2A10               	incf	initialize@i+1,f,c
 12829  00B10E  D7AC               	goto	l6024
 12830  00B110                     u5270:
 12831  00B110                     l6044:
 12832                           
 12833                           ;machine_code.c: 486: for (i = 0; i < 4; i++){
 12834  00B110  0E00               	movlw	0
 12835  00B112  6E10               	movwf	initialize@i+1,c
 12836  00B114  0E00               	movlw	0
 12837  00B116  6E0F               	movwf	initialize@i,c
 12838  00B118                     l6046:
 12839  00B118  BE10               	btfsc	initialize@i+1,7,c
 12840  00B11A  D006               	goto	l810
 12841  00B11C  5010               	movf	initialize@i+1,w,c
 12842  00B11E  E114               	bnz	l6056
 12843  00B120  0E04               	movlw	4
 12844  00B122  5C0F               	subwf	initialize@i,w,c
 12845  00B124  B0D8               	btfsc	status,0,c
 12846  00B126  D010               	goto	u5290
 12847  00B128                     l810:
 12848                           
 12849                           ;machine_code.c: 487: marked_drawers[i] = 0;}
 12850  00B128  90D8               	bcf	status,0,c
 12851  00B12A  340F               	rlcf	initialize@i,w,c
 12852  00B12C  6ED9               	movwf	fsr2l,c
 12853  00B12E  3410               	rlcf	initialize@i+1,w,c
 12854  00B130  6EDA               	movwf	fsr2h,c
 12855  00B132  0EAF               	movlw	low _marked_drawers
 12856  00B134  26D9               	addwf	fsr2l,f,c
 12857  00B136  0E02               	movlw	high _marked_drawers
 12858  00B138  22DA               	addwfc	fsr2h,f,c
 12859  00B13A  0E00               	movlw	0
 12860  00B13C  6EDE               	movwf	postinc2,c
 12861  00B13E  0E00               	movlw	0
 12862  00B140  6EDD               	movwf	postdec2,c
 12863  00B142  4A0F               	infsnz	initialize@i,f,c
 12864  00B144  2A10               	incf	initialize@i+1,f,c
 12865  00B146  D7E8               	goto	l6046
 12866  00B148                     u5290:
 12867  00B148                     l6056:
 12868                           
 12869                           ;machine_code.c: 488: for (i = 0; i < 3; i++){
 12870  00B148  0E00               	movlw	0
 12871  00B14A  6E10               	movwf	initialize@i+1,c
 12872  00B14C  0E00               	movlw	0
 12873  00B14E  6E0F               	movwf	initialize@i,c
 12874  00B150                     l6058:
 12875  00B150  BE10               	btfsc	initialize@i+1,7,c
 12876  00B152  D006               	goto	l812
 12877  00B154  5010               	movf	initialize@i+1,w,c
 12878  00B156  E114               	bnz	l814
 12879  00B158  0E03               	movlw	3
 12880  00B15A  5C0F               	subwf	initialize@i,w,c
 12881  00B15C  B0D8               	btfsc	status,0,c
 12882  00B15E  0012               	return	
 12883  00B160                     l812:
 12884                           
 12885                           ;machine_code.c: 489: reservoir_count[i] = 0;}
 12886  00B160  90D8               	bcf	status,0,c
 12887  00B162  340F               	rlcf	initialize@i,w,c
 12888  00B164  6ED9               	movwf	fsr2l,c
 12889  00B166  3410               	rlcf	initialize@i+1,w,c
 12890  00B168  6EDA               	movwf	fsr2h,c
 12891  00B16A  0EBE               	movlw	low _reservoir_count
 12892  00B16C  26D9               	addwf	fsr2l,f,c
 12893  00B16E  0E02               	movlw	high _reservoir_count
 12894  00B170  22DA               	addwfc	fsr2h,f,c
 12895  00B172  0E00               	movlw	0
 12896  00B174  6EDE               	movwf	postinc2,c
 12897  00B176  0E00               	movlw	0
 12898  00B178  6EDD               	movwf	postdec2,c
 12899  00B17A  4A0F               	infsnz	initialize@i,f,c
 12900  00B17C  2A10               	incf	initialize@i+1,f,c
 12901  00B17E  D7E8               	goto	l6058
 12902  00B180                     l814:
 12903  00B180  0012               	return		;funcret
 12904  00B182                     __end_of_initialize:
 12905                           	opt stack 0
 12906                           tblptru	equ	0xFF8
 12907                           tblptrh	equ	0xFF7
 12908                           tblptrl	equ	0xFF6
 12909                           tablat	equ	0xFF5
 12910                           prodh	equ	0xFF4
 12911                           prodl	equ	0xFF3
 12912                           intcon	equ	0xFF2
 12913                           postinc0	equ	0xFEE
 12914                           wreg	equ	0xFE8
 12915                           postinc1	equ	0xFE6
 12916                           postdec1	equ	0xFE5
 12917                           plusw1	equ	0xFE3
 12918                           fsr1h	equ	0xFE2
 12919                           fsr1l	equ	0xFE1
 12920                           indf2	equ	0xFDF
 12921                           postinc2	equ	0xFDE
 12922                           postdec2	equ	0xFDD
 12923                           plusw2	equ	0xFDB
 12924                           fsr2h	equ	0xFDA
 12925                           fsr2l	equ	0xFD9
 12926                           status	equ	0xFD8
 12927                           
 12928 ;; *************** function _height_mech *****************
 12929 ;; Defined at:
 12930 ;;		line 265 in file "machine_code.c"
 12931 ;; Parameters:    Size  Location     Type
 12932 ;;  dy              2    7[COMRAM] short 
 12933 ;;  curr_height     2    9[COMRAM] short 
 12934 ;; Auto vars:     Size  Location     Type
 12935 ;;  dy_cpy          2   17[COMRAM] short 
 12936 ;;  lower_row_co    2   15[COMRAM] short 
 12937 ;; Return value:  Size  Location     Type
 12938 ;;                  1    wreg      void 
 12939 ;; Registers used:
 12940 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12941 ;; Tracked objects:
 12942 ;;		On entry : 0/0
 12943 ;;		On exit  : 0/0
 12944 ;;		Unchanged: 0/0
 12945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12946 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12947 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12948 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12949 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12950 ;;Total ram usage:       12 bytes
 12951 ;; Hardware stack levels used:    1
 12952 ;; Hardware stack levels required when called:    2
 12953 ;; This function calls:
 12954 ;;		_hook_mech
 12955 ;;		_uartTransmitBlocking
 12956 ;; This function is called by:
 12957 ;;		_main
 12958 ;;		_package_food
 12959 ;; This function uses a non-reentrant model
 12960 ;;
 12961                           
 12962                           	psect	text9
 12963  00BC3C                     __ptext9:
 12964                           	opt stack 0
 12965  00BC3C                     _height_mech:
 12966                           	opt stack 27
 12967                           
 12968                           ;machine_code.c: 276: short int dy_cpy = dy;
 12969                           
 12970                           ;incstack = 0
 12971  00BC3C  C008  F012         	movff	height_mech@dy,height_mech@dy_cpy
 12972  00BC40  C009  F013         	movff	height_mech@dy+1,height_mech@dy_cpy+1
 12973                           
 12974                           ;machine_code.c: 277: short int lower_row_count = 0;
 12975  00BC44  0E00               	movlw	0
 12976  00BC46  6E11               	movwf	height_mech@lower_row_count+1,c
 12977  00BC48  0E00               	movlw	0
 12978  00BC4A  6E10               	movwf	height_mech@lower_row_count,c
 12979                           
 12980                           ;machine_code.c: 285: if (dy > 0){
 12981  00BC4C  BE09               	btfsc	height_mech@dy+1,7,c
 12982  00BC4E  D15C               	goto	l734
 12983  00BC50  5009               	movf	height_mech@dy+1,w,c
 12984  00BC52  E103               	bnz	u5060
 12985  00BC54  0408               	decf	height_mech@dy,w,c
 12986  00BC56  A0D8               	btfss	status,0,c
 12987  00BC58  D157               	goto	l734
 12988  00BC5A                     u5060:
 12989                           
 12990                           ;machine_code.c: 286: if ((curr_height == 0)&&(dy == 1)){
 12991  00BC5A  500A               	movf	height_mech@curr_height,w,c
 12992  00BC5C  100B               	iorwf	height_mech@curr_height+1,w,c
 12993  00BC5E  A4D8               	btfss	status,2,c
 12994  00BC60  D036               	goto	l735
 12995  00BC62  0408               	decf	height_mech@dy,w,c
 12996  00BC64  1009               	iorwf	height_mech@dy+1,w,c
 12997  00BC66  A4D8               	btfss	status,2,c
 12998  00BC68  D032               	goto	l735
 12999                           
 13000                           ;machine_code.c: 287: hook_mech(1);
 13001  00BC6A  0E00               	movlw	0
 13002  00BC6C  6E07               	movwf	hook_mech@z+1,c
 13003  00BC6E  0E01               	movlw	1
 13004  00BC70  6E06               	movwf	hook_mech@z,c
 13005  00BC72  ECFA  F051         	call	_hook_mech	;wreg free
 13006                           
 13007                           ;machine_code.c: 288: data[0] = 'F';
 13008  00BC76  0E46               	movlw	70
 13009  00BC78  6E7F               	movwf	_data,c
 13010                           
 13011                           ;machine_code.c: 289: uartTransmitBlocking(data, 1);
 13012  00BC7A  0E7F               	movlw	low _data
 13013  00BC7C  6E01               	movwf	uartTransmitBlocking@data,c
 13014  00BC7E  0E00               	movlw	high _data
 13015  00BC80  6E02               	movwf	uartTransmitBlocking@data+1,c
 13016  00BC82  0E01               	movlw	1
 13017  00BC84  6E03               	movwf	uartTransmitBlocking@numBytes,c
 13018  00BC86  ECD4  F054         	call	_uartTransmitBlocking	;wreg free
 13019                           
 13020                           ;machine_code.c: 290: _delay((unsigned long)((2400)*(40000000/4000.0)));
 13021  00BC8A  0E7A               	movlw	122
 13022  00BC8C  6E0D               	movwf	(??_height_mech+1)& (0+255),c
 13023  00BC8E  0EC1               	movlw	193
 13024  00BC90  6E0C               	movwf	??_height_mech& (0+255),c
 13025  00BC92  0E82               	movlw	130
 13026  00BC94                     u10067:
 13027  00BC94  2EE8               	decfsz	wreg,f,c
 13028  00BC96  D7FE               	bra	u10067
 13029  00BC98  2E0C               	decfsz	??_height_mech& (0+255),f,c
 13030  00BC9A  D7FC               	bra	u10067
 13031  00BC9C  2E0D               	decfsz	(??_height_mech+1)& (0+255),f,c
 13032  00BC9E  D7FA               	bra	u10067
 13033                           
 13034                           ;machine_code.c: 291: _delay((unsigned long)((2400)*(40000000/4000.0)));
 13035  00BCA0  0E7A               	movlw	122
 13036  00BCA2  6E0D               	movwf	(??_height_mech+1)& (0+255),c
 13037  00BCA4  0EC1               	movlw	193
 13038  00BCA6  6E0C               	movwf	??_height_mech& (0+255),c
 13039  00BCA8  0E82               	movlw	130
 13040  00BCAA                     u10077:
 13041  00BCAA  2EE8               	decfsz	wreg,f,c
 13042  00BCAC  D7FE               	bra	u10077
 13043  00BCAE  2E0C               	decfsz	??_height_mech& (0+255),f,c
 13044  00BCB0  D7FC               	bra	u10077
 13045  00BCB2  2E0D               	decfsz	(??_height_mech+1)& (0+255),f,c
 13046  00BCB4  D7FA               	bra	u10077
 13047                           
 13048                           ;machine_code.c: 292: _delay((unsigned long)((1000)*(40000000/4000.0)));
 13049  00BCB6  0E33               	movlw	51
 13050  00BCB8  6E0D               	movwf	(??_height_mech+1)& (0+255),c
 13051  00BCBA  0EBB               	movlw	187
 13052  00BCBC  6E0C               	movwf	??_height_mech& (0+255),c
 13053  00BCBE  0EE0               	movlw	224
 13054  00BCC0                     u10087:
 13055  00BCC0  2EE8               	decfsz	wreg,f,c
 13056  00BCC2  D7FE               	bra	u10087
 13057  00BCC4  2E0C               	decfsz	??_height_mech& (0+255),f,c
 13058  00BCC6  D7FC               	bra	u10087
 13059  00BCC8  2E0D               	decfsz	(??_height_mech+1)& (0+255),f,c
 13060  00BCCA  D7FA               	bra	u10087
 13061                           
 13062                           ;machine_code.c: 293: }
 13063  00BCCC  0012               	return	
 13064  00BCCE                     l735:
 13065                           
 13066                           ;machine_code.c: 295: else if ((curr_height == 0)&&(dy > 1)){
 13067  00BCCE  500A               	movf	height_mech@curr_height,w,c
 13068  00BCD0  100B               	iorwf	height_mech@curr_height+1,w,c
 13069  00BCD2  B4D8               	btfsc	status,2,c
 13070  00BCD4  BE09               	btfsc	height_mech@dy+1,7,c
 13071  00BCD6  D077               	goto	l737
 13072  00BCD8  5009               	movf	height_mech@dy+1,w,c
 13073  00BCDA  E133               	bnz	l5916
 13074  00BCDC  0E02               	movlw	2
 13075  00BCDE  5C08               	subwf	height_mech@dy,w,c
 13076  00BCE0  B0D8               	btfsc	status,0,c
 13077  00BCE2  D02F               	goto	l738
 13078  00BCE4  D070               	goto	l737
 13079  00BCE6                     
 13080                           ;machine_code.c: 297: data[0] = 'D';
 13081  00BCE6  0E44               	movlw	68
 13082  00BCE8  6E7F               	movwf	_data,c
 13083                           
 13084                           ;machine_code.c: 298: uartTransmitBlocking(data, 1);
 13085  00BCEA  0E7F               	movlw	low _data
 13086  00BCEC  6E01               	movwf	uartTransmitBlocking@data,c
 13087  00BCEE  0E00               	movlw	high _data
 13088  00BCF0  6E02               	movwf	uartTransmitBlocking@data+1,c
 13089  00BCF2  0E01               	movlw	1
 13090  00BCF4  6E03               	movwf	uartTransmitBlocking@numBytes,c
 13091  00BCF6  ECD4  F054         	call	_uartTransmitBlocking	;wreg free
 13092                           
 13093                           ;machine_code.c: 299: dy_cpy--;
 13094  00BCFA  0612               	decf	height_mech@dy_cpy,f,c
 13095  00BCFC  A0D8               	btfss	status,0,c
 13096  00BCFE  0613               	decf	height_mech@dy_cpy+1,f,c
 13097                           
 13098                           ;machine_code.c: 300: _delay((unsigned long)((2400)*(40000000/4000.0)));
 13099  00BD00  0E7A               	movlw	122
 13100  00BD02  6E0D               	movwf	(??_height_mech+1)& (0+255),c
 13101  00BD04  0EC1               	movlw	193
 13102  00BD06  6E0C               	movwf	??_height_mech& (0+255),c
 13103  00BD08  0E82               	movlw	130
 13104  00BD0A                     u10097:
 13105  00BD0A  2EE8               	decfsz	wreg,f,c
 13106  00BD0C  D7FE               	bra	u10097
 13107  00BD0E  2E0C               	decfsz	??_height_mech& (0+255),f,c
 13108  00BD10  D7FC               	bra	u10097
 13109  00BD12  2E0D               	decfsz	(??_height_mech+1)& (0+255),f,c
 13110  00BD14  D7FA               	bra	u10097
 13111                           
 13112                           ;machine_code.c: 301: _delay((unsigned long)((2400)*(40000000/4000.0)));
 13113  00BD16  0E7A               	movlw	122
 13114  00BD18  6E0D               	movwf	(??_height_mech+1)& (0+255),c
 13115  00BD1A  0EC1               	movlw	193
 13116  00BD1C  6E0C               	movwf	??_height_mech& (0+255),c
 13117  00BD1E  0E82               	movlw	130
 13118  00BD20                     u10107:
 13119  00BD20  2EE8               	decfsz	wreg,f,c
 13120  00BD22  D7FE               	bra	u10107
 13121  00BD24  2E0C               	decfsz	??_height_mech& (0+255),f,c
 13122  00BD26  D7FC               	bra	u10107
 13123  00BD28  2E0D               	decfsz	(??_height_mech+1)& (0+255),f,c
 13124  00BD2A  D7FA               	bra	u10107
 13125                           
 13126                           ;machine_code.c: 302: _delay((unsigned long)((2400)*(40000000/4000.0)));
 13127  00BD2C  0E7A               	movlw	122
 13128  00BD2E  6E0D               	movwf	(??_height_mech+1)& (0+255),c
 13129  00BD30  0EC1               	movlw	193
 13130  00BD32  6E0C               	movwf	??_height_mech& (0+255),c
 13131  00BD34  0E82               	movlw	130
 13132  00BD36                     u10117:
 13133  00BD36  2EE8               	decfsz	wreg,f,c
 13134  00BD38  D7FE               	bra	u10117
 13135  00BD3A  2E0C               	decfsz	??_height_mech& (0+255),f,c
 13136  00BD3C  D7FC               	bra	u10117
 13137  00BD3E  2E0D               	decfsz	(??_height_mech+1)& (0+255),f,c
 13138  00BD40  D7FA               	bra	u10117
 13139  00BD42                     l738:
 13140  00BD42                     l5916:
 13141  00BD42  0EFF               	movlw	255
 13142  00BD44  6E0C               	movwf	??_height_mech& (0+255),c
 13143  00BD46  0EFF               	movlw	255
 13144  00BD48  6E0D               	movwf	(??_height_mech+1)& (0+255),c
 13145  00BD4A  C012  F00E         	movff	height_mech@dy_cpy,??_height_mech+2
 13146  00BD4E  C013  F00F         	movff	height_mech@dy_cpy+1,??_height_mech+3
 13147  00BD52  500C               	movf	??_height_mech,w,c
 13148  00BD54  260E               	addwf	??_height_mech+2,f,c
 13149  00BD56  500D               	movf	??_height_mech+1,w,c
 13150  00BD58  220F               	addwfc	??_height_mech+3,f,c
 13151  00BD5A  500E               	movf	??_height_mech+2,w,c
 13152  00BD5C  100F               	iorwf	??_height_mech+3,w,c
 13153  00BD5E  A4D8               	btfss	status,2,c
 13154  00BD60  D7C2               	goto	l739
 13155                           
 13156                           ;machine_code.c: 303: }
 13157                           ;machine_code.c: 304: hook_mech(1);
 13158  00BD62  0E00               	movlw	0
 13159  00BD64  6E07               	movwf	hook_mech@z+1,c
 13160  00BD66  0E01               	movlw	1
 13161  00BD68  6E06               	movwf	hook_mech@z,c
 13162  00BD6A  ECFA  F051         	call	_hook_mech	;wreg free
 13163                           
 13164                           ;machine_code.c: 305: data[0] = 'F';
 13165  00BD6E  0E46               	movlw	70
 13166  00BD70  6E7F               	movwf	_data,c
 13167                           
 13168                           ;machine_code.c: 306: uartTransmitBlocking(data, 1);
 13169  00BD72  0E7F               	movlw	low _data
 13170  00BD74  6E01               	movwf	uartTransmitBlocking@data,c
 13171  00BD76  0E00               	movlw	high _data
 13172  00BD78  6E02               	movwf	uartTransmitBlocking@data+1,c
 13173  00BD7A  0E01               	movlw	1
 13174  00BD7C  6E03               	movwf	uartTransmitBlocking@numBytes,c
 13175  00BD7E  ECD4  F054         	call	_uartTransmitBlocking	;wreg free
 13176                           
 13177                           ;machine_code.c: 307: _delay((unsigned long)((2400)*(40000000/4000.0)));
 13178  00BD82  0E7A               	movlw	122
 13179  00BD84  6E0D               	movwf	(??_height_mech+1)& (0+255),c
 13180  00BD86  0EC1               	movlw	193
 13181  00BD88  6E0C               	movwf	??_height_mech& (0+255),c
 13182  00BD8A  0E82               	movlw	130
 13183  00BD8C                     u10127:
 13184  00BD8C  2EE8               	decfsz	wreg,f,c
 13185  00BD8E  D7FE               	bra	u10127
 13186  00BD90  2E0C               	decfsz	??_height_mech& (0+255),f,c
 13187  00BD92  D7FC               	bra	u10127
 13188  00BD94  2E0D               	decfsz	(??_height_mech+1)& (0+255),f,c
 13189  00BD96  D7FA               	bra	u10127
 13190                           
 13191                           ;machine_code.c: 308: _delay((unsigned long)((2400)*(40000000/4000.0)));
 13192  00BD98  0E7A               	movlw	122
 13193  00BD9A  6E0D               	movwf	(??_height_mech+1)& (0+255),c
 13194  00BD9C  0EC1               	movlw	193
 13195  00BD9E  6E0C               	movwf	??_height_mech& (0+255),c
 13196  00BDA0  0E82               	movlw	130
 13197  00BDA2                     u10137:
 13198  00BDA2  2EE8               	decfsz	wreg,f,c
 13199  00BDA4  D7FE               	bra	u10137
 13200  00BDA6  2E0C               	decfsz	??_height_mech& (0+255),f,c
 13201  00BDA8  D7FC               	bra	u10137
 13202  00BDAA  2E0D               	decfsz	(??_height_mech+1)& (0+255),f,c
 13203  00BDAC  D7FA               	bra	u10137
 13204                           
 13205                           ;machine_code.c: 309: _delay((unsigned long)((1000)*(40000000/4000.0)));
 13206  00BDAE  0E33               	movlw	51
 13207  00BDB0  6E0D               	movwf	(??_height_mech+1)& (0+255),c
 13208  00BDB2  0EBB               	movlw	187
 13209  00BDB4  6E0C               	movwf	??_height_mech& (0+255),c
 13210  00BDB6  0EE0               	movlw	224
 13211  00BDB8                     u10147:
 13212  00BDB8  2EE8               	decfsz	wreg,f,c
 13213  00BDBA  D7FE               	bra	u10147
 13214  00BDBC  2E0C               	decfsz	??_height_mech& (0+255),f,c
 13215  00BDBE  D7FC               	bra	u10147
 13216  00BDC0  2E0D               	decfsz	(??_height_mech+1)& (0+255),f,c
 13217  00BDC2  D7FA               	bra	u10147
 13218                           
 13219                           ;machine_code.c: 310: }
 13220  00BDC4  0012               	return	
 13221  00BDC6                     l737:
 13222                           
 13223                           ;machine_code.c: 312: else if ((dy > 0)&&(curr_height != 0)){
 13224  00BDC6  BE09               	btfsc	height_mech@dy+1,7,c
 13225  00BDC8  0012               	return	
 13226  00BDCA  5009               	movf	height_mech@dy+1,w,c
 13227  00BDCC  E103               	bnz	u5120
 13228  00BDCE  0408               	decf	height_mech@dy,w,c
 13229  00BDD0  A0D8               	btfss	status,0,c
 13230  00BDD2  0012               	return	
 13231  00BDD4                     u5120:
 13232  00BDD4  500A               	movf	height_mech@curr_height,w,c
 13233  00BDD6  100B               	iorwf	height_mech@curr_height+1,w,c
 13234  00BDD8  B4D8               	btfsc	status,2,c
 13235  00BDDA  0012               	return	
 13236                           
 13237                           ;machine_code.c: 313: data[0] = 'G';
 13238  00BDDC  0E47               	movlw	71
 13239  00BDDE  6E7F               	movwf	_data,c
 13240                           
 13241                           ;machine_code.c: 314: uartTransmitBlocking(data, 1);
 13242  00BDE0  0E7F               	movlw	low _data
 13243  00BDE2  6E01               	movwf	uartTransmitBlocking@data,c
 13244  00BDE4  0E00               	movlw	high _data
 13245  00BDE6  6E02               	movwf	uartTransmitBlocking@data+1,c
 13246  00BDE8  0E01               	movlw	1
 13247  00BDEA  6E03               	movwf	uartTransmitBlocking@numBytes,c
 13248  00BDEC  ECD4  F054         	call	_uartTransmitBlocking	;wreg free
 13249                           
 13250                           ;machine_code.c: 315: _delay((unsigned long)((2400)*(40000000/4000.0)));
 13251  00BDF0  0E7A               	movlw	122
 13252  00BDF2  6E0D               	movwf	(??_height_mech+1)& (0+255),c
 13253  00BDF4  0EC1               	movlw	193
 13254  00BDF6  6E0C               	movwf	??_height_mech& (0+255),c
 13255  00BDF8  0E82               	movlw	130
 13256  00BDFA                     u10157:
 13257  00BDFA  2EE8               	decfsz	wreg,f,c
 13258  00BDFC  D7FE               	bra	u10157
 13259  00BDFE  2E0C               	decfsz	??_height_mech& (0+255),f,c
 13260  00BE00  D7FC               	bra	u10157
 13261  00BE02  2E0D               	decfsz	(??_height_mech+1)& (0+255),f,c
 13262  00BE04  D7FA               	bra	u10157
 13263                           
 13264                           ;machine_code.c: 316: _delay((unsigned long)((2400)*(40000000/4000.0)));
 13265  00BE06  0E7A               	movlw	122
 13266  00BE08  6E0D               	movwf	(??_height_mech+1)& (0+255),c
 13267  00BE0A  0EC1               	movlw	193
 13268  00BE0C  6E0C               	movwf	??_height_mech& (0+255),c
 13269  00BE0E  0E82               	movlw	130
 13270  00BE10                     u10167:
 13271  00BE10  2EE8               	decfsz	wreg,f,c
 13272  00BE12  D7FE               	bra	u10167
 13273  00BE14  2E0C               	decfsz	??_height_mech& (0+255),f,c
 13274  00BE16  D7FC               	bra	u10167
 13275  00BE18  2E0D               	decfsz	(??_height_mech+1)& (0+255),f,c
 13276  00BE1A  D7FA               	bra	u10167
 13277                           
 13278                           ;machine_code.c: 317: _delay((unsigned long)((1000)*(40000000/4000.0)));
 13279  00BE1C  0E33               	movlw	51
 13280  00BE1E  6E0D               	movwf	(??_height_mech+1)& (0+255),c
 13281  00BE20  0EBB               	movlw	187
 13282  00BE22  6E0C               	movwf	??_height_mech& (0+255),c
 13283  00BE24  0EE0               	movlw	224
 13284  00BE26                     u10177:
 13285  00BE26  2EE8               	decfsz	wreg,f,c
 13286  00BE28  D7FE               	bra	u10177
 13287  00BE2A  2E0C               	decfsz	??_height_mech& (0+255),f,c
 13288  00BE2C  D7FC               	bra	u10177
 13289  00BE2E  2E0D               	decfsz	(??_height_mech+1)& (0+255),f,c
 13290  00BE30  D7FA               	bra	u10177
 13291                           
 13292                           ;machine_code.c: 318: hook_mech(0);
 13293  00BE32  0E00               	movlw	0
 13294  00BE34  6E07               	movwf	hook_mech@z+1,c
 13295  00BE36  0E00               	movlw	0
 13296  00BE38  6E06               	movwf	hook_mech@z,c
 13297  00BE3A  ECFA  F051         	call	_hook_mech	;wreg free
 13298                           
 13299                           ;machine_code.c: 319: while (dy_cpy != 0){
 13300  00BE3E  D02E               	goto	l743
 13301  00BE40                     
 13302                           ;machine_code.c: 320: data[0] = 'D';
 13303  00BE40  0E44               	movlw	68
 13304  00BE42  6E7F               	movwf	_data,c
 13305                           
 13306                           ;machine_code.c: 321: uartTransmitBlocking(data, 1);
 13307  00BE44  0E7F               	movlw	low _data
 13308  00BE46  6E01               	movwf	uartTransmitBlocking@data,c
 13309  00BE48  0E00               	movlw	high _data
 13310  00BE4A  6E02               	movwf	uartTransmitBlocking@data+1,c
 13311  00BE4C  0E01               	movlw	1
 13312  00BE4E  6E03               	movwf	uartTransmitBlocking@numBytes,c
 13313  00BE50  ECD4  F054         	call	_uartTransmitBlocking	;wreg free
 13314                           
 13315                           ;machine_code.c: 322: dy_cpy--;
 13316  00BE54  0612               	decf	height_mech@dy_cpy,f,c
 13317  00BE56  A0D8               	btfss	status,0,c
 13318  00BE58  0613               	decf	height_mech@dy_cpy+1,f,c
 13319                           
 13320                           ;machine_code.c: 323: _delay((unsigned long)((2400)*(40000000/4000.0)));
 13321  00BE5A  0E7A               	movlw	122
 13322  00BE5C  6E0D               	movwf	(??_height_mech+1)& (0+255),c
 13323  00BE5E  0EC1               	movlw	193
 13324  00BE60  6E0C               	movwf	??_height_mech& (0+255),c
 13325  00BE62  0E82               	movlw	130
 13326  00BE64                     u10187:
 13327  00BE64  2EE8               	decfsz	wreg,f,c
 13328  00BE66  D7FE               	bra	u10187
 13329  00BE68  2E0C               	decfsz	??_height_mech& (0+255),f,c
 13330  00BE6A  D7FC               	bra	u10187
 13331  00BE6C  2E0D               	decfsz	(??_height_mech+1)& (0+255),f,c
 13332  00BE6E  D7FA               	bra	u10187
 13333                           
 13334                           ;machine_code.c: 324: _delay((unsigned long)((2400)*(40000000/4000.0)));
 13335  00BE70  0E7A               	movlw	122
 13336  00BE72  6E0D               	movwf	(??_height_mech+1)& (0+255),c
 13337  00BE74  0EC1               	movlw	193
 13338  00BE76  6E0C               	movwf	??_height_mech& (0+255),c
 13339  00BE78  0E82               	movlw	130
 13340  00BE7A                     u10197:
 13341  00BE7A  2EE8               	decfsz	wreg,f,c
 13342  00BE7C  D7FE               	bra	u10197
 13343  00BE7E  2E0C               	decfsz	??_height_mech& (0+255),f,c
 13344  00BE80  D7FC               	bra	u10197
 13345  00BE82  2E0D               	decfsz	(??_height_mech+1)& (0+255),f,c
 13346  00BE84  D7FA               	bra	u10197
 13347                           
 13348                           ;machine_code.c: 325: _delay((unsigned long)((2400)*(40000000/4000.0)));
 13349  00BE86  0E7A               	movlw	122
 13350  00BE88  6E0D               	movwf	(??_height_mech+1)& (0+255),c
 13351  00BE8A  0EC1               	movlw	193
 13352  00BE8C  6E0C               	movwf	??_height_mech& (0+255),c
 13353  00BE8E  0E82               	movlw	130
 13354  00BE90                     u10207:
 13355  00BE90  2EE8               	decfsz	wreg,f,c
 13356  00BE92  D7FE               	bra	u10207
 13357  00BE94  2E0C               	decfsz	??_height_mech& (0+255),f,c
 13358  00BE96  D7FC               	bra	u10207
 13359  00BE98  2E0D               	decfsz	(??_height_mech+1)& (0+255),f,c
 13360  00BE9A  D7FA               	bra	u10207
 13361  00BE9C                     l743:
 13362  00BE9C  5012               	movf	height_mech@dy_cpy,w,c
 13363  00BE9E  1013               	iorwf	height_mech@dy_cpy+1,w,c
 13364  00BEA0  A4D8               	btfss	status,2,c
 13365  00BEA2  D7CE               	goto	l744
 13366                           
 13367                           ;machine_code.c: 326: }
 13368                           ;machine_code.c: 327: hook_mech(1);
 13369  00BEA4  0E00               	movlw	0
 13370  00BEA6  6E07               	movwf	hook_mech@z+1,c
 13371  00BEA8  0E01               	movlw	1
 13372  00BEAA  6E06               	movwf	hook_mech@z,c
 13373  00BEAC  ECFA  F051         	call	_hook_mech	;wreg free
 13374                           
 13375                           ;machine_code.c: 328: data[0] = 'F';
 13376  00BEB0  0E46               	movlw	70
 13377  00BEB2  6E7F               	movwf	_data,c
 13378                           
 13379                           ;machine_code.c: 329: uartTransmitBlocking(data, 1);
 13380  00BEB4  0E7F               	movlw	low _data
 13381  00BEB6  6E01               	movwf	uartTransmitBlocking@data,c
 13382  00BEB8  0E00               	movlw	high _data
 13383  00BEBA  6E02               	movwf	uartTransmitBlocking@data+1,c
 13384  00BEBC  0E01               	movlw	1
 13385  00BEBE  6E03               	movwf	uartTransmitBlocking@numBytes,c
 13386  00BEC0  ECD4  F054         	call	_uartTransmitBlocking	;wreg free
 13387                           
 13388                           ;machine_code.c: 330: _delay((unsigned long)((2400)*(40000000/4000.0)));
 13389  00BEC4  0E7A               	movlw	122
 13390  00BEC6  6E0D               	movwf	(??_height_mech+1)& (0+255),c
 13391  00BEC8  0EC1               	movlw	193
 13392  00BECA  6E0C               	movwf	??_height_mech& (0+255),c
 13393  00BECC  0E82               	movlw	130
 13394  00BECE                     u10217:
 13395  00BECE  2EE8               	decfsz	wreg,f,c
 13396  00BED0  D7FE               	bra	u10217
 13397  00BED2  2E0C               	decfsz	??_height_mech& (0+255),f,c
 13398  00BED4  D7FC               	bra	u10217
 13399  00BED6  2E0D               	decfsz	(??_height_mech+1)& (0+255),f,c
 13400  00BED8  D7FA               	bra	u10217
 13401                           
 13402                           ;machine_code.c: 331: _delay((unsigned long)((2400)*(40000000/4000.0)));
 13403  00BEDA  0E7A               	movlw	122
 13404  00BEDC  6E0D               	movwf	(??_height_mech+1)& (0+255),c
 13405  00BEDE  0EC1               	movlw	193
 13406  00BEE0  6E0C               	movwf	??_height_mech& (0+255),c
 13407  00BEE2  0E82               	movlw	130
 13408  00BEE4                     u10227:
 13409  00BEE4  2EE8               	decfsz	wreg,f,c
 13410  00BEE6  D7FE               	bra	u10227
 13411  00BEE8  2E0C               	decfsz	??_height_mech& (0+255),f,c
 13412  00BEEA  D7FC               	bra	u10227
 13413  00BEEC  2E0D               	decfsz	(??_height_mech+1)& (0+255),f,c
 13414  00BEEE  D7FA               	bra	u10227
 13415                           
 13416                           ;machine_code.c: 332: _delay((unsigned long)((1000)*(40000000/4000.0)));
 13417  00BEF0  0E33               	movlw	51
 13418  00BEF2  6E0D               	movwf	(??_height_mech+1)& (0+255),c
 13419  00BEF4  0EBB               	movlw	187
 13420  00BEF6  6E0C               	movwf	??_height_mech& (0+255),c
 13421  00BEF8  0EE0               	movlw	224
 13422  00BEFA                     u10237:
 13423  00BEFA  2EE8               	decfsz	wreg,f,c
 13424  00BEFC  D7FE               	bra	u10237
 13425  00BEFE  2E0C               	decfsz	??_height_mech& (0+255),f,c
 13426  00BF00  D7FC               	bra	u10237
 13427  00BF02  2E0D               	decfsz	(??_height_mech+1)& (0+255),f,c
 13428  00BF04  D7FA               	bra	u10237
 13429                           
 13430                           ;machine_code.c: 334: }
 13431                           ;machine_code.c: 335: }
 13432  00BF06  0012               	return	
 13433  00BF08                     l734:
 13434                           
 13435                           ;machine_code.c: 337: else if (dy < 0){
 13436  00BF08  AE09               	btfss	height_mech@dy+1,7,c
 13437  00BF0A  0012               	return	
 13438                           
 13439                           ;machine_code.c: 338: if (curr_height != 0){
 13440  00BF0C  500A               	movf	height_mech@curr_height,w,c
 13441  00BF0E  100B               	iorwf	height_mech@curr_height+1,w,c
 13442  00BF10  B4D8               	btfsc	status,2,c
 13443  00BF12  0012               	return	
 13444  00BF14  D004               	goto	l749
 13445  00BF16                     
 13446                           ;machine_code.c: 341: lower_row_count += 1;
 13447  00BF16  4A10               	infsnz	height_mech@lower_row_count,f,c
 13448  00BF18  2A11               	incf	height_mech@lower_row_count+1,f,c
 13449                           
 13450                           ;machine_code.c: 342: dy_cpy++;
 13451  00BF1A  4A12               	infsnz	height_mech@dy_cpy,f,c
 13452  00BF1C  2A13               	incf	height_mech@dy_cpy+1,f,c
 13453  00BF1E                     l749:
 13454  00BF1E  0E01               	movlw	1
 13455  00BF20  2412               	addwf	height_mech@dy_cpy,w,c
 13456  00BF22  6E0C               	movwf	??_height_mech& (0+255),c
 13457  00BF24  0E00               	movlw	0
 13458  00BF26  2013               	addwfc	height_mech@dy_cpy+1,w,c
 13459  00BF28  6E0D               	movwf	(??_height_mech+1)& (0+255),c
 13460  00BF2A  500C               	movf	??_height_mech,w,c
 13461  00BF2C  100D               	iorwf	??_height_mech+1,w,c
 13462  00BF2E  A4D8               	btfss	status,2,c
 13463  00BF30  D7F2               	goto	l750
 13464                           
 13465                           ;machine_code.c: 343: }
 13466                           ;machine_code.c: 345: if (lower_row_count == 1){ data[0] = 'E';}
 13467  00BF32  0410               	decf	height_mech@lower_row_count,w,c
 13468  00BF34  1011               	iorwf	height_mech@lower_row_count+1,w,c
 13469  00BF36  A4D8               	btfss	status,2,c
 13470  00BF38  D002               	goto	l752
 13471  00BF3A  0E45               	movlw	69
 13472  00BF3C  D00D               	goto	L14
 13473  00BF3E                     l752:
 13474                           
 13475                           ;machine_code.c: 346: else if (lower_row_count == 2){ data[0] = 'Q';}
 13476  00BF3E  0E02               	movlw	2
 13477  00BF40  1810               	xorwf	height_mech@lower_row_count,w,c
 13478  00BF42  1011               	iorwf	height_mech@lower_row_count+1,w,c
 13479  00BF44  A4D8               	btfss	status,2,c
 13480  00BF46  D002               	goto	l754
 13481  00BF48  0E51               	movlw	81
 13482  00BF4A  D006               	goto	L14
 13483  00BF4C                     l754:
 13484                           
 13485                           ;machine_code.c: 347: else if (lower_row_count == 3){ data[0] = 'R';}
 13486  00BF4C  0E03               	movlw	3
 13487  00BF4E  1810               	xorwf	height_mech@lower_row_count,w,c
 13488  00BF50  1011               	iorwf	height_mech@lower_row_count+1,w,c
 13489  00BF52  A4D8               	btfss	status,2,c
 13490  00BF54  D002               	goto	l756
 13491  00BF56  0E52               	movlw	82
 13492  00BF58                     L14:
 13493  00BF58  6E7F               	movwf	_data,c
 13494  00BF5A                     l756:
 13495                           
 13496                           ;machine_code.c: 349: uartTransmitBlocking(data, 1);
 13497  00BF5A  0E7F               	movlw	low _data
 13498  00BF5C  6E01               	movwf	uartTransmitBlocking@data,c
 13499  00BF5E  0E00               	movlw	high _data
 13500  00BF60  6E02               	movwf	uartTransmitBlocking@data+1,c
 13501  00BF62  0E01               	movlw	1
 13502  00BF64  6E03               	movwf	uartTransmitBlocking@numBytes,c
 13503  00BF66  ECD4  F054         	call	_uartTransmitBlocking	;wreg free
 13504  00BF6A  0012               	return	
 13505  00BF6C                     __end_of_height_mech:
 13506                           	opt stack 0
 13507                           tblptru	equ	0xFF8
 13508                           tblptrh	equ	0xFF7
 13509                           tblptrl	equ	0xFF6
 13510                           tablat	equ	0xFF5
 13511                           prodh	equ	0xFF4
 13512                           prodl	equ	0xFF3
 13513                           intcon	equ	0xFF2
 13514                           postinc0	equ	0xFEE
 13515                           wreg	equ	0xFE8
 13516                           postinc1	equ	0xFE6
 13517                           postdec1	equ	0xFE5
 13518                           plusw1	equ	0xFE3
 13519                           fsr1h	equ	0xFE2
 13520                           fsr1l	equ	0xFE1
 13521                           indf2	equ	0xFDF
 13522                           postinc2	equ	0xFDE
 13523                           postdec2	equ	0xFDD
 13524                           plusw2	equ	0xFDB
 13525                           fsr2h	equ	0xFDA
 13526                           fsr2l	equ	0xFD9
 13527                           status	equ	0xFD8
 13528                           
 13529 ;; *************** function _finalize *****************
 13530 ;; Defined at:
 13531 ;;		line 492 in file "machine_code.c"
 13532 ;; Parameters:    Size  Location     Type
 13533 ;;  curr_height     2   38[COMRAM] short 
 13534 ;;  mat             2   40[COMRAM] PTR int [3]
 13535 ;;		 -> main@mat(96), 
 13536 ;; Auto vars:     Size  Location     Type
 13537 ;;  j               2   46[COMRAM] short 
 13538 ;;  i               2   44[COMRAM] short 
 13539 ;; Return value:  Size  Location     Type
 13540 ;;                  1    wreg      void 
 13541 ;; Registers used:
 13542 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13543 ;; Tracked objects:
 13544 ;;		On entry : 0/0
 13545 ;;		On exit  : 0/0
 13546 ;;		Unchanged: 0/0
 13547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13548 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13549 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13550 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13551 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13552 ;;Total ram usage:       10 bytes
 13553 ;; Hardware stack levels used:    1
 13554 ;; Hardware stack levels required when called:    4
 13555 ;; This function calls:
 13556 ;;		___wmul
 13557 ;;		_hook_mech
 13558 ;;		_servo_slide
 13559 ;;		_uartTransmitBlocking
 13560 ;;		_unload_reservoir
 13561 ;; This function is called by:
 13562 ;;		_package_food
 13563 ;; This function uses a non-reentrant model
 13564 ;;
 13565                           
 13566                           	psect	text10
 13567  00B2E4                     __ptext10:
 13568                           	opt stack 0
 13569  00B2E4                     _finalize:
 13570                           	opt stack 25
 13571                           
 13572                           ;machine_code.c: 500: short int i = 0, j = 0;
 13573                           
 13574                           ;incstack = 0
 13575  00B2E4  0E00               	movlw	0
 13576  00B2E6  6E2E               	movwf	finalize@i+1,c
 13577  00B2E8  0E00               	movlw	0
 13578  00B2EA  6E2D               	movwf	finalize@i,c
 13579  00B2EC  0E00               	movlw	0
 13580  00B2EE  6E30               	movwf	finalize@j+1,c
 13581  00B2F0  0E00               	movlw	0
 13582  00B2F2  6E2F               	movwf	finalize@j,c
 13583                           
 13584                           ;machine_code.c: 501: for (i = 0; i < 16; i++){
 13585  00B2F4  0E00               	movlw	0
 13586  00B2F6  6E2E               	movwf	finalize@i+1,c
 13587  00B2F8  0E00               	movlw	0
 13588  00B2FA  6E2D               	movwf	finalize@i,c
 13589  00B2FC                     l6276:
 13590  00B2FC  BE2E               	btfsc	finalize@i+1,7,c
 13591  00B2FE  D006               	goto	l817
 13592  00B300  502E               	movf	finalize@i+1,w,c
 13593  00B302  E135               	bnz	l6296
 13594  00B304  0E10               	movlw	16
 13595  00B306  5C2D               	subwf	finalize@i,w,c
 13596  00B308  B0D8               	btfsc	status,0,c
 13597  00B30A  D031               	goto	u5720
 13598  00B30C                     l817:
 13599                           
 13600                           ;machine_code.c: 502: for (j = 0; j < 3; j++){
 13601  00B30C  0E00               	movlw	0
 13602  00B30E  6E30               	movwf	finalize@j+1,c
 13603  00B310  0E00               	movlw	0
 13604  00B312  6E2F               	movwf	finalize@j,c
 13605  00B314                     l6282:
 13606  00B314  BE30               	btfsc	finalize@j+1,7,c
 13607  00B316  D006               	goto	l819
 13608  00B318  5030               	movf	finalize@j+1,w,c
 13609  00B31A  E126               	bnz	l6292
 13610  00B31C  0E03               	movlw	3
 13611  00B31E  5C2F               	subwf	finalize@j,w,c
 13612  00B320  B0D8               	btfsc	status,0,c
 13613  00B322  D022               	goto	u5710
 13614  00B324                     l819:
 13615                           
 13616                           ;machine_code.c: 503: changed_mat[i][j] = 0;}}
 13617  00B324  C02D  F001         	movff	finalize@i,___wmul@multiplier
 13618  00B328  C02E  F002         	movff	finalize@i+1,___wmul@multiplier+1
 13619  00B32C  0E00               	movlw	0
 13620  00B32E  6E04               	movwf	___wmul@multiplicand+1,c
 13621  00B330  0E06               	movlw	6
 13622  00B332  6E03               	movwf	___wmul@multiplicand,c
 13623  00B334  ECB7  F051         	call	___wmul	;wreg free
 13624  00B338  0E00               	movlw	low _changed_mat
 13625  00B33A  6E2B               	movwf	??_finalize& (0+255),c
 13626  00B33C  0E03               	movlw	high _changed_mat
 13627  00B33E  6E2C               	movwf	(??_finalize+1)& (0+255),c
 13628  00B340  5001               	movf	?___wmul,w,c
 13629  00B342  262B               	addwf	??_finalize,f,c
 13630  00B344  5002               	movf	?___wmul+1,w,c
 13631  00B346  222C               	addwfc	??_finalize+1,f,c
 13632  00B348  90D8               	bcf	status,0,c
 13633  00B34A  342F               	rlcf	finalize@j,w,c
 13634  00B34C  6ED9               	movwf	fsr2l,c
 13635  00B34E  3430               	rlcf	finalize@j+1,w,c
 13636  00B350  6EDA               	movwf	fsr2h,c
 13637  00B352  502B               	movf	??_finalize,w,c
 13638  00B354  26D9               	addwf	fsr2l,f,c
 13639  00B356  502C               	movf	??_finalize+1,w,c
 13640  00B358  22DA               	addwfc	fsr2h,f,c
 13641  00B35A  0E00               	movlw	0
 13642  00B35C  6EDE               	movwf	postinc2,c
 13643  00B35E  0E00               	movlw	0
 13644  00B360  6EDD               	movwf	postdec2,c
 13645  00B362  4A2F               	infsnz	finalize@j,f,c
 13646  00B364  2A30               	incf	finalize@j+1,f,c
 13647  00B366  D7D6               	goto	l6282
 13648  00B368                     u5710:
 13649  00B368                     l6292:
 13650  00B368  4A2D               	infsnz	finalize@i,f,c
 13651  00B36A  2A2E               	incf	finalize@i+1,f,c
 13652  00B36C  D7C7               	goto	l6276
 13653  00B36E                     u5720:
 13654  00B36E                     l6296:
 13655                           
 13656                           ;machine_code.c: 505: if (curr_height > 0){
 13657  00B36E  BE28               	btfsc	finalize@curr_height+1,7,c
 13658  00B370  D036               	goto	l821
 13659  00B372  5028               	movf	finalize@curr_height+1,w,c
 13660  00B374  E103               	bnz	u5730
 13661  00B376  0427               	decf	finalize@curr_height,w,c
 13662  00B378  A0D8               	btfss	status,0,c
 13663  00B37A  D031               	goto	l821
 13664  00B37C                     u5730:
 13665                           
 13666                           ;machine_code.c: 506: data[0] = 'G';
 13667  00B37C  0E47               	movlw	71
 13668  00B37E  6E7F               	movwf	_data,c
 13669                           
 13670                           ;machine_code.c: 507: uartTransmitBlocking(data, 1);
 13671  00B380  0E7F               	movlw	low _data
 13672  00B382  6E01               	movwf	uartTransmitBlocking@data,c
 13673  00B384  0E00               	movlw	high _data
 13674  00B386  6E02               	movwf	uartTransmitBlocking@data+1,c
 13675  00B388  0E01               	movlw	1
 13676  00B38A  6E03               	movwf	uartTransmitBlocking@numBytes,c
 13677  00B38C  ECD4  F054         	call	_uartTransmitBlocking	;wreg free
 13678                           
 13679                           ;machine_code.c: 508: _delay((unsigned long)((2400)*(40000000/4000.0)));
 13680  00B390  0E7A               	movlw	122
 13681  00B392  6E2C               	movwf	(??_finalize+1)& (0+255),c
 13682  00B394  0EC1               	movlw	193
 13683  00B396  6E2B               	movwf	??_finalize& (0+255),c
 13684  00B398  0E82               	movlw	130
 13685  00B39A                     u10247:
 13686  00B39A  2EE8               	decfsz	wreg,f,c
 13687  00B39C  D7FE               	bra	u10247
 13688  00B39E  2E2B               	decfsz	??_finalize& (0+255),f,c
 13689  00B3A0  D7FC               	bra	u10247
 13690  00B3A2  2E2C               	decfsz	(??_finalize+1)& (0+255),f,c
 13691  00B3A4  D7FA               	bra	u10247
 13692                           
 13693                           ;machine_code.c: 509: _delay((unsigned long)((2400)*(40000000/4000.0)));
 13694  00B3A6  0E7A               	movlw	122
 13695  00B3A8  6E2C               	movwf	(??_finalize+1)& (0+255),c
 13696  00B3AA  0EC1               	movlw	193
 13697  00B3AC  6E2B               	movwf	??_finalize& (0+255),c
 13698  00B3AE  0E82               	movlw	130
 13699  00B3B0                     u10257:
 13700  00B3B0  2EE8               	decfsz	wreg,f,c
 13701  00B3B2  D7FE               	bra	u10257
 13702  00B3B4  2E2B               	decfsz	??_finalize& (0+255),f,c
 13703  00B3B6  D7FC               	bra	u10257
 13704  00B3B8  2E2C               	decfsz	(??_finalize+1)& (0+255),f,c
 13705  00B3BA  D7FA               	bra	u10257
 13706                           
 13707                           ;machine_code.c: 510: _delay((unsigned long)((1000)*(40000000/4000.0)));
 13708  00B3BC  0E33               	movlw	51
 13709  00B3BE  6E2C               	movwf	(??_finalize+1)& (0+255),c
 13710  00B3C0  0EBB               	movlw	187
 13711  00B3C2  6E2B               	movwf	??_finalize& (0+255),c
 13712  00B3C4  0EE0               	movlw	224
 13713  00B3C6                     u10267:
 13714  00B3C6  2EE8               	decfsz	wreg,f,c
 13715  00B3C8  D7FE               	bra	u10267
 13716  00B3CA  2E2B               	decfsz	??_finalize& (0+255),f,c
 13717  00B3CC  D7FC               	bra	u10267
 13718  00B3CE  2E2C               	decfsz	(??_finalize+1)& (0+255),f,c
 13719  00B3D0  D7FA               	bra	u10267
 13720                           
 13721                           ;machine_code.c: 511: hook_mech(0);
 13722  00B3D2  0E00               	movlw	0
 13723  00B3D4  6E07               	movwf	hook_mech@z+1,c
 13724  00B3D6  0E00               	movlw	0
 13725  00B3D8  6E06               	movwf	hook_mech@z,c
 13726  00B3DA  ECFA  F051         	call	_hook_mech	;wreg free
 13727  00B3DE                     l821:
 13728                           
 13729                           ;machine_code.c: 512: }
 13730                           ;machine_code.c: 514: unload_reservoir('1');
 13731  00B3DE  0E31               	movlw	49
 13732  00B3E0  EC7D  F056         	call	_unload_reservoir
 13733                           
 13734                           ;machine_code.c: 515: if (total_difference >= 175){
 13735  00B3E4  0102               	movlb	2	; () banked
 13736  00B3E6  BFC7               	btfsc	(_total_difference+3)& (0+255),7,b
 13737  00B3E8  D00F               	goto	l822
 13738  00B3EA  51C7               	movf	(_total_difference+3)& (0+255),w,b
 13739  00B3EC  11C6               	iorwf	(_total_difference+2)& (0+255),w,b
 13740  00B3EE  11C5               	iorwf	(_total_difference+1)& (0+255),w,b
 13741  00B3F0  E104               	bnz	u5740
 13742  00B3F2  0EAF               	movlw	175
 13743  00B3F4  5DC4               	subwf	_total_difference& (0+255),w,b
 13744  00B3F6  A0D8               	btfss	status,0,c
 13745  00B3F8  D007               	goto	l822
 13746  00B3FA                     u5740:
 13747                           
 13748                           ; BSR set to: 2
 13749                           ;machine_code.c: 516: servo_slide(0);
 13750  00B3FA  0E00               	movlw	0
 13751  00B3FC  6E07               	movwf	servo_slide@x+1,c
 13752  00B3FE  0E00               	movlw	0
 13753  00B400  6E06               	movwf	servo_slide@x,c
 13754  00B402  EC8A  F055         	call	_servo_slide	;wreg free
 13755                           
 13756                           ;machine_code.c: 517: return;}
 13757  00B406  0012               	return	
 13758  00B408                     l822:
 13759                           
 13760                           ;machine_code.c: 519: unload_reservoir('2');
 13761  00B408  0E32               	movlw	50
 13762  00B40A  EC7D  F056         	call	_unload_reservoir
 13763                           
 13764                           ;machine_code.c: 520: if (total_difference >= 175){
 13765  00B40E  0102               	movlb	2	; () banked
 13766  00B410  BFC7               	btfsc	(_total_difference+3)& (0+255),7,b
 13767  00B412  D00F               	goto	l824
 13768  00B414  51C7               	movf	(_total_difference+3)& (0+255),w,b
 13769  00B416  11C6               	iorwf	(_total_difference+2)& (0+255),w,b
 13770  00B418  11C5               	iorwf	(_total_difference+1)& (0+255),w,b
 13771  00B41A  E104               	bnz	u5750
 13772  00B41C  0EAF               	movlw	175
 13773  00B41E  5DC4               	subwf	_total_difference& (0+255),w,b
 13774  00B420  A0D8               	btfss	status,0,c
 13775  00B422  D007               	goto	l824
 13776  00B424                     u5750:
 13777                           
 13778                           ; BSR set to: 2
 13779                           ;machine_code.c: 521: servo_slide(0);
 13780  00B424  0E00               	movlw	0
 13781  00B426  6E07               	movwf	servo_slide@x+1,c
 13782  00B428  0E00               	movlw	0
 13783  00B42A  6E06               	movwf	servo_slide@x,c
 13784  00B42C  EC8A  F055         	call	_servo_slide	;wreg free
 13785                           
 13786                           ;machine_code.c: 522: return;}
 13787  00B430  0012               	return	
 13788  00B432                     l824:
 13789                           
 13790                           ;machine_code.c: 524: unload_reservoir('3');
 13791  00B432  0E33               	movlw	51
 13792  00B434  EC7D  F056         	call	_unload_reservoir
 13793                           
 13794                           ;machine_code.c: 525: if (total_difference >= 175){
 13795  00B438  0102               	movlb	2	; () banked
 13796  00B43A  BFC7               	btfsc	(_total_difference+3)& (0+255),7,b
 13797  00B43C  D00F               	goto	l825
 13798  00B43E  51C7               	movf	(_total_difference+3)& (0+255),w,b
 13799  00B440  11C6               	iorwf	(_total_difference+2)& (0+255),w,b
 13800  00B442  11C5               	iorwf	(_total_difference+1)& (0+255),w,b
 13801  00B444  E104               	bnz	u5760
 13802  00B446  0EAF               	movlw	175
 13803  00B448  5DC4               	subwf	_total_difference& (0+255),w,b
 13804  00B44A  A0D8               	btfss	status,0,c
 13805  00B44C  D007               	goto	l825
 13806  00B44E                     u5760:
 13807                           
 13808                           ; BSR set to: 2
 13809                           ;machine_code.c: 526: servo_slide(0);
 13810  00B44E  0E00               	movlw	0
 13811  00B450  6E07               	movwf	servo_slide@x+1,c
 13812  00B452  0E00               	movlw	0
 13813  00B454  6E06               	movwf	servo_slide@x,c
 13814  00B456  EC8A  F055         	call	_servo_slide	;wreg free
 13815                           
 13816                           ;machine_code.c: 527: return;}
 13817  00B45A  0012               	return	
 13818  00B45C                     l825:
 13819                           
 13820                           ;machine_code.c: 529: servo_slide(0);
 13821  00B45C  0E00               	movlw	0
 13822  00B45E  6E07               	movwf	servo_slide@x+1,c
 13823  00B460  0E00               	movlw	0
 13824  00B462  6E06               	movwf	servo_slide@x,c
 13825  00B464  EC8A  F055         	call	_servo_slide	;wreg free
 13826  00B468  0012               	return		;funcret
 13827  00B46A                     __end_of_finalize:
 13828                           	opt stack 0
 13829                           tblptru	equ	0xFF8
 13830                           tblptrh	equ	0xFF7
 13831                           tblptrl	equ	0xFF6
 13832                           tablat	equ	0xFF5
 13833                           prodh	equ	0xFF4
 13834                           prodl	equ	0xFF3
 13835                           intcon	equ	0xFF2
 13836                           postinc0	equ	0xFEE
 13837                           wreg	equ	0xFE8
 13838                           postinc1	equ	0xFE6
 13839                           postdec1	equ	0xFE5
 13840                           plusw1	equ	0xFE3
 13841                           fsr1h	equ	0xFE2
 13842                           fsr1l	equ	0xFE1
 13843                           indf2	equ	0xFDF
 13844                           postinc2	equ	0xFDE
 13845                           postdec2	equ	0xFDD
 13846                           plusw2	equ	0xFDB
 13847                           fsr2h	equ	0xFDA
 13848                           fsr2l	equ	0xFD9
 13849                           status	equ	0xFD8
 13850                           
 13851 ;; *************** function _unload_reservoir *****************
 13852 ;; Defined at:
 13853 ;;		line 424 in file "machine_code.c"
 13854 ;; Parameters:    Size  Location     Type
 13855 ;;  pill            1    wreg     unsigned char 
 13856 ;; Auto vars:     Size  Location     Type
 13857 ;;  pill            1   37[COMRAM] unsigned char 
 13858 ;;  unload_count    2   35[COMRAM] short 
 13859 ;;  res_index       2   32[COMRAM] short 
 13860 ;;  pill_unload     1   34[COMRAM] unsigned char [1]
 13861 ;; Return value:  Size  Location     Type
 13862 ;;                  1    wreg      void 
 13863 ;; Registers used:
 13864 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13865 ;; Tracked objects:
 13866 ;;		On entry : 0/0
 13867 ;;		On exit  : 0/0
 13868 ;;		Unchanged: 0/0
 13869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13870 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13871 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13872 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13873 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13874 ;;Total ram usage:        8 bytes
 13875 ;; Hardware stack levels used:    1
 13876 ;; Hardware stack levels required when called:    3
 13877 ;; This function calls:
 13878 ;;		_comp_time_difference
 13879 ;;		_receive_data_RX
 13880 ;;		_servo_slide
 13881 ;;		_uartTransmitBlocking
 13882 ;; This function is called by:
 13883 ;;		_finalize
 13884 ;; This function uses a non-reentrant model
 13885 ;;
 13886                           
 13887                           	psect	text11
 13888  00ACFA                     __ptext11:
 13889                           	opt stack 0
 13890  00ACFA                     _unload_reservoir:
 13891                           	opt stack 25
 13892                           
 13893                           ;incstack = 0
 13894                           ;unload_reservoir@pill stored from wreg
 13895  00ACFA  6E26               	movwf	unload_reservoir@pill,c
 13896                           
 13897                           ;machine_code.c: 440: short int res_index, unload_count;
 13898                           ;machine_code.c: 441: unsigned char pill_unload[1];
 13899                           ;machine_code.c: 443: pill_unload[0] = pill;
 13900  00ACFC  C026  F023         	movff	unload_reservoir@pill,unload_reservoir@pill_unload
 13901                           
 13902                           ;machine_code.c: 445: if (pill == '1'){
 13903  00AD00  0E31               	movlw	49
 13904  00AD02  1826               	xorwf	unload_reservoir@pill,w,c
 13905  00AD04  A4D8               	btfss	status,2,c
 13906  00AD06  D00E               	goto	l792
 13907                           
 13908                           ;machine_code.c: 446: unload_count = 5;
 13909  00AD08  0E00               	movlw	0
 13910  00AD0A  6E25               	movwf	unload_reservoir@unload_count+1,c
 13911  00AD0C  0E05               	movlw	5
 13912  00AD0E  6E24               	movwf	unload_reservoir@unload_count,c
 13913                           
 13914                           ;machine_code.c: 447: servo_slide(4);
 13915  00AD10  0E00               	movlw	0
 13916  00AD12  6E07               	movwf	servo_slide@x+1,c
 13917  00AD14  0E04               	movlw	4
 13918  00AD16  6E06               	movwf	servo_slide@x,c
 13919  00AD18  EC8A  F055         	call	_servo_slide	;wreg free
 13920                           
 13921                           ;machine_code.c: 448: res_index = 0;}
 13922  00AD1C  0E00               	movlw	0
 13923  00AD1E  6E22               	movwf	unload_reservoir@res_index+1,c
 13924  00AD20  0E00               	movlw	0
 13925  00AD22  D023               	goto	L16
 13926  00AD24                     l792:
 13927                           
 13928                           ;machine_code.c: 449: else if (pill == '2'){
 13929  00AD24  0E32               	movlw	50
 13930  00AD26  1826               	xorwf	unload_reservoir@pill,w,c
 13931  00AD28  A4D8               	btfss	status,2,c
 13932  00AD2A  D00E               	goto	l794
 13933                           
 13934                           ;machine_code.c: 450: unload_count = 6;
 13935  00AD2C  0E00               	movlw	0
 13936  00AD2E  6E25               	movwf	unload_reservoir@unload_count+1,c
 13937  00AD30  0E06               	movlw	6
 13938  00AD32  6E24               	movwf	unload_reservoir@unload_count,c
 13939                           
 13940                           ;machine_code.c: 451: servo_slide(5);
 13941  00AD34  0E00               	movlw	0
 13942  00AD36  6E07               	movwf	servo_slide@x+1,c
 13943  00AD38  0E05               	movlw	5
 13944  00AD3A  6E06               	movwf	servo_slide@x,c
 13945  00AD3C  EC8A  F055         	call	_servo_slide	;wreg free
 13946                           
 13947                           ;machine_code.c: 452: res_index = 1;}
 13948  00AD40  0E00               	movlw	0
 13949  00AD42  6E22               	movwf	unload_reservoir@res_index+1,c
 13950  00AD44  0E01               	movlw	1
 13951  00AD46  D011               	goto	L16
 13952  00AD48                     l794:
 13953                           
 13954                           ;machine_code.c: 453: else if (pill == '3'){
 13955  00AD48  0E33               	movlw	51
 13956  00AD4A  1826               	xorwf	unload_reservoir@pill,w,c
 13957  00AD4C  A4D8               	btfss	status,2,c
 13958  00AD4E  D04B               	goto	l797
 13959                           
 13960                           ;machine_code.c: 454: unload_count = 7;
 13961  00AD50  0E00               	movlw	0
 13962  00AD52  6E25               	movwf	unload_reservoir@unload_count+1,c
 13963  00AD54  0E07               	movlw	7
 13964  00AD56  6E24               	movwf	unload_reservoir@unload_count,c
 13965                           
 13966                           ;machine_code.c: 455: servo_slide(6);
 13967  00AD58  0E00               	movlw	0
 13968  00AD5A  6E07               	movwf	servo_slide@x+1,c
 13969  00AD5C  0E06               	movlw	6
 13970  00AD5E  6E06               	movwf	servo_slide@x,c
 13971  00AD60  EC8A  F055         	call	_servo_slide	;wreg free
 13972                           
 13973                           ;machine_code.c: 456: res_index = 2;}
 13974  00AD64  0E00               	movlw	0
 13975  00AD66  6E22               	movwf	unload_reservoir@res_index+1,c
 13976  00AD68  0E02               	movlw	2
 13977  00AD6A                     L16:
 13978  00AD6A  6E21               	movwf	unload_reservoir@res_index,c
 13979                           
 13980                           ;machine_code.c: 458: while(unload_count > 0){
 13981  00AD6C  D03C               	goto	l797
 13982  00AD6E                     l5644:
 13983                           
 13984                           ;machine_code.c: 459: comp_time_difference();
 13985  00AD6E  ECC1  F058         	call	_comp_time_difference	;wreg free
 13986                           
 13987                           ;machine_code.c: 460: if (total_difference >= 175){ return;}
 13988  00AD72  0102               	movlb	2	; () banked
 13989  00AD74  BFC7               	btfsc	(_total_difference+3)& (0+255),7,b
 13990  00AD76  D008               	goto	l799
 13991  00AD78  51C7               	movf	(_total_difference+3)& (0+255),w,b
 13992  00AD7A  11C6               	iorwf	(_total_difference+2)& (0+255),w,b
 13993  00AD7C  11C5               	iorwf	(_total_difference+1)& (0+255),w,b
 13994  00AD7E  E13B               	bnz	l800
 13995  00AD80  0EAF               	movlw	175
 13996  00AD82  5DC4               	subwf	_total_difference& (0+255),w,b
 13997  00AD84  B0D8               	btfsc	status,0,c
 13998  00AD86  0012               	return	
 13999  00AD88                     l799:
 14000                           
 14001                           ; BSR set to: 2
 14002                           ;machine_code.c: 462: uartTransmitBlocking(pill_unload, 1);
 14003                           
 14004                           ; BSR set to: 2
 14005  00AD88  0E23               	movlw	low unload_reservoir@pill_unload
 14006  00AD8A  6E01               	movwf	uartTransmitBlocking@data,c
 14007  00AD8C  0E00               	movlw	high unload_reservoir@pill_unload
 14008  00AD8E  6E02               	movwf	uartTransmitBlocking@data+1,c
 14009  00AD90  0E01               	movlw	1
 14010  00AD92  6E03               	movwf	uartTransmitBlocking@numBytes,c
 14011  00AD94  ECD4  F054         	call	_uartTransmitBlocking	;wreg free
 14012                           
 14013                           ;machine_code.c: 463: data[0] = 'P';
 14014  00AD98  0E50               	movlw	80
 14015  00AD9A  6E7F               	movwf	_data,c
 14016                           
 14017                           ;machine_code.c: 464: receive_data_RX();
 14018  00AD9C  EC78  F051         	call	_receive_data_RX	;wreg free
 14019                           
 14020                           ;machine_code.c: 465: if (data_RX == 1){
 14021  00ADA0  0102               	movlb	2	; () banked
 14022  00ADA2  0596               	decf	_data_RX& (0+255),w,b
 14023  00ADA4  A4D8               	btfss	status,2,c
 14024  00ADA6  D011               	goto	l801
 14025                           
 14026                           ; BSR set to: 2
 14027                           ;machine_code.c: 466: reservoir_count[res_index] += 1;
 14028  00ADA8  90D8               	bcf	status,0,c
 14029  00ADAA  3421               	rlcf	unload_reservoir@res_index,w,c
 14030  00ADAC  6ED9               	movwf	fsr2l,c
 14031  00ADAE  3422               	rlcf	unload_reservoir@res_index+1,w,c
 14032  00ADB0  6EDA               	movwf	fsr2h,c
 14033  00ADB2  0EBE               	movlw	low _reservoir_count
 14034  00ADB4  26D9               	addwf	fsr2l,f,c
 14035  00ADB6  0E02               	movlw	high _reservoir_count
 14036  00ADB8  22DA               	addwfc	fsr2h,f,c
 14037  00ADBA  2ADE               	incf	postinc2,f,c
 14038  00ADBC  0E00               	movlw	0
 14039  00ADBE  22DD               	addwfc	postdec2,f,c
 14040                           
 14041                           ; BSR set to: 2
 14042                           ;machine_code.c: 467: unload_count = 5;}
 14043  00ADC0  0E00               	movlw	0
 14044  00ADC2  6E25               	movwf	unload_reservoir@unload_count+1,c
 14045  00ADC4  0E05               	movlw	5
 14046  00ADC6  6E24               	movwf	unload_reservoir@unload_count,c
 14047  00ADC8  D003               	goto	l802
 14048  00ADCA                     l801:
 14049                           
 14050                           ; BSR set to: 2
 14051                           ;machine_code.c: 468: else{ unload_count --;}
 14052                           
 14053                           ; BSR set to: 2
 14054  00ADCA  0624               	decf	unload_reservoir@unload_count,f,c
 14055  00ADCC  A0D8               	btfss	status,0,c
 14056  00ADCE  0625               	decf	unload_reservoir@unload_count+1,f,c
 14057  00ADD0                     l802:
 14058                           
 14059                           ; BSR set to: 2
 14060                           ;machine_code.c: 469: _delay((unsigned long)((100)*(40000000/4000.0)));
 14061                           
 14062                           ; BSR set to: 2
 14063  00ADD0  0E06               	movlw	6
 14064  00ADD2  6E20               	movwf	(??_unload_reservoir+1)& (0+255),c
 14065  00ADD4  0E13               	movlw	19
 14066  00ADD6  6E1F               	movwf	??_unload_reservoir& (0+255),c
 14067  00ADD8  0EAE               	movlw	174
 14068  00ADDA                     u10277:
 14069  00ADDA  2EE8               	decfsz	wreg,f,c
 14070  00ADDC  D7FE               	bra	u10277
 14071  00ADDE  2E1F               	decfsz	??_unload_reservoir& (0+255),f,c
 14072  00ADE0  D7FC               	bra	u10277
 14073  00ADE2  2E20               	decfsz	(??_unload_reservoir+1)& (0+255),f,c
 14074  00ADE4  D7FA               	bra	u10277
 14075  00ADE6                     l797:
 14076  00ADE6  BE25               	btfsc	unload_reservoir@unload_count+1,7,c
 14077  00ADE8  0012               	return	
 14078  00ADEA  5025               	movf	unload_reservoir@unload_count+1,w,c
 14079  00ADEC  E1C0               	bnz	l5644
 14080  00ADEE  0424               	decf	unload_reservoir@unload_count,w,c
 14081  00ADF0  A0D8               	btfss	status,0,c
 14082  00ADF2  0012               	return	
 14083  00ADF4  D7BC               	goto	l798
 14084  00ADF6                     l800:
 14085  00ADF6  0012               	return		;funcret
 14086  00ADF8                     __end_of_unload_reservoir:
 14087                           	opt stack 0
 14088                           tblptru	equ	0xFF8
 14089                           tblptrh	equ	0xFF7
 14090                           tblptrl	equ	0xFF6
 14091                           tablat	equ	0xFF5
 14092                           prodh	equ	0xFF4
 14093                           prodl	equ	0xFF3
 14094                           intcon	equ	0xFF2
 14095                           postinc0	equ	0xFEE
 14096                           wreg	equ	0xFE8
 14097                           postinc1	equ	0xFE6
 14098                           postdec1	equ	0xFE5
 14099                           plusw1	equ	0xFE3
 14100                           fsr1h	equ	0xFE2
 14101                           fsr1l	equ	0xFE1
 14102                           indf2	equ	0xFDF
 14103                           postinc2	equ	0xFDE
 14104                           postdec2	equ	0xFDD
 14105                           plusw2	equ	0xFDB
 14106                           fsr2h	equ	0xFDA
 14107                           fsr2l	equ	0xFD9
 14108                           status	equ	0xFD8
 14109                           
 14110 ;; *************** function _servo_slide *****************
 14111 ;; Defined at:
 14112 ;;		line 232 in file "machine_code.c"
 14113 ;; Parameters:    Size  Location     Type
 14114 ;;  x               2    5[COMRAM] short 
 14115 ;; Auto vars:     Size  Location     Type
 14116 ;;		None
 14117 ;; Return value:  Size  Location     Type
 14118 ;;                  1    wreg      void 
 14119 ;; Registers used:
 14120 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14121 ;; Tracked objects:
 14122 ;;		On entry : 0/0
 14123 ;;		On exit  : 0/0
 14124 ;;		Unchanged: 0/0
 14125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14126 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14127 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14128 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14129 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14130 ;;Total ram usage:        4 bytes
 14131 ;; Hardware stack levels used:    1
 14132 ;; Hardware stack levels required when called:    1
 14133 ;; This function calls:
 14134 ;;		_uartTransmitBlocking
 14135 ;; This function is called by:
 14136 ;;		_package_food
 14137 ;;		_unload_reservoir
 14138 ;;		_finalize
 14139 ;; This function uses a non-reentrant model
 14140 ;;
 14141                           
 14142                           	psect	text12
 14143  00AB14                     __ptext12:
 14144                           	opt stack 0
 14145  00AB14                     _servo_slide:
 14146                           	opt stack 28
 14147                           
 14148                           ;machine_code.c: 234: if (x == 0){
 14149                           
 14150                           ;incstack = 0
 14151  00AB14  5006               	movf	servo_slide@x,w,c
 14152  00AB16  1007               	iorwf	servo_slide@x+1,w,c
 14153  00AB18  A4D8               	btfss	status,2,c
 14154  00AB1A  D00B               	goto	l718
 14155                           
 14156                           ;machine_code.c: 235: data[0] = '4';
 14157  00AB1C  0E34               	movlw	52
 14158  00AB1E  6E7F               	movwf	_data,c
 14159                           
 14160                           ;machine_code.c: 236: uartTransmitBlocking(data, 1);
 14161  00AB20  0E7F               	movlw	low _data
 14162  00AB22  6E01               	movwf	uartTransmitBlocking@data,c
 14163  00AB24  0E00               	movlw	high _data
 14164  00AB26  6E02               	movwf	uartTransmitBlocking@data+1,c
 14165  00AB28  0E01               	movlw	1
 14166  00AB2A  6E03               	movwf	uartTransmitBlocking@numBytes,c
 14167  00AB2C  ECD4  F054         	call	_uartTransmitBlocking	;wreg free
 14168                           
 14169                           ;machine_code.c: 237: }
 14170  00AB30  D05E               	goto	l730
 14171  00AB32                     l718:
 14172                           
 14173                           ;machine_code.c: 238: else if (x == 1){
 14174  00AB32  0406               	decf	servo_slide@x,w,c
 14175  00AB34  1007               	iorwf	servo_slide@x+1,w,c
 14176  00AB36  A4D8               	btfss	status,2,c
 14177  00AB38  D00B               	goto	l720
 14178                           
 14179                           ;machine_code.c: 239: data[0] = '5';
 14180  00AB3A  0E35               	movlw	53
 14181  00AB3C  6E7F               	movwf	_data,c
 14182                           
 14183                           ;machine_code.c: 240: uartTransmitBlocking(data, 1);
 14184  00AB3E  0E7F               	movlw	low _data
 14185  00AB40  6E01               	movwf	uartTransmitBlocking@data,c
 14186  00AB42  0E00               	movlw	high _data
 14187  00AB44  6E02               	movwf	uartTransmitBlocking@data+1,c
 14188  00AB46  0E01               	movlw	1
 14189  00AB48  6E03               	movwf	uartTransmitBlocking@numBytes,c
 14190  00AB4A  ECD4  F054         	call	_uartTransmitBlocking	;wreg free
 14191                           
 14192                           ;machine_code.c: 241: }
 14193  00AB4E  D04F               	goto	l730
 14194  00AB50                     l720:
 14195                           
 14196                           ;machine_code.c: 242: else if (x == 2){
 14197  00AB50  0E02               	movlw	2
 14198  00AB52  1806               	xorwf	servo_slide@x,w,c
 14199  00AB54  1007               	iorwf	servo_slide@x+1,w,c
 14200  00AB56  A4D8               	btfss	status,2,c
 14201  00AB58  D00B               	goto	l722
 14202                           
 14203                           ;machine_code.c: 243: data[0] = '6';
 14204  00AB5A  0E36               	movlw	54
 14205  00AB5C  6E7F               	movwf	_data,c
 14206                           
 14207                           ;machine_code.c: 244: uartTransmitBlocking(data, 1);
 14208  00AB5E  0E7F               	movlw	low _data
 14209  00AB60  6E01               	movwf	uartTransmitBlocking@data,c
 14210  00AB62  0E00               	movlw	high _data
 14211  00AB64  6E02               	movwf	uartTransmitBlocking@data+1,c
 14212  00AB66  0E01               	movlw	1
 14213  00AB68  6E03               	movwf	uartTransmitBlocking@numBytes,c
 14214  00AB6A  ECD4  F054         	call	_uartTransmitBlocking	;wreg free
 14215                           
 14216                           ;machine_code.c: 245: }
 14217  00AB6E  D03F               	goto	l730
 14218  00AB70                     l722:
 14219                           
 14220                           ;machine_code.c: 246: else if (x == 3){
 14221  00AB70  0E03               	movlw	3
 14222  00AB72  1806               	xorwf	servo_slide@x,w,c
 14223  00AB74  1007               	iorwf	servo_slide@x+1,w,c
 14224  00AB76  A4D8               	btfss	status,2,c
 14225  00AB78  D00B               	goto	l724
 14226                           
 14227                           ;machine_code.c: 247: data[0] = '7';
 14228  00AB7A  0E37               	movlw	55
 14229  00AB7C  6E7F               	movwf	_data,c
 14230                           
 14231                           ;machine_code.c: 248: uartTransmitBlocking(data, 1);
 14232  00AB7E  0E7F               	movlw	low _data
 14233  00AB80  6E01               	movwf	uartTransmitBlocking@data,c
 14234  00AB82  0E00               	movlw	high _data
 14235  00AB84  6E02               	movwf	uartTransmitBlocking@data+1,c
 14236  00AB86  0E01               	movlw	1
 14237  00AB88  6E03               	movwf	uartTransmitBlocking@numBytes,c
 14238  00AB8A  ECD4  F054         	call	_uartTransmitBlocking	;wreg free
 14239                           
 14240                           ;machine_code.c: 249: }
 14241  00AB8E  D02F               	goto	l730
 14242  00AB90                     l724:
 14243                           
 14244                           ;machine_code.c: 250: else if (x == 4){
 14245  00AB90  0E04               	movlw	4
 14246  00AB92  1806               	xorwf	servo_slide@x,w,c
 14247  00AB94  1007               	iorwf	servo_slide@x+1,w,c
 14248  00AB96  A4D8               	btfss	status,2,c
 14249  00AB98  D00B               	goto	l726
 14250                           
 14251                           ;machine_code.c: 251: data[0] = '8';
 14252  00AB9A  0E38               	movlw	56
 14253  00AB9C  6E7F               	movwf	_data,c
 14254                           
 14255                           ;machine_code.c: 252: uartTransmitBlocking(data, 1);
 14256  00AB9E  0E7F               	movlw	low _data
 14257  00ABA0  6E01               	movwf	uartTransmitBlocking@data,c
 14258  00ABA2  0E00               	movlw	high _data
 14259  00ABA4  6E02               	movwf	uartTransmitBlocking@data+1,c
 14260  00ABA6  0E01               	movlw	1
 14261  00ABA8  6E03               	movwf	uartTransmitBlocking@numBytes,c
 14262  00ABAA  ECD4  F054         	call	_uartTransmitBlocking	;wreg free
 14263                           
 14264                           ;machine_code.c: 253: }
 14265  00ABAE  D01F               	goto	l730
 14266  00ABB0                     l726:
 14267                           
 14268                           ;machine_code.c: 254: else if (x == 5){
 14269  00ABB0  0E05               	movlw	5
 14270  00ABB2  1806               	xorwf	servo_slide@x,w,c
 14271  00ABB4  1007               	iorwf	servo_slide@x+1,w,c
 14272  00ABB6  A4D8               	btfss	status,2,c
 14273  00ABB8  D00B               	goto	l728
 14274                           
 14275                           ;machine_code.c: 255: data[0] = '9';
 14276  00ABBA  0E39               	movlw	57
 14277  00ABBC  6E7F               	movwf	_data,c
 14278                           
 14279                           ;machine_code.c: 256: uartTransmitBlocking(data, 1);
 14280  00ABBE  0E7F               	movlw	low _data
 14281  00ABC0  6E01               	movwf	uartTransmitBlocking@data,c
 14282  00ABC2  0E00               	movlw	high _data
 14283  00ABC4  6E02               	movwf	uartTransmitBlocking@data+1,c
 14284  00ABC6  0E01               	movlw	1
 14285  00ABC8  6E03               	movwf	uartTransmitBlocking@numBytes,c
 14286  00ABCA  ECD4  F054         	call	_uartTransmitBlocking	;wreg free
 14287                           
 14288                           ;machine_code.c: 257: }
 14289  00ABCE  D00F               	goto	l730
 14290  00ABD0                     l728:
 14291                           
 14292                           ;machine_code.c: 258: else if (x == 6){
 14293  00ABD0  0E06               	movlw	6
 14294  00ABD2  1806               	xorwf	servo_slide@x,w,c
 14295  00ABD4  1007               	iorwf	servo_slide@x+1,w,c
 14296  00ABD6  A4D8               	btfss	status,2,c
 14297  00ABD8  D00A               	goto	l730
 14298                           
 14299                           ;machine_code.c: 259: data[0] = 'A';
 14300  00ABDA  0E41               	movlw	65
 14301  00ABDC  6E7F               	movwf	_data,c
 14302                           
 14303                           ;machine_code.c: 260: uartTransmitBlocking(data, 1);
 14304  00ABDE  0E7F               	movlw	low _data
 14305  00ABE0  6E01               	movwf	uartTransmitBlocking@data,c
 14306  00ABE2  0E00               	movlw	high _data
 14307  00ABE4  6E02               	movwf	uartTransmitBlocking@data+1,c
 14308  00ABE6  0E01               	movlw	1
 14309  00ABE8  6E03               	movwf	uartTransmitBlocking@numBytes,c
 14310  00ABEA  ECD4  F054         	call	_uartTransmitBlocking	;wreg free
 14311  00ABEE                     l730:
 14312                           
 14313                           ;machine_code.c: 261: }
 14314                           ;machine_code.c: 262: _delay((unsigned long)((1500)*(40000000/4000.0)));
 14315  00ABEE  0E4D               	movlw	77
 14316  00ABF0  6E09               	movwf	(??_servo_slide+1)& (0+255),c
 14317  00ABF2  0E19               	movlw	25
 14318  00ABF4  6E08               	movwf	??_servo_slide& (0+255),c
 14319  00ABF6  0E50               	movlw	80
 14320  00ABF8                     u10287:
 14321  00ABF8  2EE8               	decfsz	wreg,f,c
 14322  00ABFA  D7FE               	bra	u10287
 14323  00ABFC  2E08               	decfsz	??_servo_slide& (0+255),f,c
 14324  00ABFE  D7FC               	bra	u10287
 14325  00AC00  2E09               	decfsz	(??_servo_slide+1)& (0+255),f,c
 14326  00AC02  D7FA               	bra	u10287
 14327  00AC04  0012               	return		;funcret
 14328  00AC06                     __end_of_servo_slide:
 14329                           	opt stack 0
 14330                           tblptru	equ	0xFF8
 14331                           tblptrh	equ	0xFF7
 14332                           tblptrl	equ	0xFF6
 14333                           tablat	equ	0xFF5
 14334                           prodh	equ	0xFF4
 14335                           prodl	equ	0xFF3
 14336                           intcon	equ	0xFF2
 14337                           postinc0	equ	0xFEE
 14338                           wreg	equ	0xFE8
 14339                           postinc1	equ	0xFE6
 14340                           postdec1	equ	0xFE5
 14341                           plusw1	equ	0xFE3
 14342                           fsr1h	equ	0xFE2
 14343                           fsr1l	equ	0xFE1
 14344                           indf2	equ	0xFDF
 14345                           postinc2	equ	0xFDE
 14346                           postdec2	equ	0xFDD
 14347                           plusw2	equ	0xFDB
 14348                           fsr2h	equ	0xFDA
 14349                           fsr2l	equ	0xFD9
 14350                           status	equ	0xFD8
 14351                           
 14352 ;; *************** function _receive_data_RX *****************
 14353 ;; Defined at:
 14354 ;;		line 53 in file "add_functions.c"
 14355 ;; Parameters:    Size  Location     Type
 14356 ;;		None
 14357 ;; Auto vars:     Size  Location     Type
 14358 ;;		None
 14359 ;; Return value:  Size  Location     Type
 14360 ;;                  1    wreg      void 
 14361 ;; Registers used:
 14362 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14363 ;; Tracked objects:
 14364 ;;		On entry : 0/0
 14365 ;;		On exit  : 0/0
 14366 ;;		Unchanged: 0/0
 14367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14368 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14369 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14370 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14371 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14372 ;;Total ram usage:        0 bytes
 14373 ;; Hardware stack levels used:    1
 14374 ;; Hardware stack levels required when called:    1
 14375 ;; This function calls:
 14376 ;;		_uartReceiveBlocking
 14377 ;;		_uartTransmitBlocking
 14378 ;; This function is called by:
 14379 ;;		_sensor_row_check
 14380 ;;		_load_mech
 14381 ;;		_unload_reservoir
 14382 ;; This function uses a non-reentrant model
 14383 ;;
 14384                           
 14385                           	psect	text13
 14386  00A2F0                     __ptext13:
 14387                           	opt stack 0
 14388  00A2F0                     _receive_data_RX:
 14389                           	opt stack 27
 14390                           
 14391                           ;add_functions.c: 54: uartTransmitBlocking(data, 1);
 14392                           
 14393                           ;incstack = 0
 14394  00A2F0  0E7F               	movlw	low _data
 14395  00A2F2  6E01               	movwf	uartTransmitBlocking@data,c
 14396  00A2F4  0E00               	movlw	high _data
 14397  00A2F6  6E02               	movwf	uartTransmitBlocking@data+1,c
 14398  00A2F8  0E01               	movlw	1
 14399  00A2FA  6E03               	movwf	uartTransmitBlocking@numBytes,c
 14400  00A2FC  ECD4  F054         	call	_uartTransmitBlocking	;wreg free
 14401                           
 14402                           ;add_functions.c: 55: uartReceiveBlocking(1);
 14403  00A300  0E01               	movlw	1
 14404  00A302  EC03  F056         	call	_uartReceiveBlocking
 14405                           
 14406                           ;add_functions.c: 56: data_RX = arr_dataRX[0];
 14407  00A306  C3D0  F296         	movff	_arr_dataRX,_data_RX
 14408  00A30A  0012               	return		;funcret
 14409  00A30C                     __end_of_receive_data_RX:
 14410                           	opt stack 0
 14411                           tblptru	equ	0xFF8
 14412                           tblptrh	equ	0xFF7
 14413                           tblptrl	equ	0xFF6
 14414                           tablat	equ	0xFF5
 14415                           prodh	equ	0xFF4
 14416                           prodl	equ	0xFF3
 14417                           intcon	equ	0xFF2
 14418                           postinc0	equ	0xFEE
 14419                           wreg	equ	0xFE8
 14420                           postinc1	equ	0xFE6
 14421                           postdec1	equ	0xFE5
 14422                           plusw1	equ	0xFE3
 14423                           fsr1h	equ	0xFE2
 14424                           fsr1l	equ	0xFE1
 14425                           indf2	equ	0xFDF
 14426                           postinc2	equ	0xFDE
 14427                           postdec2	equ	0xFDD
 14428                           plusw2	equ	0xFDB
 14429                           fsr2h	equ	0xFDA
 14430                           fsr2l	equ	0xFD9
 14431                           status	equ	0xFD8
 14432                           
 14433 ;; *************** function _uartReceiveBlocking *****************
 14434 ;; Defined at:
 14435 ;;		line 102 in file "../../AER201 Sample Codes/PIC DevBugger Sample Codes/10_PIC-Arduino/UART/PIC_UART_Arduino.X/UART_P
      +IC.c"
 14436 ;; Parameters:    Size  Location     Type
 14437 ;;  numBytes        1    wreg     unsigned char 
 14438 ;; Auto vars:     Size  Location     Type
 14439 ;;  numBytes        1    3[COMRAM] unsigned char 
 14440 ;;  numReceives     1    4[COMRAM] unsigned char 
 14441 ;;  temp            1    2[COMRAM] unsigned char 
 14442 ;; Return value:  Size  Location     Type
 14443 ;;                  1    wreg      void 
 14444 ;; Registers used:
 14445 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 14446 ;; Tracked objects:
 14447 ;;		On entry : 0/0
 14448 ;;		On exit  : 0/0
 14449 ;;		Unchanged: 0/0
 14450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14451 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14452 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14453 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14454 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14455 ;;Total ram usage:        5 bytes
 14456 ;; Hardware stack levels used:    1
 14457 ;; This function calls:
 14458 ;;		Nothing
 14459 ;; This function is called by:
 14460 ;;		_receive_data_RX
 14461 ;; This function uses a non-reentrant model
 14462 ;;
 14463                           
 14464                           	psect	text14
 14465  00AC06                     __ptext14:
 14466                           	opt stack 0
 14467  00AC06                     _uartReceiveBlocking:
 14468                           	opt stack 27
 14469                           
 14470                           ;incstack = 0
 14471                           ;uartReceiveBlocking@numBytes stored from wreg
 14472  00AC06  6E04               	movwf	uartReceiveBlocking@numBytes,c
 14473  00AC08                     
 14474                           ;UART_PIC.c: 113: while(UART -> _stateRX == UART_STATE_BUSY){ continue; }
 14475  00AC08  0102               	movlb	2	; () banked
 14476  00AC0A  EE20 F009          	lfsr	2,9
 14477  00AC0E  5194               	movf	_UART& (0+255),w,b
 14478  00AC10  26D9               	addwf	fsr2l,f,c
 14479  00AC12  5195               	movf	(_UART+1)& (0+255),w,b
 14480  00AC14  22DA               	addwfc	fsr2h,f,c
 14481  00AC16  50DF               	movf	indf2,w,c
 14482  00AC18  B4D8               	btfsc	status,2,c
 14483  00AC1A  D7F6               	goto	l5428
 14484                           
 14485                           ; BSR set to: 2
 14486                           ;UART_PIC.c: 116: UART -> _stateRX = UART_STATE_BUSY;
 14487                           
 14488                           ; BSR set to: 2
 14489  00AC1C  EE20 F009          	lfsr	2,9
 14490  00AC20  5194               	movf	_UART& (0+255),w,b
 14491  00AC22  26D9               	addwf	fsr2l,f,c
 14492  00AC24  5195               	movf	(_UART+1)& (0+255),w,b
 14493  00AC26  22DA               	addwfc	fsr2h,f,c
 14494  00AC28  0E00               	movlw	0
 14495  00AC2A  6EDF               	movwf	indf2,c
 14496                           
 14497                           ; BSR set to: 2
 14498                           ;UART_PIC.c: 119: unsigned char numReceives = 0;
 14499  00AC2C  0E00               	movlw	0
 14500  00AC2E  6E05               	movwf	uartReceiveBlocking@numReceives,c
 14501                           
 14502                           ; BSR set to: 2
 14503                           ;UART_PIC.c: 120: UART -> _lastReceiveFERR = 1;
 14504  00AC30  EE20 F00A          	lfsr	2,10
 14505  00AC34  5194               	movf	_UART& (0+255),w,b
 14506  00AC36  26D9               	addwf	fsr2l,f,c
 14507  00AC38  5195               	movf	(_UART+1)& (0+255),w,b
 14508  00AC3A  22DA               	addwfc	fsr2h,f,c
 14509  00AC3C  0E01               	movlw	1
 14510  00AC3E  6EDF               	movwf	indf2,c
 14511                           
 14512                           ; BSR set to: 2
 14513                           ;UART_PIC.c: 121: UART -> _lastReceiveOERR = 1;
 14514  00AC40  EE20 F00B          	lfsr	2,11
 14515  00AC44  5194               	movf	_UART& (0+255),w,b
 14516  00AC46  26D9               	addwf	fsr2l,f,c
 14517  00AC48  5195               	movf	(_UART+1)& (0+255),w,b
 14518  00AC4A  22DA               	addwfc	fsr2h,f,c
 14519  00AC4C  0E01               	movlw	1
 14520  00AC4E  6EDF               	movwf	indf2,c
 14521                           
 14522                           ; BSR set to: 2
 14523                           ;UART_PIC.c: 124: RCSTAbits.CREN = 1;
 14524  00AC50  88AB               	bsf	4011,4,c	;volatile
 14525                           
 14526                           ; BSR set to: 2
 14527                           ;UART_PIC.c: 125: unsigned char temp = RCREG;
 14528  00AC52  CFAE F003          	movff	4014,uartReceiveBlocking@temp	;volatile
 14529                           
 14530                           ;UART_PIC.c: 128: while(numReceives < numBytes){
 14531  00AC56  D043               	goto	l1330
 14532  00AC58                     
 14533                           ; BSR set to: 2
 14534                           
 14535                           ; BSR set to: 2
 14536                           ;UART_PIC.c: 130: while(!RCIF){ continue; }
 14537  00AC58  AA9E               	btfss	3998,5,c	;volatile
 14538  00AC5A  D7FE               	goto	l1331
 14539                           
 14540                           ;UART_PIC.c: 134: if(RCSTAbits.FERR){
 14541  00AC5C  A4AB               	btfss	4011,2,c	;volatile
 14542  00AC5E  D009               	goto	l1335
 14543                           
 14544                           ;UART_PIC.c: 138: UART -> _lastReceiveFERR = 1;
 14545  00AC60  0102               	movlb	2	; () banked
 14546  00AC62  EE20 F00A          	lfsr	2,10
 14547  00AC66  5194               	movf	_UART& (0+255),w,b
 14548  00AC68  26D9               	addwf	fsr2l,f,c
 14549  00AC6A  5195               	movf	(_UART+1)& (0+255),w,b
 14550  00AC6C  22DA               	addwfc	fsr2h,f,c
 14551  00AC6E  0E01               	movlw	1
 14552  00AC70  D008               	goto	L17
 14553  00AC72                     l1335:
 14554                           
 14555                           ;UART_PIC.c: 140: else{
 14556                           ;UART_PIC.c: 141: UART -> _lastReceiveFERR = 0;
 14557                           
 14558                           ; BSR set to: 2
 14559  00AC72  0102               	movlb	2	; () banked
 14560  00AC74  EE20 F00A          	lfsr	2,10
 14561  00AC78  5194               	movf	_UART& (0+255),w,b
 14562  00AC7A  26D9               	addwf	fsr2l,f,c
 14563  00AC7C  5195               	movf	(_UART+1)& (0+255),w,b
 14564  00AC7E  22DA               	addwfc	fsr2h,f,c
 14565  00AC80  0E00               	movlw	0
 14566  00AC82                     L17:
 14567  00AC82  6EDF               	movwf	indf2,c
 14568                           
 14569                           ; BSR set to: 2
 14570                           ;UART_PIC.c: 142: }
 14571                           ;UART_PIC.c: 145: UARTinterruptState = INTCONbits.GIE;
 14572                           
 14573                           ; BSR set to: 2
 14574  00AC84  0E00               	movlw	0
 14575  00AC86  BEF2               	btfsc	intcon,7,c	;volatile
 14576  00AC88  0E01               	movlw	1
 14577  00AC8A  6FD7               	movwf	_UARTinterruptState& (0+255),b	;volatile
 14578                           
 14579                           ; BSR set to: 2
 14580                           ;UART_PIC.c: 146: (INTCONbits.GIE = 0);
 14581  00AC8C  9EF2               	bcf	intcon,7,c	;volatile
 14582                           
 14583                           ; BSR set to: 2
 14584                           ;UART_PIC.c: 147: UART -> _dataRX[numReceives] = RCREG;
 14585  00AC8E  5005               	movf	uartReceiveBlocking@numReceives,w,c
 14586  00AC90  0D01               	mullw	1
 14587  00AC92  EE20 F004          	lfsr	2,4
 14588  00AC96  5194               	movf	_UART& (0+255),w,b
 14589  00AC98  26D9               	addwf	fsr2l,f,c
 14590  00AC9A  5195               	movf	(_UART+1)& (0+255),w,b
 14591  00AC9C  22DA               	addwfc	fsr2h,f,c
 14592  00AC9E  CFDE F001          	movff	postinc2,??_uartReceiveBlocking
 14593  00ACA2  CFDD F002          	movff	postdec2,??_uartReceiveBlocking+1
 14594  00ACA6  50F3               	movf	prodl,w,c
 14595  00ACA8  2401               	addwf	??_uartReceiveBlocking,w,c
 14596  00ACAA  6ED9               	movwf	fsr2l,c
 14597  00ACAC  50F4               	movf	prodh,w,c
 14598  00ACAE  2002               	addwfc	??_uartReceiveBlocking+1,w,c
 14599  00ACB0  6EDA               	movwf	fsr2h,c
 14600  00ACB2  CFAE FFDF          	movff	4014,indf2	;volatile
 14601                           
 14602                           ; BSR set to: 2
 14603                           ;UART_PIC.c: 148: INTCONbits.GIE = UARTinterruptState;
 14604  00ACB6  B1D7               	btfsc	_UARTinterruptState& (0+255),0,b	;volatile
 14605  00ACB8  D002               	bra	u4465
 14606  00ACBA  9EF2               	bcf	intcon,7,c	;volatile
 14607  00ACBC  D001               	bra	u4466
 14608  00ACBE                     u4465:
 14609  00ACBE  8EF2               	bsf	intcon,7,c	;volatile
 14610  00ACC0                     u4466:
 14611                           
 14612                           ;UART_PIC.c: 152: if(RCSTAbits.OERR){
 14613  00ACC0  A2AB               	btfss	4011,1,c	;volatile
 14614  00ACC2  D003               	goto	l1337
 14615                           
 14616                           ;UART_PIC.c: 154: RCSTAbits.CREN = 0;
 14617  00ACC4  98AB               	bcf	4011,4,c	;volatile
 14618                           
 14619                           ;UART_PIC.c: 155: RCSTAbits.CREN = 1;
 14620  00ACC6  88AB               	bsf	4011,4,c	;volatile
 14621                           
 14622                           ;UART_PIC.c: 156: }
 14623  00ACC8  D009               	goto	l1338
 14624  00ACCA                     l1337:
 14625                           
 14626                           ;UART_PIC.c: 157: else{
 14627                           ;UART_PIC.c: 158: UART -> _lastReceiveOERR = 0;
 14628  00ACCA  0102               	movlb	2	; () banked
 14629  00ACCC  EE20 F00B          	lfsr	2,11
 14630  00ACD0  5194               	movf	_UART& (0+255),w,b
 14631  00ACD2  26D9               	addwf	fsr2l,f,c
 14632  00ACD4  5195               	movf	(_UART+1)& (0+255),w,b
 14633  00ACD6  22DA               	addwfc	fsr2h,f,c
 14634  00ACD8  0E00               	movlw	0
 14635  00ACDA  6EDF               	movwf	indf2,c
 14636  00ACDC                     l1338:
 14637                           
 14638                           ;UART_PIC.c: 159: }
 14639                           ;UART_PIC.c: 161: numReceives++;
 14640                           
 14641                           ; BSR set to: 2
 14642  00ACDC  2A05               	incf	uartReceiveBlocking@numReceives,f,c
 14643  00ACDE                     l1330:
 14644  00ACDE  5004               	movf	uartReceiveBlocking@numBytes,w,c
 14645  00ACE0  5C05               	subwf	uartReceiveBlocking@numReceives,w,c
 14646  00ACE2  A0D8               	btfss	status,0,c
 14647  00ACE4  D7B9               	goto	l1331
 14648                           
 14649                           ;UART_PIC.c: 162: }
 14650                           ;UART_PIC.c: 165: UART -> _stateRX = UART_STATE_READY;
 14651  00ACE6  0102               	movlb	2	; () banked
 14652  00ACE8  EE20 F009          	lfsr	2,9
 14653  00ACEC  5194               	movf	_UART& (0+255),w,b
 14654  00ACEE  26D9               	addwf	fsr2l,f,c
 14655  00ACF0  5195               	movf	(_UART+1)& (0+255),w,b
 14656  00ACF2  22DA               	addwfc	fsr2h,f,c
 14657  00ACF4  0E01               	movlw	1
 14658  00ACF6  6EDF               	movwf	indf2,c
 14659                           
 14660                           ; BSR set to: 2
 14661  00ACF8  0012               	return		;funcret
 14662  00ACFA                     __end_of_uartReceiveBlocking:
 14663                           	opt stack 0
 14664                           tblptru	equ	0xFF8
 14665                           tblptrh	equ	0xFF7
 14666                           tblptrl	equ	0xFF6
 14667                           tablat	equ	0xFF5
 14668                           prodh	equ	0xFF4
 14669                           prodl	equ	0xFF3
 14670                           intcon	equ	0xFF2
 14671                           postinc0	equ	0xFEE
 14672                           wreg	equ	0xFE8
 14673                           postinc1	equ	0xFE6
 14674                           postdec1	equ	0xFE5
 14675                           plusw1	equ	0xFE3
 14676                           fsr1h	equ	0xFE2
 14677                           fsr1l	equ	0xFE1
 14678                           indf2	equ	0xFDF
 14679                           postinc2	equ	0xFDE
 14680                           postdec2	equ	0xFDD
 14681                           plusw2	equ	0xFDB
 14682                           fsr2h	equ	0xFDA
 14683                           fsr2l	equ	0xFD9
 14684                           status	equ	0xFD8
 14685                           
 14686 ;; *************** function _comp_time_difference *****************
 14687 ;; Defined at:
 14688 ;;		line 194 in file "add_functions.c"
 14689 ;; Parameters:    Size  Location     Type
 14690 ;;		None
 14691 ;; Auto vars:     Size  Location     Type
 14692 ;;  i               2   28[COMRAM] short 
 14693 ;; Return value:  Size  Location     Type
 14694 ;;                  1    wreg      void 
 14695 ;; Registers used:
 14696 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14697 ;; Tracked objects:
 14698 ;;		On entry : 0/0
 14699 ;;		On exit  : 0/0
 14700 ;;		Unchanged: 0/0
 14701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14702 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14703 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14704 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14705 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14706 ;;Total ram usage:        9 bytes
 14707 ;; Hardware stack levels used:    1
 14708 ;; Hardware stack levels required when called:    2
 14709 ;; This function calls:
 14710 ;;		_I2C_Master_Init
 14711 ;;		_I2C_Master_Read
 14712 ;;		_I2C_Master_Start
 14713 ;;		_I2C_Master_Stop
 14714 ;;		_I2C_Master_Write
 14715 ;;		___wmul
 14716 ;; This function is called by:
 14717 ;;		_main
 14718 ;;		_unload_reservoir
 14719 ;; This function uses a non-reentrant model
 14720 ;;
 14721                           
 14722                           	psect	text15
 14723  00B182                     __ptext15:
 14724                           	opt stack 0
 14725  00B182                     _comp_time_difference:
 14726                           	opt stack 25
 14727                           
 14728                           ;add_functions.c: 195: short int i = 0;
 14729                           
 14730                           ; BSR set to: 2
 14731                           ;incstack = 0
 14732  00B182  0E00               	movlw	0
 14733  00B184  6E1E               	movwf	comp_time_difference@i+1,c
 14734  00B186  0E00               	movlw	0
 14735  00B188  6E1D               	movwf	comp_time_difference@i,c
 14736                           
 14737                           ;add_functions.c: 197: I2C_Master_Init(100000);
 14738  00B18A  0EA0               	movlw	160
 14739  00B18C  6E0E               	movwf	I2C_Master_Init@clockFreq,c
 14740  00B18E  0E86               	movlw	134
 14741  00B190  6E0F               	movwf	I2C_Master_Init@clockFreq+1,c
 14742  00B192  0E01               	movlw	1
 14743  00B194  6E10               	movwf	I2C_Master_Init@clockFreq+2,c
 14744  00B196  0E00               	movlw	0
 14745  00B198  6E11               	movwf	I2C_Master_Init@clockFreq+3,c
 14746  00B19A  ECA8  F052         	call	_I2C_Master_Init	;wreg free
 14747                           
 14748                           ;add_functions.c: 198: I2C_Master_Start();
 14749  00B19E  EC28  F051         	call	_I2C_Master_Start	;wreg free
 14750                           
 14751                           ;add_functions.c: 199: I2C_Master_Write(0b11010000);
 14752  00B1A2  0E00               	movlw	0
 14753  00B1A4  6E03               	movwf	I2C_Master_Write@byteToWrite+1,c
 14754  00B1A6  0ED0               	movlw	208
 14755  00B1A8  6E02               	movwf	I2C_Master_Write@byteToWrite,c
 14756  00B1AA  EC30  F051         	call	_I2C_Master_Write	;wreg free
 14757                           
 14758                           ;add_functions.c: 200: I2C_Master_Write(0x00);
 14759  00B1AE  0E00               	movlw	0
 14760  00B1B0  6E03               	movwf	I2C_Master_Write@byteToWrite+1,c
 14761  00B1B2  0E00               	movlw	0
 14762  00B1B4  6E02               	movwf	I2C_Master_Write@byteToWrite,c
 14763  00B1B6  EC30  F051         	call	_I2C_Master_Write	;wreg free
 14764                           
 14765                           ;add_functions.c: 201: I2C_Master_Stop();
 14766  00B1BA  EC2C  F051         	call	_I2C_Master_Stop	;wreg free
 14767                           
 14768                           ;add_functions.c: 204: I2C_Master_Start();
 14769  00B1BE  EC28  F051         	call	_I2C_Master_Start	;wreg free
 14770                           
 14771                           ;add_functions.c: 205: I2C_Master_Write(0b11010001);
 14772  00B1C2  0E00               	movlw	0
 14773  00B1C4  6E03               	movwf	I2C_Master_Write@byteToWrite+1,c
 14774  00B1C6  0ED1               	movlw	209
 14775  00B1C8  6E02               	movwf	I2C_Master_Write@byteToWrite,c
 14776  00B1CA  EC30  F051         	call	_I2C_Master_Write	;wreg free
 14777                           
 14778                           ;add_functions.c: 206: for(i = 0; i < 6; i++){
 14779  00B1CE  0E00               	movlw	0
 14780  00B1D0  6E1E               	movwf	comp_time_difference@i+1,c
 14781  00B1D2  0E00               	movlw	0
 14782  00B1D4  6E1D               	movwf	comp_time_difference@i,c
 14783  00B1D6                     l5492:
 14784  00B1D6  BE1E               	btfsc	comp_time_difference@i+1,7,c
 14785  00B1D8  D006               	goto	l1173
 14786  00B1DA  501E               	movf	comp_time_difference@i+1,w,c
 14787  00B1DC  E111               	bnz	l5502
 14788  00B1DE  0E06               	movlw	6
 14789  00B1E0  5C1D               	subwf	comp_time_difference@i,w,c
 14790  00B1E2  B0D8               	btfsc	status,0,c
 14791  00B1E4  D00D               	goto	u4500
 14792  00B1E6                     l1173:
 14793                           
 14794                           ;add_functions.c: 207: time[i] = I2C_Master_Read(0);
 14795  00B1E6  0EB7               	movlw	low _time
 14796  00B1E8  241D               	addwf	comp_time_difference@i,w,c
 14797  00B1EA  6ED9               	movwf	fsr2l,c
 14798  00B1EC  0E02               	movlw	high _time
 14799  00B1EE  201E               	addwfc	comp_time_difference@i+1,w,c
 14800  00B1F0  6EDA               	movwf	fsr2h,c
 14801  00B1F2  0E00               	movlw	0
 14802  00B1F4  ECA5  F051         	call	_I2C_Master_Read
 14803  00B1F8  6EDF               	movwf	indf2,c
 14804  00B1FA  4A1D               	infsnz	comp_time_difference@i,f,c
 14805  00B1FC  2A1E               	incf	comp_time_difference@i+1,f,c
 14806  00B1FE  D7EB               	goto	l5492
 14807  00B200                     u4500:
 14808  00B200                     l5502:
 14809                           
 14810                           ;add_functions.c: 208: }
 14811                           ;add_functions.c: 209: time[6] = I2C_Master_Read(1);
 14812  00B200  0E01               	movlw	1
 14813  00B202  ECA5  F051         	call	_I2C_Master_Read
 14814  00B206  0102               	movlb	2	; () banked
 14815  00B208  6FBD               	movwf	(_time+6)& (0+255),b
 14816                           
 14817                           ;add_functions.c: 210: I2C_Master_Stop();
 14818  00B20A  EC2C  F051         	call	_I2C_Master_Stop	;wreg free
 14819                           
 14820                           ;add_functions.c: 212: total_final_time = (((time[2]&0x0F))*3600 + (((time[1] & 0xF0) >>
      +                           4)*10 + (time[1]&0x0F))*60 + ((time[0] & 0xF0) >> 4)*10 + (time[0]&0x0F));
 14821  00B20E  C2B9  F016         	movff	_time+2,??_comp_time_difference
 14822  00B212  0E0F               	movlw	15
 14823  00B214  1616               	andwf	??_comp_time_difference,f,c
 14824  00B216  5016               	movf	??_comp_time_difference,w,c
 14825  00B218  6E01               	movwf	___wmul@multiplier,c
 14826  00B21A  6A02               	clrf	___wmul@multiplier+1,c
 14827  00B21C  0E0E               	movlw	14
 14828  00B21E  6E04               	movwf	___wmul@multiplicand+1,c
 14829  00B220  0E10               	movlw	16
 14830  00B222  6E03               	movwf	___wmul@multiplicand,c
 14831  00B224  ECB7  F051         	call	___wmul	;wreg free
 14832  00B228  C001  F017         	movff	?___wmul,??_comp_time_difference+1
 14833  00B22C  C002  F018         	movff	?___wmul+1,??_comp_time_difference+2
 14834  00B230  C2B8  F019         	movff	_time+1,??_comp_time_difference+3
 14835  00B234  0E0F               	movlw	15
 14836  00B236  1619               	andwf	??_comp_time_difference+3,f,c
 14837  00B238  C2B8  F01A         	movff	_time+1,??_comp_time_difference+4
 14838  00B23C  3A1A               	swapf	??_comp_time_difference+4,f,c
 14839  00B23E  0E0F               	movlw	15
 14840  00B240  161A               	andwf	??_comp_time_difference+4,f,c
 14841  00B242  0E0F               	movlw	15
 14842  00B244  161A               	andwf	??_comp_time_difference+4,f,c
 14843  00B246  501A               	movf	??_comp_time_difference+4,w,c
 14844  00B248  0D0A               	mullw	10
 14845  00B24A  5019               	movf	??_comp_time_difference+3,w,c
 14846  00B24C  24F3               	addwf	prodl,w,c
 14847  00B24E  6E01               	movwf	___wmul@multiplier,c
 14848  00B250  0E00               	movlw	0
 14849  00B252  20F4               	addwfc	prodh,w,c
 14850  00B254  6E02               	movwf	___wmul@multiplier+1,c
 14851  00B256  0E00               	movlw	0
 14852  00B258  6E04               	movwf	___wmul@multiplicand+1,c
 14853  00B25A  0E3C               	movlw	60
 14854  00B25C  6E03               	movwf	___wmul@multiplicand,c
 14855  00B25E  ECB7  F051         	call	___wmul	;wreg free
 14856  00B262  5001               	movf	?___wmul,w,c
 14857  00B264  2617               	addwf	??_comp_time_difference+1,f,c
 14858  00B266  5002               	movf	?___wmul+1,w,c
 14859  00B268  2218               	addwfc	??_comp_time_difference+2,f,c
 14860  00B26A  C2B7  F01B         	movff	_time,??_comp_time_difference+5
 14861  00B26E  3A1B               	swapf	??_comp_time_difference+5,f,c
 14862  00B270  0E0F               	movlw	15
 14863  00B272  161B               	andwf	??_comp_time_difference+5,f,c
 14864  00B274  0E0F               	movlw	15
 14865  00B276  161B               	andwf	??_comp_time_difference+5,f,c
 14866  00B278  501B               	movf	??_comp_time_difference+5,w,c
 14867  00B27A  0D0A               	mullw	10
 14868  00B27C  50F3               	movf	prodl,w,c
 14869  00B27E  2617               	addwf	??_comp_time_difference+1,f,c
 14870  00B280  50F4               	movf	prodh,w,c
 14871  00B282  2218               	addwfc	??_comp_time_difference+2,f,c
 14872  00B284  C2B7  F01C         	movff	_time,??_comp_time_difference+6
 14873  00B288  0E0F               	movlw	15
 14874  00B28A  161C               	andwf	??_comp_time_difference+6,f,c
 14875  00B28C  501C               	movf	??_comp_time_difference+6,w,c
 14876  00B28E  2617               	addwf	??_comp_time_difference+1,f,c
 14877  00B290  0E00               	movlw	0
 14878  00B292  2218               	addwfc	??_comp_time_difference+2,f,c
 14879  00B294  C017  F2C8         	movff	??_comp_time_difference+1,_total_final_time
 14880  00B298  C018  F2C9         	movff	??_comp_time_difference+2,_total_final_time+1
 14881  00B29C  0102               	movlb	2	; () banked
 14882  00B29E  0E00               	movlw	0
 14883  00B2A0  BFC9               	btfsc	(_total_final_time+1)& (0+255),7,b
 14884  00B2A2  0EFF               	movlw	-1
 14885  00B2A4  6FCA               	movwf	(_total_final_time+2)& (0+255),b
 14886  00B2A6  6FCB               	movwf	(_total_final_time+3)& (0+255),b
 14887                           
 14888                           ; BSR set to: 2
 14889                           ;add_functions.c: 213: total_difference = total_final_time - total_init_time;
 14890  00B2A8  C2CC  F016         	movff	_total_init_time,??_comp_time_difference
 14891  00B2AC  C2CD  F017         	movff	_total_init_time+1,??_comp_time_difference+1
 14892  00B2B0  C2CE  F018         	movff	_total_init_time+2,??_comp_time_difference+2
 14893  00B2B4  C2CF  F019         	movff	_total_init_time+3,??_comp_time_difference+3
 14894  00B2B8  1E16               	comf	??_comp_time_difference,f,c
 14895  00B2BA  1E17               	comf	??_comp_time_difference+1,f,c
 14896  00B2BC  1E18               	comf	??_comp_time_difference+2,f,c
 14897  00B2BE  1E19               	comf	??_comp_time_difference+3,f,c
 14898  00B2C0  2A16               	incf	??_comp_time_difference,f,c
 14899  00B2C2  0E00               	movlw	0
 14900  00B2C4  2217               	addwfc	??_comp_time_difference+1,f,c
 14901  00B2C6  2218               	addwfc	??_comp_time_difference+2,f,c
 14902  00B2C8  2219               	addwfc	??_comp_time_difference+3,f,c
 14903  00B2CA  51C8               	movf	_total_final_time& (0+255),w,b
 14904  00B2CC  2416               	addwf	??_comp_time_difference,w,c
 14905  00B2CE  6FC4               	movwf	_total_difference& (0+255),b
 14906  00B2D0  51C9               	movf	(_total_final_time+1)& (0+255),w,b
 14907  00B2D2  2017               	addwfc	??_comp_time_difference+1,w,c
 14908  00B2D4  6FC5               	movwf	(_total_difference+1)& (0+255),b
 14909  00B2D6  51CA               	movf	(_total_final_time+2)& (0+255),w,b
 14910  00B2D8  2018               	addwfc	??_comp_time_difference+2,w,c
 14911  00B2DA  6FC6               	movwf	(_total_difference+2)& (0+255),b
 14912  00B2DC  51CB               	movf	(_total_final_time+3)& (0+255),w,b
 14913  00B2DE  2019               	addwfc	??_comp_time_difference+3,w,c
 14914  00B2E0  6FC7               	movwf	(_total_difference+3)& (0+255),b
 14915                           
 14916                           ; BSR set to: 2
 14917  00B2E2  0012               	return		;funcret
 14918  00B2E4                     __end_of_comp_time_difference:
 14919                           	opt stack 0
 14920                           tblptru	equ	0xFF8
 14921                           tblptrh	equ	0xFF7
 14922                           tblptrl	equ	0xFF6
 14923                           tablat	equ	0xFF5
 14924                           prodh	equ	0xFF4
 14925                           prodl	equ	0xFF3
 14926                           intcon	equ	0xFF2
 14927                           postinc0	equ	0xFEE
 14928                           wreg	equ	0xFE8
 14929                           postinc1	equ	0xFE6
 14930                           postdec1	equ	0xFE5
 14931                           plusw1	equ	0xFE3
 14932                           fsr1h	equ	0xFE2
 14933                           fsr1l	equ	0xFE1
 14934                           indf2	equ	0xFDF
 14935                           postinc2	equ	0xFDE
 14936                           postdec2	equ	0xFDD
 14937                           plusw2	equ	0xFDB
 14938                           fsr2h	equ	0xFDA
 14939                           fsr2l	equ	0xFD9
 14940                           status	equ	0xFD8
 14941                           
 14942 ;; *************** function _I2C_Master_Read *****************
 14943 ;; Defined at:
 14944 ;;		line 128 in file "I2C.c"
 14945 ;; Parameters:    Size  Location     Type
 14946 ;;  ackBit          1    wreg     unsigned char 
 14947 ;; Auto vars:     Size  Location     Type
 14948 ;;  ackBit          1    1[COMRAM] unsigned char 
 14949 ;;  receivedByte    1    2[COMRAM] unsigned char 
 14950 ;; Return value:  Size  Location     Type
 14951 ;;                  1    wreg      unsigned char 
 14952 ;; Registers used:
 14953 ;;		wreg, status,2, status,0, cstack
 14954 ;; Tracked objects:
 14955 ;;		On entry : 0/0
 14956 ;;		On exit  : 0/0
 14957 ;;		Unchanged: 0/0
 14958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14959 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14960 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14961 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14962 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14963 ;;Total ram usage:        2 bytes
 14964 ;; Hardware stack levels used:    1
 14965 ;; Hardware stack levels required when called:    1
 14966 ;; This function calls:
 14967 ;;		_I2C_Master_Wait
 14968 ;; This function is called by:
 14969 ;;		_main
 14970 ;;		_set_total_init_time
 14971 ;;		_comp_time_difference
 14972 ;;		_getRTC
 14973 ;; This function uses a non-reentrant model
 14974 ;;
 14975                           
 14976                           	psect	text16
 14977  00A34A                     __ptext16:
 14978                           	opt stack 0
 14979  00A34A                     _I2C_Master_Read:
 14980                           	opt stack 28
 14981                           
 14982                           ; BSR set to: 2
 14983                           ;incstack = 0
 14984                           ;I2C_Master_Read@ackBit stored from wreg
 14985  00A34A  6E02               	movwf	I2C_Master_Read@ackBit,c
 14986                           
 14987                           ;I2C.c: 138: unsigned char receivedByte;
 14988                           ;I2C.c: 140: I2C_Master_Wait();
 14989  00A34C  EC35  F051         	call	_I2C_Master_Wait	;wreg free
 14990                           
 14991                           ;I2C.c: 141: SSPCON2bits.RCEN = 1;
 14992  00A350  86C5               	bsf	4037,3,c	;volatile
 14993                           
 14994                           ;I2C.c: 143: I2C_Master_Wait();
 14995  00A352  EC35  F051         	call	_I2C_Master_Wait	;wreg free
 14996                           
 14997                           ;I2C.c: 144: receivedByte = SSPBUF;
 14998  00A356  CFC9 F003          	movff	4041,I2C_Master_Read@receivedByte	;volatile
 14999                           
 15000                           ;I2C.c: 146: I2C_Master_Wait();
 15001  00A35A  EC35  F051         	call	_I2C_Master_Wait	;wreg free
 15002                           
 15003                           ;I2C.c: 147: SSPCON2bits.ACKDT = ackBit;
 15004  00A35E  B002               	btfsc	I2C_Master_Read@ackBit,0,c
 15005  00A360  D002               	bra	u4425
 15006  00A362  9AC5               	bcf	4037,5,c	;volatile
 15007  00A364  D001               	bra	u4426
 15008  00A366                     u4425:
 15009  00A366  8AC5               	bsf	4037,5,c	;volatile
 15010  00A368                     u4426:
 15011                           
 15012                           ;I2C.c: 148: SSPCON2bits.ACKEN = 1;
 15013  00A368  88C5               	bsf	4037,4,c	;volatile
 15014                           
 15015                           ;I2C.c: 150: return receivedByte;
 15016  00A36A  5003               	movf	I2C_Master_Read@receivedByte,w,c
 15017  00A36C  0012               	return	
 15018  00A36E                     __end_of_I2C_Master_Read:
 15019                           	opt stack 0
 15020                           tblptru	equ	0xFF8
 15021                           tblptrh	equ	0xFF7
 15022                           tblptrl	equ	0xFF6
 15023                           tablat	equ	0xFF5
 15024                           prodh	equ	0xFF4
 15025                           prodl	equ	0xFF3
 15026                           intcon	equ	0xFF2
 15027                           postinc0	equ	0xFEE
 15028                           wreg	equ	0xFE8
 15029                           postinc1	equ	0xFE6
 15030                           postdec1	equ	0xFE5
 15031                           plusw1	equ	0xFE3
 15032                           fsr1h	equ	0xFE2
 15033                           fsr1l	equ	0xFE1
 15034                           indf2	equ	0xFDF
 15035                           postinc2	equ	0xFDE
 15036                           postdec2	equ	0xFDD
 15037                           plusw2	equ	0xFDB
 15038                           fsr2h	equ	0xFDA
 15039                           fsr2l	equ	0xFD9
 15040                           status	equ	0xFD8
 15041                           
 15042 ;; *************** function _hook_mech *****************
 15043 ;; Defined at:
 15044 ;;		line 353 in file "machine_code.c"
 15045 ;; Parameters:    Size  Location     Type
 15046 ;;  z               2    5[COMRAM] int 
 15047 ;; Auto vars:     Size  Location     Type
 15048 ;;		None
 15049 ;; Return value:  Size  Location     Type
 15050 ;;                  1    wreg      void 
 15051 ;; Registers used:
 15052 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15053 ;; Tracked objects:
 15054 ;;		On entry : 0/0
 15055 ;;		On exit  : 0/0
 15056 ;;		Unchanged: 0/0
 15057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15058 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15059 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15060 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15061 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15062 ;;Total ram usage:        2 bytes
 15063 ;; Hardware stack levels used:    1
 15064 ;; Hardware stack levels required when called:    1
 15065 ;; This function calls:
 15066 ;;		_uartTransmitBlocking
 15067 ;; This function is called by:
 15068 ;;		_package_food
 15069 ;;		_height_mech
 15070 ;;		_finalize
 15071 ;; This function uses a non-reentrant model
 15072 ;;
 15073                           
 15074                           	psect	text17
 15075  00A3F4                     __ptext17:
 15076                           	opt stack 0
 15077  00A3F4                     _hook_mech:
 15078                           	opt stack 28
 15079                           
 15080                           ;machine_code.c: 357: if (z == 0){
 15081                           
 15082                           ;incstack = 0
 15083  00A3F4  5006               	movf	hook_mech@z,w,c
 15084  00A3F6  1007               	iorwf	hook_mech@z+1,w,c
 15085  00A3F8  A4D8               	btfss	status,2,c
 15086  00A3FA  D00B               	goto	l760
 15087                           
 15088                           ;machine_code.c: 358: data[0] = 'B';
 15089  00A3FC  0E42               	movlw	66
 15090  00A3FE  6E7F               	movwf	_data,c
 15091                           
 15092                           ;machine_code.c: 359: uartTransmitBlocking(data, 1);
 15093  00A400  0E7F               	movlw	low _data
 15094  00A402  6E01               	movwf	uartTransmitBlocking@data,c
 15095  00A404  0E00               	movlw	high _data
 15096  00A406  6E02               	movwf	uartTransmitBlocking@data+1,c
 15097  00A408  0E01               	movlw	1
 15098  00A40A  6E03               	movwf	uartTransmitBlocking@numBytes,c
 15099  00A40C  ECD4  F054         	call	_uartTransmitBlocking	;wreg free
 15100                           
 15101                           ;machine_code.c: 360: }
 15102  00A410  0012               	return	
 15103  00A412                     l760:
 15104                           
 15105                           ;machine_code.c: 361: else if (z == 1){
 15106  00A412  0406               	decf	hook_mech@z,w,c
 15107  00A414  1007               	iorwf	hook_mech@z+1,w,c
 15108  00A416  A4D8               	btfss	status,2,c
 15109  00A418  0012               	return	
 15110                           
 15111                           ;machine_code.c: 362: data[0] = 'C';
 15112  00A41A  0E43               	movlw	67
 15113  00A41C  6E7F               	movwf	_data,c
 15114                           
 15115                           ;machine_code.c: 363: uartTransmitBlocking(data, 1);
 15116  00A41E  0E7F               	movlw	low _data
 15117  00A420  6E01               	movwf	uartTransmitBlocking@data,c
 15118  00A422  0E00               	movlw	high _data
 15119  00A424  6E02               	movwf	uartTransmitBlocking@data+1,c
 15120  00A426  0E01               	movlw	1
 15121  00A428  6E03               	movwf	uartTransmitBlocking@numBytes,c
 15122  00A42A  ECD4  F054         	call	_uartTransmitBlocking	;wreg free
 15123  00A42E  0012               	return	
 15124  00A430                     __end_of_hook_mech:
 15125                           	opt stack 0
 15126                           tblptru	equ	0xFF8
 15127                           tblptrh	equ	0xFF7
 15128                           tblptrl	equ	0xFF6
 15129                           tablat	equ	0xFF5
 15130                           prodh	equ	0xFF4
 15131                           prodl	equ	0xFF3
 15132                           intcon	equ	0xFF2
 15133                           postinc0	equ	0xFEE
 15134                           wreg	equ	0xFE8
 15135                           postinc1	equ	0xFE6
 15136                           postdec1	equ	0xFE5
 15137                           plusw1	equ	0xFE3
 15138                           fsr1h	equ	0xFE2
 15139                           fsr1l	equ	0xFE1
 15140                           indf2	equ	0xFDF
 15141                           postinc2	equ	0xFDE
 15142                           postdec2	equ	0xFDD
 15143                           plusw2	equ	0xFDB
 15144                           fsr2h	equ	0xFDA
 15145                           fsr2l	equ	0xFD9
 15146                           status	equ	0xFD8
 15147                           
 15148 ;; *************** function _uartTransmitBlocking *****************
 15149 ;; Defined at:
 15150 ;;		line 21 in file "../../AER201 Sample Codes/PIC DevBugger Sample Codes/10_PIC-Arduino/UART/PIC_UART_Arduino.X/UART_PI
      +C.c"
 15151 ;; Parameters:    Size  Location     Type
 15152 ;;  data            2    0[COMRAM] PTR unsigned char 
 15153 ;;		 -> unload_reservoir@pill_unload(1), data(1), man_cont_data(1), 
 15154 ;;  numBytes        1    2[COMRAM] unsigned char 
 15155 ;; Auto vars:     Size  Location     Type
 15156 ;;  numTransmits    1    4[COMRAM] unsigned char 
 15157 ;; Return value:  Size  Location     Type
 15158 ;;                  1    wreg      void 
 15159 ;; Registers used:
 15160 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 15161 ;; Tracked objects:
 15162 ;;		On entry : 0/0
 15163 ;;		On exit  : 0/0
 15164 ;;		Unchanged: 0/0
 15165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15166 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15167 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15168 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15169 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15170 ;;Total ram usage:        5 bytes
 15171 ;; Hardware stack levels used:    1
 15172 ;; This function calls:
 15173 ;;		Nothing
 15174 ;; This function is called by:
 15175 ;;		_main
 15176 ;;		_servo_slide
 15177 ;;		_height_mech
 15178 ;;		_hook_mech
 15179 ;;		_load_mech
 15180 ;;		_unload_reservoir
 15181 ;;		_finalize
 15182 ;;		_receive_data_RX
 15183 ;; This function uses a non-reentrant model
 15184 ;;
 15185                           
 15186                           	psect	text18
 15187  00A9A8                     __ptext18:
 15188                           	opt stack 0
 15189  00A9A8                     _uartTransmitBlocking:
 15190                           	opt stack 30
 15191                           
 15192                           ;UART_PIC.c: 35: while(UART -> _stateTX == UART_STATE_BUSY){ continue; }
 15193                           
 15194                           ;incstack = 0
 15195  00A9A8  0102               	movlb	2	; () banked
 15196  00A9AA  EE20 F008          	lfsr	2,8
 15197  00A9AE  5194               	movf	_UART& (0+255),w,b
 15198  00A9B0  26D9               	addwf	fsr2l,f,c
 15199  00A9B2  5195               	movf	(_UART+1)& (0+255),w,b
 15200  00A9B4  22DA               	addwfc	fsr2h,f,c
 15201  00A9B6  50DF               	movf	indf2,w,c
 15202  00A9B8  B4D8               	btfsc	status,2,c
 15203  00A9BA  D7F6               	goto	_uartTransmitBlocking
 15204                           
 15205                           ; BSR set to: 2
 15206                           ;UART_PIC.c: 38: UART -> _stateTX = UART_STATE_BUSY;
 15207                           
 15208                           ; BSR set to: 2
 15209  00A9BC  EE20 F008          	lfsr	2,8
 15210  00A9C0  5194               	movf	_UART& (0+255),w,b
 15211  00A9C2  26D9               	addwf	fsr2l,f,c
 15212  00A9C4  5195               	movf	(_UART+1)& (0+255),w,b
 15213  00A9C6  22DA               	addwfc	fsr2h,f,c
 15214  00A9C8  0E00               	movlw	0
 15215  00A9CA  6EDF               	movwf	indf2,c
 15216                           
 15217                           ; BSR set to: 2
 15218                           ;UART_PIC.c: 41: unsigned char numTransmits = 0;
 15219  00A9CC  0E00               	movlw	0
 15220  00A9CE  6E05               	movwf	uartTransmitBlocking@numTransmits,c
 15221                           
 15222                           ; BSR set to: 2
 15223                           ;UART_PIC.c: 44: TXSTAbits.TXEN = 1; _delay((unsigned long)((5)*(40000000/4000.0)));;
 15224  00A9D0  8AAC               	bsf	4012,5,c	;volatile
 15225                           
 15226                           ; BSR set to: 2
 15227  00A9D2  0E41               	movlw	65
 15228  00A9D4  6E04               	movwf	??_uartTransmitBlocking& (0+255),c
 15229  00A9D6  0EEE               	movlw	238
 15230  00A9D8                     u10297:
 15231  00A9D8  2EE8               	decfsz	wreg,f,c
 15232  00A9DA  D7FE               	bra	u10297
 15233  00A9DC  2E04               	decfsz	??_uartTransmitBlocking& (0+255),f,c
 15234  00A9DE  D7FC               	bra	u10297
 15235  00A9E0  D000               	nop2	
 15236                           
 15237                           ;UART_PIC.c: 47: while(numTransmits < numBytes){
 15238  00A9E2  D024               	goto	l1312
 15239  00A9E4                     l5386:
 15240  00A9E4  B2AC               	btfsc	4012,1,c	;volatile
 15241  00A9E6  D002               	goto	u4380
 15242  00A9E8  0E01               	movlw	1
 15243  00A9EA  D001               	goto	u4382
 15244  00A9EC                     u4380:
 15245  00A9EC  0E00               	movlw	0
 15246  00A9EE                     u4382:
 15247  00A9EE  6E04               	movwf	??_uartTransmitBlocking& (0+255),c
 15248  00A9F0  B89E               	btfsc	3998,4,c	;volatile
 15249  00A9F2  D002               	goto	u4390
 15250  00A9F4  0E01               	movlw	1
 15251  00A9F6  D001               	goto	u4392
 15252  00A9F8                     u4390:
 15253  00A9F8  0E00               	movlw	0
 15254  00A9FA                     u4392:
 15255  00A9FA  1004               	iorwf	??_uartTransmitBlocking,w,c
 15256  00A9FC  E1F3               	bnz	l5386
 15257                           
 15258                           ;UART_PIC.c: 52: __nop();
 15259  00A9FE  F000               	nop	
 15260                           
 15261                           ;UART_PIC.c: 55: UARTinterruptState = INTCONbits.GIE;
 15262  00AA00  0E00               	movlw	0
 15263  00AA02  BEF2               	btfsc	intcon,7,c	;volatile
 15264  00AA04  0E01               	movlw	1
 15265  00AA06  0102               	movlb	2	; () banked
 15266  00AA08  6FD7               	movwf	_UARTinterruptState& (0+255),b	;volatile
 15267                           
 15268                           ; BSR set to: 2
 15269                           ;UART_PIC.c: 56: (INTCONbits.GIE = 0);
 15270  00AA0A  9EF2               	bcf	intcon,7,c	;volatile
 15271                           
 15272                           ; BSR set to: 2
 15273                           ;UART_PIC.c: 57: TXREG = data[numTransmits];
 15274  00AA0C  5005               	movf	uartTransmitBlocking@numTransmits,w,c
 15275  00AA0E  0D01               	mullw	1
 15276  00AA10  50F3               	movf	prodl,w,c
 15277  00AA12  2401               	addwf	uartTransmitBlocking@data,w,c
 15278  00AA14  6ED9               	movwf	fsr2l,c
 15279  00AA16  50F4               	movf	prodh,w,c
 15280  00AA18  2002               	addwfc	uartTransmitBlocking@data+1,w,c
 15281  00AA1A  6EDA               	movwf	fsr2h,c
 15282  00AA1C  50DF               	movf	indf2,w,c
 15283  00AA1E  6EAD               	movwf	4013,c	;volatile
 15284                           
 15285                           ; BSR set to: 2
 15286                           ;UART_PIC.c: 58: INTCONbits.GIE = UARTinterruptState;
 15287  00AA20  B1D7               	btfsc	_UARTinterruptState& (0+255),0,b	;volatile
 15288  00AA22  D002               	bra	u4405
 15289  00AA24  9EF2               	bcf	intcon,7,c	;volatile
 15290  00AA26  D001               	bra	u4406
 15291  00AA28                     u4405:
 15292  00AA28  8EF2               	bsf	intcon,7,c	;volatile
 15293  00AA2A                     u4406:
 15294                           
 15295                           ;UART_PIC.c: 60: numTransmits++;
 15296  00AA2A  2A05               	incf	uartTransmitBlocking@numTransmits,f,c
 15297  00AA2C                     l1312:
 15298  00AA2C  5003               	movf	uartTransmitBlocking@numBytes,w,c
 15299  00AA2E  5C05               	subwf	uartTransmitBlocking@numTransmits,w,c
 15300  00AA30  A0D8               	btfss	status,0,c
 15301  00AA32  D7D8               	goto	l1313
 15302                           
 15303                           ;UART_PIC.c: 64: }
 15304                           ;UART_PIC.c: 67: UART -> _stateTX = UART_STATE_READY;
 15305  00AA34  0102               	movlb	2	; () banked
 15306  00AA36  EE20 F008          	lfsr	2,8
 15307  00AA3A  5194               	movf	_UART& (0+255),w,b
 15308  00AA3C  26D9               	addwf	fsr2l,f,c
 15309  00AA3E  5195               	movf	(_UART+1)& (0+255),w,b
 15310  00AA40  22DA               	addwfc	fsr2h,f,c
 15311  00AA42  0E01               	movlw	1
 15312  00AA44  6EDF               	movwf	indf2,c
 15313                           
 15314                           ; BSR set to: 2
 15315  00AA46  0012               	return		;funcret
 15316  00AA48                     __end_of_uartTransmitBlocking:
 15317                           	opt stack 0
 15318                           tblptru	equ	0xFF8
 15319                           tblptrh	equ	0xFF7
 15320                           tblptrl	equ	0xFF6
 15321                           tablat	equ	0xFF5
 15322                           prodh	equ	0xFF4
 15323                           prodl	equ	0xFF3
 15324                           intcon	equ	0xFF2
 15325                           postinc0	equ	0xFEE
 15326                           wreg	equ	0xFE8
 15327                           postinc1	equ	0xFE6
 15328                           postdec1	equ	0xFE5
 15329                           plusw1	equ	0xFE3
 15330                           fsr1h	equ	0xFE2
 15331                           fsr1l	equ	0xFE1
 15332                           indf2	equ	0xFDF
 15333                           postinc2	equ	0xFDE
 15334                           postdec2	equ	0xFDD
 15335                           plusw2	equ	0xFDB
 15336                           fsr2h	equ	0xFDA
 15337                           fsr2l	equ	0xFD9
 15338                           status	equ	0xFD8
 15339                           
 15340 ;; *************** function _operation_summary *****************
 15341 ;; Defined at:
 15342 ;;		line 59 in file "add_functions.c"
 15343 ;; Parameters:    Size  Location     Type
 15344 ;;		None
 15345 ;; Auto vars:     Size  Location     Type
 15346 ;;  keys           17   45[COMRAM] const unsigned char [17]
 15347 ;;  EEPROM_print   16   62[COMRAM] unsigned char [16]
 15348 ;;  EEPROM_ind      2   84[COMRAM] short 
 15349 ;;  i               2   82[COMRAM] short 
 15350 ;;  past_run_cou    2   80[COMRAM] short 
 15351 ;;  keypress        1   79[COMRAM] unsigned char 
 15352 ;;  temp            1   78[COMRAM] unsigned char 
 15353 ;; Return value:  Size  Location     Type
 15354 ;;                  1    wreg      void 
 15355 ;; Registers used:
 15356 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15357 ;; Tracked objects:
 15358 ;;		On entry : 0/0
 15359 ;;		On exit  : 0/0
 15360 ;;		Unchanged: 0/0
 15361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15362 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15363 ;;      Locals:        41       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15364 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15365 ;;      Totals:        44       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15366 ;;Total ram usage:       44 bytes
 15367 ;; Hardware stack levels used:    1
 15368 ;; Hardware stack levels required when called:    3
 15369 ;; This function calls:
 15370 ;;		_lcdInst
 15371 ;;		_printf
 15372 ;;		_read_EEPROM
 15373 ;; This function is called by:
 15374 ;;		_main
 15375 ;; This function uses a non-reentrant model
 15376 ;;
 15377                           
 15378                           	psect	text19
 15379  00C6E6                     __ptext19:
 15380                           	opt stack 0
 15381  00C6E6                     _operation_summary:
 15382                           	opt stack 27
 15383                           
 15384                           ;add_functions.c: 60: lcdInst(0x01);_delay((unsigned long)((15)*(40000000/4000.0)));;
 15385                           
 15386                           ; BSR set to: 2
 15387                           ;incstack = 0
 15388  00C6E6  0E01               	movlw	1
 15389  00C6E8  EC3E  F051         	call	_lcdInst
 15390  00C6EC  0EC3               	movlw	195
 15391  00C6EE  6E2B               	movwf	??_operation_summary& (0+255),c
 15392  00C6F0  0ECD               	movlw	205
 15393  00C6F2                     u10307:
 15394  00C6F2  2EE8               	decfsz	wreg,f,c
 15395  00C6F4  D7FE               	bra	u10307
 15396  00C6F6  2E2B               	decfsz	??_operation_summary& (0+255),f,c
 15397  00C6F8  D7FC               	bra	u10307
 15398  00C6FA  F000               	nop	
 15399                           
 15400                           ;add_functions.c: 61: lcdInst(0x80);_delay((unsigned long)((5)*(40000000/4000.0)));;
 15401  00C6FC  0E80               	movlw	128
 15402  00C6FE  EC3E  F051         	call	_lcdInst
 15403  00C702  0E41               	movlw	65
 15404  00C704  6E2B               	movwf	??_operation_summary& (0+255),c
 15405  00C706  0EEE               	movlw	238
 15406  00C708                     u10317:
 15407  00C708  2EE8               	decfsz	wreg,f,c
 15408  00C70A  D7FE               	bra	u10317
 15409  00C70C  2E2B               	decfsz	??_operation_summary& (0+255),f,c
 15410  00C70E  D7FC               	bra	u10317
 15411  00C710  D000               	nop2	
 15412                           
 15413                           ;add_functions.c: 62: printf("Press * to");
 15414  00C712  0E50               	movlw	low STR_62
 15415  00C714  6E0D               	movwf	printf@f,c
 15416  00C716  0EFF               	movlw	high STR_62
 15417  00C718  6E0E               	movwf	printf@f+1,c
 15418  00C71A  EC66  F061         	call	_printf	;wreg free
 15419                           
 15420                           ;add_functions.c: 63: lcdInst(0xC0);;
 15421  00C71E  0EC0               	movlw	192
 15422  00C720  EC3E  F051         	call	_lcdInst
 15423                           
 15424                           ;add_functions.c: 64: printf("view run data");
 15425  00C724  0EA5               	movlw	low STR_63
 15426  00C726  6E0D               	movwf	printf@f,c
 15427  00C728  0EFE               	movlw	high STR_63
 15428  00C72A  6E0E               	movwf	printf@f+1,c
 15429  00C72C  EC66  F061         	call	_printf	;wreg free
 15430                           
 15431                           ;add_functions.c: 66: const char keys[] = "123A456B789C*0#D";
 15432  00C730  0E81               	movlw	low operation_summary@F3196
 15433  00C732  6EF6               	movwf	tblptrl,c
 15434  00C734                     	if	1	;There is more than 1 active tblptr byte
 15435  00C734  0EFB               	movlw	high operation_summary@F3196
 15436  00C736  6EF7               	movwf	tblptrh,c
 15437  00C738                     	endif
 15438  00C738                     	if	1	;There are 3 active tblptr bytes
 15439  00C738  0E00               	movlw	low (operation_summary@F3196 shr (0+16))
 15440  00C73A  6EF8               	movwf	tblptru,c
 15441  00C73C                     	endif
 15442  00C73C  EE20  F02E         	lfsr	2,operation_summary@keys
 15443  00C740  0E10               	movlw	16
 15444  00C742                     u6320:
 15445  00C742  0009               	tblrd		*+
 15446  00C744  CFF5 FFDE          	movff	tablat,postinc2
 15447  00C748  06E8               	decf	wreg,f,c
 15448  00C74A  E2FB               	bc	u6320
 15449                           
 15450                           ;add_functions.c: 67: unsigned char temp, keypress;
 15451                           ;add_functions.c: 68: short int EEPROM_ind = 0;
 15452  00C74C  0E00               	movlw	0
 15453  00C74E  6E56               	movwf	operation_summary@EEPROM_ind+1,c
 15454  00C750  0E00               	movlw	0
 15455  00C752  6E55               	movwf	operation_summary@EEPROM_ind,c
 15456                           
 15457                           ;add_functions.c: 69: short int past_run_count = 0;
 15458  00C754  0E00               	movlw	0
 15459  00C756  6E52               	movwf	operation_summary@past_run_count+1,c
 15460  00C758  0E00               	movlw	0
 15461  00C75A  6E51               	movwf	operation_summary@past_run_count,c
 15462                           
 15463                           ;add_functions.c: 70: short int i = 0;
 15464  00C75C  0E00               	movlw	0
 15465  00C75E  6E54               	movwf	operation_summary@i+1,c
 15466  00C760  0E00               	movlw	0
 15467  00C762  6E53               	movwf	operation_summary@i,c
 15468                           
 15469                           ;add_functions.c: 71: unsigned char EEPROM_print[16] = {0};
 15470  00C764  EE23  F0A0         	lfsr	2,operation_summary@F3203
 15471  00C768  EE10  F03F         	lfsr	1,operation_summary@EEPROM_print
 15472  00C76C  0E0F               	movlw	15
 15473  00C76E                     u6331:
 15474  00C76E  CFDB FFE3          	movff	plusw2,plusw1
 15475  00C772  06E8               	decf	wreg,f,c
 15476  00C774  E2FC               	bc	u6331
 15477                           
 15478                           ;add_functions.c: 73: while(past_run_count < 12){
 15479  00C776  D298               	goto	l1136
 15480  00C778                     
 15481                           ;add_functions.c: 74: EEPROM_ind = 0;
 15482  00C778  0E00               	movlw	0
 15483  00C77A  6E56               	movwf	operation_summary@EEPROM_ind+1,c
 15484  00C77C  0E00               	movlw	0
 15485  00C77E  6E55               	movwf	operation_summary@EEPROM_ind,c
 15486  00C780  A281               	btfss	3969,1,c	;volatile
 15487  00C782  D7FE               	goto	l1131
 15488                           
 15489                           ;add_functions.c: 77: keypress = (PORTB & 0xF0) >> 4;
 15490  00C784  3881               	swapf	3969,w,c	;volatile
 15491  00C786  0B0F               	andlw	15
 15492  00C788  0B0F               	andlw	15
 15493  00C78A  6E50               	movwf	operation_summary@keypress,c
 15494  00C78C  B281               	btfsc	3969,1,c	;volatile
 15495  00C78E  D7FE               	goto	l1134
 15496                           
 15497                           ;add_functions.c: 79: __nop();
 15498  00C790  F000               	nop	
 15499                           
 15500                           ;add_functions.c: 80: temp = keys[keypress];
 15501  00C792  5050               	movf	operation_summary@keypress,w,c
 15502  00C794  0D01               	mullw	1
 15503  00C796  0E2E               	movlw	low operation_summary@keys
 15504  00C798  24F3               	addwf	prodl,w,c
 15505  00C79A  6ED9               	movwf	fsr2l,c
 15506  00C79C  0E00               	movlw	high operation_summary@keys
 15507  00C79E  20F4               	addwfc	prodh,w,c
 15508  00C7A0  6EDA               	movwf	fsr2h,c
 15509  00C7A2  50DF               	movf	indf2,w,c
 15510  00C7A4  6E4F               	movwf	operation_summary@temp,c
 15511                           
 15512                           ;add_functions.c: 82: if (temp == '*'){
 15513  00C7A6  0E2A               	movlw	42
 15514  00C7A8  184F               	xorwf	operation_summary@temp,w,c
 15515  00C7AA  A4D8               	btfss	status,2,c
 15516  00C7AC  D27D               	goto	l1136
 15517                           
 15518                           ;add_functions.c: 83: lcdInst(0x01);_delay((unsigned long)((15)*(40000000/4000.0)));;
 15519  00C7AE  0E01               	movlw	1
 15520  00C7B0  EC3E  F051         	call	_lcdInst
 15521  00C7B4  0EC3               	movlw	195
 15522  00C7B6  6E2B               	movwf	??_operation_summary& (0+255),c
 15523  00C7B8  0ECD               	movlw	205
 15524  00C7BA                     u10327:
 15525  00C7BA  2EE8               	decfsz	wreg,f,c
 15526  00C7BC  D7FE               	bra	u10327
 15527  00C7BE  2E2B               	decfsz	??_operation_summary& (0+255),f,c
 15528  00C7C0  D7FC               	bra	u10327
 15529  00C7C2  F000               	nop	
 15530                           
 15531                           ;add_functions.c: 84: lcdInst(0x80);_delay((unsigned long)((5)*(40000000/4000.0)));;
 15532  00C7C4  0E80               	movlw	128
 15533  00C7C6  EC3E  F051         	call	_lcdInst
 15534  00C7CA  0E41               	movlw	65
 15535  00C7CC  6E2B               	movwf	??_operation_summary& (0+255),c
 15536  00C7CE  0EEE               	movlw	238
 15537  00C7D0                     u10337:
 15538  00C7D0  2EE8               	decfsz	wreg,f,c
 15539  00C7D2  D7FE               	bra	u10337
 15540  00C7D4  2E2B               	decfsz	??_operation_summary& (0+255),f,c
 15541  00C7D6  D7FC               	bra	u10337
 15542  00C7D8  D000               	nop2	
 15543                           
 15544                           ;add_functions.c: 86: if (past_run_count == 0){
 15545  00C7DA  5051               	movf	operation_summary@past_run_count,w,c
 15546  00C7DC  1052               	iorwf	operation_summary@past_run_count+1,w,c
 15547  00C7DE  A4D8               	btfss	status,2,c
 15548  00C7E0  D02E               	goto	l1137
 15549                           
 15550                           ;add_functions.c: 87: printf("Drawer: %d", read_EEPROM(EEPROM_ind));
 15551  00C7E2  0E45               	movlw	low STR_64
 15552  00C7E4  6E0D               	movwf	printf@f,c
 15553  00C7E6  0EFF               	movlw	high STR_64
 15554  00C7E8  6E0E               	movwf	printf@f+1,c
 15555  00C7EA  5055               	movf	operation_summary@EEPROM_ind,w,c
 15556  00C7EC  EC52  F051         	call	_read_EEPROM
 15557  00C7F0  6E2B               	movwf	??_operation_summary& (0+255),c
 15558  00C7F2  502B               	movf	??_operation_summary,w,c
 15559  00C7F4  6E0F               	movwf	?_printf+2,c
 15560  00C7F6  6A10               	clrf	?_printf+3,c
 15561  00C7F8  EC66  F061         	call	_printf	;wreg free
 15562                           
 15563                           ;add_functions.c: 88: lcdInst(0xC0);;
 15564  00C7FC  0EC0               	movlw	192
 15565  00C7FE  EC3E  F051         	call	_lcdInst
 15566                           
 15567                           ;add_functions.c: 89: printf("R:%d  F:%d  L:%d", read_EEPROM(EEPROM_ind+1), read_EEPROM(
      +                          EEPROM_ind+2), read_EEPROM(EEPROM_ind+3));
 15568  00C802  0EAC               	movlw	low STR_65
 15569  00C804  6E0D               	movwf	printf@f,c
 15570  00C806  0EFD               	movlw	high STR_65
 15571  00C808  6E0E               	movwf	printf@f+1,c
 15572  00C80A  2855               	incf	operation_summary@EEPROM_ind,w,c
 15573  00C80C  EC52  F051         	call	_read_EEPROM
 15574  00C810  6E2B               	movwf	??_operation_summary& (0+255),c
 15575  00C812  502B               	movf	??_operation_summary,w,c
 15576  00C814  6E0F               	movwf	?_printf+2,c
 15577  00C816  6A10               	clrf	?_printf+3,c
 15578  00C818  5055               	movf	operation_summary@EEPROM_ind,w,c
 15579  00C81A  0F02               	addlw	2
 15580  00C81C  EC52  F051         	call	_read_EEPROM
 15581  00C820  6E2C               	movwf	(??_operation_summary+1)& (0+255),c
 15582  00C822  502C               	movf	??_operation_summary+1,w,c
 15583  00C824  6E11               	movwf	?_printf+4,c
 15584  00C826  6A12               	clrf	?_printf+5,c
 15585  00C828  5055               	movf	operation_summary@EEPROM_ind,w,c
 15586  00C82A  0F03               	addlw	3
 15587  00C82C  EC52  F051         	call	_read_EEPROM
 15588  00C830  6E2D               	movwf	(??_operation_summary+2)& (0+255),c
 15589  00C832  502D               	movf	??_operation_summary+2,w,c
 15590  00C834  6E13               	movwf	?_printf+6,c
 15591  00C836  6A14               	clrf	?_printf+7,c
 15592  00C838  EC66  F061         	call	_printf	;wreg free
 15593                           
 15594                           ;add_functions.c: 90: }
 15595  00C83C  D233               	goto	l1161
 15596  00C83E                     l1137:
 15597                           
 15598                           ;add_functions.c: 92: else if (past_run_count == 1){
 15599  00C83E  0451               	decf	operation_summary@past_run_count,w,c
 15600  00C840  1052               	iorwf	operation_summary@past_run_count+1,w,c
 15601  00C842  A4D8               	btfss	status,2,c
 15602  00C844  D032               	goto	l1139
 15603                           
 15604                           ;add_functions.c: 93: EEPROM_ind += 4;
 15605  00C846  0E04               	movlw	4
 15606  00C848  2655               	addwf	operation_summary@EEPROM_ind,f,c
 15607  00C84A  0E00               	movlw	0
 15608  00C84C  2256               	addwfc	operation_summary@EEPROM_ind+1,f,c
 15609                           
 15610                           ;add_functions.c: 94: printf("Drawer: %d", read_EEPROM(EEPROM_ind));
 15611  00C84E  0E45               	movlw	low STR_64
 15612  00C850  6E0D               	movwf	printf@f,c
 15613  00C852  0EFF               	movlw	high STR_64
 15614  00C854  6E0E               	movwf	printf@f+1,c
 15615  00C856  5055               	movf	operation_summary@EEPROM_ind,w,c
 15616  00C858  EC52  F051         	call	_read_EEPROM
 15617  00C85C  6E2B               	movwf	??_operation_summary& (0+255),c
 15618  00C85E  502B               	movf	??_operation_summary,w,c
 15619  00C860  6E0F               	movwf	?_printf+2,c
 15620  00C862  6A10               	clrf	?_printf+3,c
 15621  00C864  EC66  F061         	call	_printf	;wreg free
 15622                           
 15623                           ;add_functions.c: 95: lcdInst(0xC0);;
 15624  00C868  0EC0               	movlw	192
 15625  00C86A  EC3E  F051         	call	_lcdInst
 15626                           
 15627                           ;add_functions.c: 96: printf("R:%d  F:%d  L:%d", read_EEPROM(EEPROM_ind+1), read_EEPROM(
      +                          EEPROM_ind+2), read_EEPROM(EEPROM_ind+3));
 15628  00C86E  0EAC               	movlw	low STR_65
 15629  00C870  6E0D               	movwf	printf@f,c
 15630  00C872  0EFD               	movlw	high STR_65
 15631  00C874  6E0E               	movwf	printf@f+1,c
 15632  00C876  2855               	incf	operation_summary@EEPROM_ind,w,c
 15633  00C878  EC52  F051         	call	_read_EEPROM
 15634  00C87C  6E2B               	movwf	??_operation_summary& (0+255),c
 15635  00C87E  502B               	movf	??_operation_summary,w,c
 15636  00C880  6E0F               	movwf	?_printf+2,c
 15637  00C882  6A10               	clrf	?_printf+3,c
 15638  00C884  5055               	movf	operation_summary@EEPROM_ind,w,c
 15639  00C886  0F02               	addlw	2
 15640  00C888  EC52  F051         	call	_read_EEPROM
 15641  00C88C  6E2C               	movwf	(??_operation_summary+1)& (0+255),c
 15642  00C88E  502C               	movf	??_operation_summary+1,w,c
 15643  00C890  6E11               	movwf	?_printf+4,c
 15644  00C892  6A12               	clrf	?_printf+5,c
 15645  00C894  5055               	movf	operation_summary@EEPROM_ind,w,c
 15646  00C896  0F03               	addlw	3
 15647  00C898  EC52  F051         	call	_read_EEPROM
 15648  00C89C  6E2D               	movwf	(??_operation_summary+2)& (0+255),c
 15649  00C89E  502D               	movf	??_operation_summary+2,w,c
 15650  00C8A0  6E13               	movwf	?_printf+6,c
 15651  00C8A2  6A14               	clrf	?_printf+7,c
 15652  00C8A4  EC66  F061         	call	_printf	;wreg free
 15653                           
 15654                           ;add_functions.c: 97: }
 15655  00C8A8  D1FD               	goto	l1161
 15656  00C8AA                     l1139:
 15657                           
 15658                           ;add_functions.c: 99: else if (past_run_count == 2){
 15659  00C8AA  0E02               	movlw	2
 15660  00C8AC  1851               	xorwf	operation_summary@past_run_count,w,c
 15661  00C8AE  1052               	iorwf	operation_summary@past_run_count+1,w,c
 15662  00C8B0  A4D8               	btfss	status,2,c
 15663  00C8B2  D032               	goto	l1141
 15664                           
 15665                           ;add_functions.c: 100: EEPROM_ind += 8;
 15666  00C8B4  0E08               	movlw	8
 15667  00C8B6  2655               	addwf	operation_summary@EEPROM_ind,f,c
 15668  00C8B8  0E00               	movlw	0
 15669  00C8BA  2256               	addwfc	operation_summary@EEPROM_ind+1,f,c
 15670                           
 15671                           ;add_functions.c: 101: printf("Drawer: %d", read_EEPROM(EEPROM_ind));
 15672  00C8BC  0E45               	movlw	low STR_64
 15673  00C8BE  6E0D               	movwf	printf@f,c
 15674  00C8C0  0EFF               	movlw	high STR_64
 15675  00C8C2  6E0E               	movwf	printf@f+1,c
 15676  00C8C4  5055               	movf	operation_summary@EEPROM_ind,w,c
 15677  00C8C6  EC52  F051         	call	_read_EEPROM
 15678  00C8CA  6E2B               	movwf	??_operation_summary& (0+255),c
 15679  00C8CC  502B               	movf	??_operation_summary,w,c
 15680  00C8CE  6E0F               	movwf	?_printf+2,c
 15681  00C8D0  6A10               	clrf	?_printf+3,c
 15682  00C8D2  EC66  F061         	call	_printf	;wreg free
 15683                           
 15684                           ;add_functions.c: 102: lcdInst(0xC0);;
 15685  00C8D6  0EC0               	movlw	192
 15686  00C8D8  EC3E  F051         	call	_lcdInst
 15687                           
 15688                           ;add_functions.c: 103: printf("R:%d  F:%d  L:%d", read_EEPROM(EEPROM_ind+1), read_EEPROM
      +                          (EEPROM_ind+2), read_EEPROM(EEPROM_ind+3));
 15689  00C8DC  0EAC               	movlw	low STR_65
 15690  00C8DE  6E0D               	movwf	printf@f,c
 15691  00C8E0  0EFD               	movlw	high STR_65
 15692  00C8E2  6E0E               	movwf	printf@f+1,c
 15693  00C8E4  2855               	incf	operation_summary@EEPROM_ind,w,c
 15694  00C8E6  EC52  F051         	call	_read_EEPROM
 15695  00C8EA  6E2B               	movwf	??_operation_summary& (0+255),c
 15696  00C8EC  502B               	movf	??_operation_summary,w,c
 15697  00C8EE  6E0F               	movwf	?_printf+2,c
 15698  00C8F0  6A10               	clrf	?_printf+3,c
 15699  00C8F2  5055               	movf	operation_summary@EEPROM_ind,w,c
 15700  00C8F4  0F02               	addlw	2
 15701  00C8F6  EC52  F051         	call	_read_EEPROM
 15702  00C8FA  6E2C               	movwf	(??_operation_summary+1)& (0+255),c
 15703  00C8FC  502C               	movf	??_operation_summary+1,w,c
 15704  00C8FE  6E11               	movwf	?_printf+4,c
 15705  00C900  6A12               	clrf	?_printf+5,c
 15706  00C902  5055               	movf	operation_summary@EEPROM_ind,w,c
 15707  00C904  0F03               	addlw	3
 15708  00C906  EC52  F051         	call	_read_EEPROM
 15709  00C90A  6E2D               	movwf	(??_operation_summary+2)& (0+255),c
 15710  00C90C  502D               	movf	??_operation_summary+2,w,c
 15711  00C90E  6E13               	movwf	?_printf+6,c
 15712  00C910  6A14               	clrf	?_printf+7,c
 15713  00C912  EC66  F061         	call	_printf	;wreg free
 15714                           
 15715                           ;add_functions.c: 104: }
 15716  00C916  D1C6               	goto	l1161
 15717  00C918                     l1141:
 15718                           
 15719                           ;add_functions.c: 106: else if (past_run_count == 3){
 15720  00C918  0E03               	movlw	3
 15721  00C91A  1851               	xorwf	operation_summary@past_run_count,w,c
 15722  00C91C  1052               	iorwf	operation_summary@past_run_count+1,w,c
 15723  00C91E  A4D8               	btfss	status,2,c
 15724  00C920  D032               	goto	l1143
 15725                           
 15726                           ;add_functions.c: 107: EEPROM_ind += 12;
 15727  00C922  0E0C               	movlw	12
 15728  00C924  2655               	addwf	operation_summary@EEPROM_ind,f,c
 15729  00C926  0E00               	movlw	0
 15730  00C928  2256               	addwfc	operation_summary@EEPROM_ind+1,f,c
 15731                           
 15732                           ;add_functions.c: 108: printf("Drawer: %d", read_EEPROM(EEPROM_ind));
 15733  00C92A  0E45               	movlw	low STR_64
 15734  00C92C  6E0D               	movwf	printf@f,c
 15735  00C92E  0EFF               	movlw	high STR_64
 15736  00C930  6E0E               	movwf	printf@f+1,c
 15737  00C932  5055               	movf	operation_summary@EEPROM_ind,w,c
 15738  00C934  EC52  F051         	call	_read_EEPROM
 15739  00C938  6E2B               	movwf	??_operation_summary& (0+255),c
 15740  00C93A  502B               	movf	??_operation_summary,w,c
 15741  00C93C  6E0F               	movwf	?_printf+2,c
 15742  00C93E  6A10               	clrf	?_printf+3,c
 15743  00C940  EC66  F061         	call	_printf	;wreg free
 15744                           
 15745                           ;add_functions.c: 109: lcdInst(0xC0);;
 15746  00C944  0EC0               	movlw	192
 15747  00C946  EC3E  F051         	call	_lcdInst
 15748                           
 15749                           ;add_functions.c: 110: printf("R:%d  F:%d  L:%d", read_EEPROM(EEPROM_ind+1), read_EEPROM
      +                          (EEPROM_ind+2), read_EEPROM(EEPROM_ind+3));
 15750  00C94A  0EAC               	movlw	low STR_65
 15751  00C94C  6E0D               	movwf	printf@f,c
 15752  00C94E  0EFD               	movlw	high STR_65
 15753  00C950  6E0E               	movwf	printf@f+1,c
 15754  00C952  2855               	incf	operation_summary@EEPROM_ind,w,c
 15755  00C954  EC52  F051         	call	_read_EEPROM
 15756  00C958  6E2B               	movwf	??_operation_summary& (0+255),c
 15757  00C95A  502B               	movf	??_operation_summary,w,c
 15758  00C95C  6E0F               	movwf	?_printf+2,c
 15759  00C95E  6A10               	clrf	?_printf+3,c
 15760  00C960  5055               	movf	operation_summary@EEPROM_ind,w,c
 15761  00C962  0F02               	addlw	2
 15762  00C964  EC52  F051         	call	_read_EEPROM
 15763  00C968  6E2C               	movwf	(??_operation_summary+1)& (0+255),c
 15764  00C96A  502C               	movf	??_operation_summary+1,w,c
 15765  00C96C  6E11               	movwf	?_printf+4,c
 15766  00C96E  6A12               	clrf	?_printf+5,c
 15767  00C970  5055               	movf	operation_summary@EEPROM_ind,w,c
 15768  00C972  0F03               	addlw	3
 15769  00C974  EC52  F051         	call	_read_EEPROM
 15770  00C978  6E2D               	movwf	(??_operation_summary+2)& (0+255),c
 15771  00C97A  502D               	movf	??_operation_summary+2,w,c
 15772  00C97C  6E13               	movwf	?_printf+6,c
 15773  00C97E  6A14               	clrf	?_printf+7,c
 15774  00C980  EC66  F061         	call	_printf	;wreg free
 15775                           
 15776                           ;add_functions.c: 111: }
 15777  00C984  D18F               	goto	l1161
 15778  00C986                     l1143:
 15779                           
 15780                           ;add_functions.c: 113: else if (past_run_count == 4){
 15781  00C986  0E04               	movlw	4
 15782  00C988  1851               	xorwf	operation_summary@past_run_count,w,c
 15783  00C98A  1052               	iorwf	operation_summary@past_run_count+1,w,c
 15784  00C98C  A4D8               	btfss	status,2,c
 15785  00C98E  D032               	goto	l1145
 15786                           
 15787                           ;add_functions.c: 114: EEPROM_ind += 16;
 15788  00C990  0E10               	movlw	16
 15789  00C992  2655               	addwf	operation_summary@EEPROM_ind,f,c
 15790  00C994  0E00               	movlw	0
 15791  00C996  2256               	addwfc	operation_summary@EEPROM_ind+1,f,c
 15792                           
 15793                           ;add_functions.c: 115: printf("Drawer: %d", read_EEPROM(EEPROM_ind));
 15794  00C998  0E45               	movlw	low STR_64
 15795  00C99A  6E0D               	movwf	printf@f,c
 15796  00C99C  0EFF               	movlw	high STR_64
 15797  00C99E  6E0E               	movwf	printf@f+1,c
 15798  00C9A0  5055               	movf	operation_summary@EEPROM_ind,w,c
 15799  00C9A2  EC52  F051         	call	_read_EEPROM
 15800  00C9A6  6E2B               	movwf	??_operation_summary& (0+255),c
 15801  00C9A8  502B               	movf	??_operation_summary,w,c
 15802  00C9AA  6E0F               	movwf	?_printf+2,c
 15803  00C9AC  6A10               	clrf	?_printf+3,c
 15804  00C9AE  EC66  F061         	call	_printf	;wreg free
 15805                           
 15806                           ;add_functions.c: 116: lcdInst(0xC0);;
 15807  00C9B2  0EC0               	movlw	192
 15808  00C9B4  EC3E  F051         	call	_lcdInst
 15809                           
 15810                           ;add_functions.c: 117: printf("R:%d  F:%d  L:%d", read_EEPROM(EEPROM_ind+1), read_EEPROM
      +                          (EEPROM_ind+2), read_EEPROM(EEPROM_ind+3));
 15811  00C9B8  0EAC               	movlw	low STR_65
 15812  00C9BA  6E0D               	movwf	printf@f,c
 15813  00C9BC  0EFD               	movlw	high STR_65
 15814  00C9BE  6E0E               	movwf	printf@f+1,c
 15815  00C9C0  2855               	incf	operation_summary@EEPROM_ind,w,c
 15816  00C9C2  EC52  F051         	call	_read_EEPROM
 15817  00C9C6  6E2B               	movwf	??_operation_summary& (0+255),c
 15818  00C9C8  502B               	movf	??_operation_summary,w,c
 15819  00C9CA  6E0F               	movwf	?_printf+2,c
 15820  00C9CC  6A10               	clrf	?_printf+3,c
 15821  00C9CE  5055               	movf	operation_summary@EEPROM_ind,w,c
 15822  00C9D0  0F02               	addlw	2
 15823  00C9D2  EC52  F051         	call	_read_EEPROM
 15824  00C9D6  6E2C               	movwf	(??_operation_summary+1)& (0+255),c
 15825  00C9D8  502C               	movf	??_operation_summary+1,w,c
 15826  00C9DA  6E11               	movwf	?_printf+4,c
 15827  00C9DC  6A12               	clrf	?_printf+5,c
 15828  00C9DE  5055               	movf	operation_summary@EEPROM_ind,w,c
 15829  00C9E0  0F03               	addlw	3
 15830  00C9E2  EC52  F051         	call	_read_EEPROM
 15831  00C9E6  6E2D               	movwf	(??_operation_summary+2)& (0+255),c
 15832  00C9E8  502D               	movf	??_operation_summary+2,w,c
 15833  00C9EA  6E13               	movwf	?_printf+6,c
 15834  00C9EC  6A14               	clrf	?_printf+7,c
 15835  00C9EE  EC66  F061         	call	_printf	;wreg free
 15836                           
 15837                           ;add_functions.c: 118: }
 15838  00C9F2  D158               	goto	l1161
 15839  00C9F4                     l1145:
 15840                           
 15841                           ;add_functions.c: 120: else if (past_run_count == 5){
 15842  00C9F4  0E05               	movlw	5
 15843  00C9F6  1851               	xorwf	operation_summary@past_run_count,w,c
 15844  00C9F8  1052               	iorwf	operation_summary@past_run_count+1,w,c
 15845  00C9FA  A4D8               	btfss	status,2,c
 15846  00C9FC  D032               	goto	l1147
 15847                           
 15848                           ;add_functions.c: 121: EEPROM_ind += 20;
 15849  00C9FE  0E14               	movlw	20
 15850  00CA00  2655               	addwf	operation_summary@EEPROM_ind,f,c
 15851  00CA02  0E00               	movlw	0
 15852  00CA04  2256               	addwfc	operation_summary@EEPROM_ind+1,f,c
 15853                           
 15854                           ;add_functions.c: 122: printf("Drawer: %d", read_EEPROM(EEPROM_ind));
 15855  00CA06  0E45               	movlw	low STR_64
 15856  00CA08  6E0D               	movwf	printf@f,c
 15857  00CA0A  0EFF               	movlw	high STR_64
 15858  00CA0C  6E0E               	movwf	printf@f+1,c
 15859  00CA0E  5055               	movf	operation_summary@EEPROM_ind,w,c
 15860  00CA10  EC52  F051         	call	_read_EEPROM
 15861  00CA14  6E2B               	movwf	??_operation_summary& (0+255),c
 15862  00CA16  502B               	movf	??_operation_summary,w,c
 15863  00CA18  6E0F               	movwf	?_printf+2,c
 15864  00CA1A  6A10               	clrf	?_printf+3,c
 15865  00CA1C  EC66  F061         	call	_printf	;wreg free
 15866                           
 15867                           ;add_functions.c: 123: lcdInst(0xC0);;
 15868  00CA20  0EC0               	movlw	192
 15869  00CA22  EC3E  F051         	call	_lcdInst
 15870                           
 15871                           ;add_functions.c: 124: printf("R:%d  F:%d  L:%d", read_EEPROM(EEPROM_ind+1), read_EEPROM
      +                          (EEPROM_ind+2), read_EEPROM(EEPROM_ind+3));
 15872  00CA26  0EAC               	movlw	low STR_65
 15873  00CA28  6E0D               	movwf	printf@f,c
 15874  00CA2A  0EFD               	movlw	high STR_65
 15875  00CA2C  6E0E               	movwf	printf@f+1,c
 15876  00CA2E  2855               	incf	operation_summary@EEPROM_ind,w,c
 15877  00CA30  EC52  F051         	call	_read_EEPROM
 15878  00CA34  6E2B               	movwf	??_operation_summary& (0+255),c
 15879  00CA36  502B               	movf	??_operation_summary,w,c
 15880  00CA38  6E0F               	movwf	?_printf+2,c
 15881  00CA3A  6A10               	clrf	?_printf+3,c
 15882  00CA3C  5055               	movf	operation_summary@EEPROM_ind,w,c
 15883  00CA3E  0F02               	addlw	2
 15884  00CA40  EC52  F051         	call	_read_EEPROM
 15885  00CA44  6E2C               	movwf	(??_operation_summary+1)& (0+255),c
 15886  00CA46  502C               	movf	??_operation_summary+1,w,c
 15887  00CA48  6E11               	movwf	?_printf+4,c
 15888  00CA4A  6A12               	clrf	?_printf+5,c
 15889  00CA4C  5055               	movf	operation_summary@EEPROM_ind,w,c
 15890  00CA4E  0F03               	addlw	3
 15891  00CA50  EC52  F051         	call	_read_EEPROM
 15892  00CA54  6E2D               	movwf	(??_operation_summary+2)& (0+255),c
 15893  00CA56  502D               	movf	??_operation_summary+2,w,c
 15894  00CA58  6E13               	movwf	?_printf+6,c
 15895  00CA5A  6A14               	clrf	?_printf+7,c
 15896  00CA5C  EC66  F061         	call	_printf	;wreg free
 15897                           
 15898                           ;add_functions.c: 125: }
 15899  00CA60  D121               	goto	l1161
 15900  00CA62                     l1147:
 15901                           
 15902                           ;add_functions.c: 127: else if (past_run_count == 6){
 15903  00CA62  0E06               	movlw	6
 15904  00CA64  1851               	xorwf	operation_summary@past_run_count,w,c
 15905  00CA66  1052               	iorwf	operation_summary@past_run_count+1,w,c
 15906  00CA68  A4D8               	btfss	status,2,c
 15907  00CA6A  D032               	goto	l1149
 15908                           
 15909                           ;add_functions.c: 128: EEPROM_ind += 24;
 15910  00CA6C  0E18               	movlw	24
 15911  00CA6E  2655               	addwf	operation_summary@EEPROM_ind,f,c
 15912  00CA70  0E00               	movlw	0
 15913  00CA72  2256               	addwfc	operation_summary@EEPROM_ind+1,f,c
 15914                           
 15915                           ;add_functions.c: 129: printf("Drawer: %d", read_EEPROM(EEPROM_ind));
 15916  00CA74  0E45               	movlw	low STR_64
 15917  00CA76  6E0D               	movwf	printf@f,c
 15918  00CA78  0EFF               	movlw	high STR_64
 15919  00CA7A  6E0E               	movwf	printf@f+1,c
 15920  00CA7C  5055               	movf	operation_summary@EEPROM_ind,w,c
 15921  00CA7E  EC52  F051         	call	_read_EEPROM
 15922  00CA82  6E2B               	movwf	??_operation_summary& (0+255),c
 15923  00CA84  502B               	movf	??_operation_summary,w,c
 15924  00CA86  6E0F               	movwf	?_printf+2,c
 15925  00CA88  6A10               	clrf	?_printf+3,c
 15926  00CA8A  EC66  F061         	call	_printf	;wreg free
 15927                           
 15928                           ;add_functions.c: 130: lcdInst(0xC0);;
 15929  00CA8E  0EC0               	movlw	192
 15930  00CA90  EC3E  F051         	call	_lcdInst
 15931                           
 15932                           ;add_functions.c: 131: printf("R:%d  F:%d  L:%d", read_EEPROM(EEPROM_ind+1), read_EEPROM
      +                          (EEPROM_ind+2), read_EEPROM(EEPROM_ind+3));
 15933  00CA94  0EAC               	movlw	low STR_65
 15934  00CA96  6E0D               	movwf	printf@f,c
 15935  00CA98  0EFD               	movlw	high STR_65
 15936  00CA9A  6E0E               	movwf	printf@f+1,c
 15937  00CA9C  2855               	incf	operation_summary@EEPROM_ind,w,c
 15938  00CA9E  EC52  F051         	call	_read_EEPROM
 15939  00CAA2  6E2B               	movwf	??_operation_summary& (0+255),c
 15940  00CAA4  502B               	movf	??_operation_summary,w,c
 15941  00CAA6  6E0F               	movwf	?_printf+2,c
 15942  00CAA8  6A10               	clrf	?_printf+3,c
 15943  00CAAA  5055               	movf	operation_summary@EEPROM_ind,w,c
 15944  00CAAC  0F02               	addlw	2
 15945  00CAAE  EC52  F051         	call	_read_EEPROM
 15946  00CAB2  6E2C               	movwf	(??_operation_summary+1)& (0+255),c
 15947  00CAB4  502C               	movf	??_operation_summary+1,w,c
 15948  00CAB6  6E11               	movwf	?_printf+4,c
 15949  00CAB8  6A12               	clrf	?_printf+5,c
 15950  00CABA  5055               	movf	operation_summary@EEPROM_ind,w,c
 15951  00CABC  0F03               	addlw	3
 15952  00CABE  EC52  F051         	call	_read_EEPROM
 15953  00CAC2  6E2D               	movwf	(??_operation_summary+2)& (0+255),c
 15954  00CAC4  502D               	movf	??_operation_summary+2,w,c
 15955  00CAC6  6E13               	movwf	?_printf+6,c
 15956  00CAC8  6A14               	clrf	?_printf+7,c
 15957  00CACA  EC66  F061         	call	_printf	;wreg free
 15958                           
 15959                           ;add_functions.c: 132: }
 15960  00CACE  D0EA               	goto	l1161
 15961  00CAD0                     l1149:
 15962                           
 15963                           ;add_functions.c: 134: else if (past_run_count == 7){
 15964  00CAD0  0E07               	movlw	7
 15965  00CAD2  1851               	xorwf	operation_summary@past_run_count,w,c
 15966  00CAD4  1052               	iorwf	operation_summary@past_run_count+1,w,c
 15967  00CAD6  A4D8               	btfss	status,2,c
 15968  00CAD8  D032               	goto	l1151
 15969                           
 15970                           ;add_functions.c: 135: EEPROM_ind += 28;
 15971  00CADA  0E1C               	movlw	28
 15972  00CADC  2655               	addwf	operation_summary@EEPROM_ind,f,c
 15973  00CADE  0E00               	movlw	0
 15974  00CAE0  2256               	addwfc	operation_summary@EEPROM_ind+1,f,c
 15975                           
 15976                           ;add_functions.c: 136: printf("Drawer: %d", read_EEPROM(EEPROM_ind));
 15977  00CAE2  0E45               	movlw	low STR_64
 15978  00CAE4  6E0D               	movwf	printf@f,c
 15979  00CAE6  0EFF               	movlw	high STR_64
 15980  00CAE8  6E0E               	movwf	printf@f+1,c
 15981  00CAEA  5055               	movf	operation_summary@EEPROM_ind,w,c
 15982  00CAEC  EC52  F051         	call	_read_EEPROM
 15983  00CAF0  6E2B               	movwf	??_operation_summary& (0+255),c
 15984  00CAF2  502B               	movf	??_operation_summary,w,c
 15985  00CAF4  6E0F               	movwf	?_printf+2,c
 15986  00CAF6  6A10               	clrf	?_printf+3,c
 15987  00CAF8  EC66  F061         	call	_printf	;wreg free
 15988                           
 15989                           ;add_functions.c: 137: lcdInst(0xC0);;
 15990  00CAFC  0EC0               	movlw	192
 15991  00CAFE  EC3E  F051         	call	_lcdInst
 15992                           
 15993                           ;add_functions.c: 138: printf("R:%d  F:%d  L:%d", read_EEPROM(EEPROM_ind+1), read_EEPROM
      +                          (EEPROM_ind+2), read_EEPROM(EEPROM_ind+3));
 15994  00CB02  0EAC               	movlw	low STR_65
 15995  00CB04  6E0D               	movwf	printf@f,c
 15996  00CB06  0EFD               	movlw	high STR_65
 15997  00CB08  6E0E               	movwf	printf@f+1,c
 15998  00CB0A  2855               	incf	operation_summary@EEPROM_ind,w,c
 15999  00CB0C  EC52  F051         	call	_read_EEPROM
 16000  00CB10  6E2B               	movwf	??_operation_summary& (0+255),c
 16001  00CB12  502B               	movf	??_operation_summary,w,c
 16002  00CB14  6E0F               	movwf	?_printf+2,c
 16003  00CB16  6A10               	clrf	?_printf+3,c
 16004  00CB18  5055               	movf	operation_summary@EEPROM_ind,w,c
 16005  00CB1A  0F02               	addlw	2
 16006  00CB1C  EC52  F051         	call	_read_EEPROM
 16007  00CB20  6E2C               	movwf	(??_operation_summary+1)& (0+255),c
 16008  00CB22  502C               	movf	??_operation_summary+1,w,c
 16009  00CB24  6E11               	movwf	?_printf+4,c
 16010  00CB26  6A12               	clrf	?_printf+5,c
 16011  00CB28  5055               	movf	operation_summary@EEPROM_ind,w,c
 16012  00CB2A  0F03               	addlw	3
 16013  00CB2C  EC52  F051         	call	_read_EEPROM
 16014  00CB30  6E2D               	movwf	(??_operation_summary+2)& (0+255),c
 16015  00CB32  502D               	movf	??_operation_summary+2,w,c
 16016  00CB34  6E13               	movwf	?_printf+6,c
 16017  00CB36  6A14               	clrf	?_printf+7,c
 16018  00CB38  EC66  F061         	call	_printf	;wreg free
 16019                           
 16020                           ;add_functions.c: 139: }
 16021  00CB3C  D0B3               	goto	l1161
 16022  00CB3E                     l1151:
 16023                           
 16024                           ;add_functions.c: 141: else if (past_run_count == 8){
 16025  00CB3E  0E08               	movlw	8
 16026  00CB40  1851               	xorwf	operation_summary@past_run_count,w,c
 16027  00CB42  1052               	iorwf	operation_summary@past_run_count+1,w,c
 16028  00CB44  A4D8               	btfss	status,2,c
 16029  00CB46  D03A               	goto	l1153
 16030                           
 16031                           ;add_functions.c: 142: EEPROM_ind += 32;
 16032  00CB48  0E20               	movlw	32
 16033  00CB4A  2655               	addwf	operation_summary@EEPROM_ind,f,c
 16034  00CB4C  0E00               	movlw	0
 16035  00CB4E  2256               	addwfc	operation_summary@EEPROM_ind+1,f,c
 16036                           
 16037                           ;add_functions.c: 143: for(i = 0; i < 4; i++){
 16038  00CB50  0E00               	movlw	0
 16039  00CB52  6E54               	movwf	operation_summary@i+1,c
 16040  00CB54  0E00               	movlw	0
 16041  00CB56  6E53               	movwf	operation_summary@i,c
 16042  00CB58                     l6874:
 16043  00CB58  BE54               	btfsc	operation_summary@i+1,7,c
 16044  00CB5A  D006               	goto	l1154
 16045  00CB5C  5054               	movf	operation_summary@i+1,w,c
 16046  00CB5E  E112               	bnz	l6884
 16047  00CB60  0E04               	movlw	4
 16048  00CB62  5C53               	subwf	operation_summary@i,w,c
 16049  00CB64  B0D8               	btfsc	status,0,c
 16050  00CB66  D00E               	goto	u6470
 16051  00CB68                     l1154:
 16052                           
 16053                           ;add_functions.c: 144: EEPROM_print[i] = read_EEPROM(i + EEPROM_ind);}
 16054  00CB68  0E3F               	movlw	low operation_summary@EEPROM_print
 16055  00CB6A  2453               	addwf	operation_summary@i,w,c
 16056  00CB6C  6ED9               	movwf	fsr2l,c
 16057  00CB6E  0E00               	movlw	high operation_summary@EEPROM_print
 16058  00CB70  2054               	addwfc	operation_summary@i+1,w,c
 16059  00CB72  6EDA               	movwf	fsr2h,c
 16060  00CB74  5053               	movf	operation_summary@i,w,c
 16061  00CB76  2455               	addwf	operation_summary@EEPROM_ind,w,c
 16062  00CB78  EC52  F051         	call	_read_EEPROM
 16063  00CB7C  6EDF               	movwf	indf2,c
 16064  00CB7E  4A53               	infsnz	operation_summary@i,f,c
 16065  00CB80  2A54               	incf	operation_summary@i+1,f,c
 16066  00CB82  D7EA               	goto	l6874
 16067  00CB84                     u6470:
 16068  00CB84                     l6884:
 16069                           
 16070                           ;add_functions.c: 145: printf("Marked Drawers:");
 16071  00CB84  0EDD               	movlw	low STR_80
 16072  00CB86  6E0D               	movwf	printf@f,c
 16073  00CB88  0EFD               	movlw	high STR_80
 16074  00CB8A  6E0E               	movwf	printf@f+1,c
 16075  00CB8C  EC66  F061         	call	_printf	;wreg free
 16076                           
 16077                           ;add_functions.c: 146: lcdInst(0xC0);;
 16078  00CB90  0EC0               	movlw	192
 16079  00CB92  EC3E  F051         	call	_lcdInst
 16080                           
 16081                           ;add_functions.c: 147: printf("D%d, D%d, D%d, D%d", EEPROM_print[0], EEPROM_print[1], EE
      +                          PROM_print[2], EEPROM_print[3]);
 16082  00CB96  0E22               	movlw	low STR_81
 16083  00CB98  6E0D               	movwf	printf@f,c
 16084  00CB9A  0EFD               	movlw	high STR_81
 16085  00CB9C  6E0E               	movwf	printf@f+1,c
 16086  00CB9E  C03F  F00F         	movff	operation_summary@EEPROM_print,?_printf+2
 16087  00CBA2  6A10               	clrf	?_printf+3,c
 16088  00CBA4  C040  F011         	movff	operation_summary@EEPROM_print+1,?_printf+4
 16089  00CBA8  6A12               	clrf	?_printf+5,c
 16090  00CBAA  C041  F013         	movff	operation_summary@EEPROM_print+2,?_printf+6
 16091  00CBAE  6A14               	clrf	?_printf+7,c
 16092  00CBB0  C042  F015         	movff	operation_summary@EEPROM_print+3,?_printf+8
 16093  00CBB4  6A16               	clrf	?_printf+9,c
 16094  00CBB6  EC66  F061         	call	_printf	;wreg free
 16095                           
 16096                           ;add_functions.c: 148: }
 16097  00CBBA  D074               	goto	l1161
 16098  00CBBC                     l1153:
 16099                           
 16100                           ;add_functions.c: 150: else if (past_run_count == 9){
 16101  00CBBC  0E09               	movlw	9
 16102  00CBBE  1851               	xorwf	operation_summary@past_run_count,w,c
 16103  00CBC0  1052               	iorwf	operation_summary@past_run_count+1,w,c
 16104  00CBC2  A4D8               	btfss	status,2,c
 16105  00CBC4  D034               	goto	l1157
 16106                           
 16107                           ;add_functions.c: 151: EEPROM_ind += 36;
 16108  00CBC6  0E24               	movlw	36
 16109  00CBC8  2655               	addwf	operation_summary@EEPROM_ind,f,c
 16110  00CBCA  0E00               	movlw	0
 16111  00CBCC  2256               	addwfc	operation_summary@EEPROM_ind+1,f,c
 16112                           
 16113                           ;add_functions.c: 152: for(i = 0; i < 2; i++){
 16114  00CBCE  0E00               	movlw	0
 16115  00CBD0  6E54               	movwf	operation_summary@i+1,c
 16116  00CBD2  0E00               	movlw	0
 16117  00CBD4  6E53               	movwf	operation_summary@i,c
 16118  00CBD6                     l6896:
 16119  00CBD6  BE54               	btfsc	operation_summary@i+1,7,c
 16120  00CBD8  D006               	goto	l1158
 16121  00CBDA  5054               	movf	operation_summary@i+1,w,c
 16122  00CBDC  E112               	bnz	l6906
 16123  00CBDE  0E02               	movlw	2
 16124  00CBE0  5C53               	subwf	operation_summary@i,w,c
 16125  00CBE2  B0D8               	btfsc	status,0,c
 16126  00CBE4  D00E               	goto	u6500
 16127  00CBE6                     l1158:
 16128                           
 16129                           ;add_functions.c: 153: EEPROM_print[i] = read_EEPROM(i + EEPROM_ind);}
 16130  00CBE6  0E3F               	movlw	low operation_summary@EEPROM_print
 16131  00CBE8  2453               	addwf	operation_summary@i,w,c
 16132  00CBEA  6ED9               	movwf	fsr2l,c
 16133  00CBEC  0E00               	movlw	high operation_summary@EEPROM_print
 16134  00CBEE  2054               	addwfc	operation_summary@i+1,w,c
 16135  00CBF0  6EDA               	movwf	fsr2h,c
 16136  00CBF2  5053               	movf	operation_summary@i,w,c
 16137  00CBF4  2455               	addwf	operation_summary@EEPROM_ind,w,c
 16138  00CBF6  EC52  F051         	call	_read_EEPROM
 16139  00CBFA  6EDF               	movwf	indf2,c
 16140  00CBFC  4A53               	infsnz	operation_summary@i,f,c
 16141  00CBFE  2A54               	incf	operation_summary@i+1,f,c
 16142  00CC00  D7EA               	goto	l6896
 16143  00CC02                     u6500:
 16144  00CC02                     l6906:
 16145                           
 16146                           ;add_functions.c: 154: printf("Run Time");
 16147  00CC02  0E94               	movlw	low STR_82
 16148  00CC04  6E0D               	movwf	printf@f,c
 16149  00CC06  0EFF               	movlw	high STR_82
 16150  00CC08  6E0E               	movwf	printf@f+1,c
 16151  00CC0A  EC66  F061         	call	_printf	;wreg free
 16152                           
 16153                           ;add_functions.c: 155: lcdInst(0xC0);;
 16154  00CC0E  0EC0               	movlw	192
 16155  00CC10  EC3E  F051         	call	_lcdInst
 16156                           
 16157                           ;add_functions.c: 156: printf("Min:Sec = %d:%d", EEPROM_print[1], EEPROM_print[0]);
 16158  00CC14  0EFD               	movlw	low STR_83
 16159  00CC16  6E0D               	movwf	printf@f,c
 16160  00CC18  0EFD               	movlw	high STR_83
 16161  00CC1A  6E0E               	movwf	printf@f+1,c
 16162  00CC1C  C040  F00F         	movff	operation_summary@EEPROM_print+1,?_printf+2
 16163  00CC20  6A10               	clrf	?_printf+3,c
 16164  00CC22  C03F  F011         	movff	operation_summary@EEPROM_print,?_printf+4
 16165  00CC26  6A12               	clrf	?_printf+5,c
 16166  00CC28  EC66  F061         	call	_printf	;wreg free
 16167                           
 16168                           ;add_functions.c: 157: }
 16169  00CC2C  D03B               	goto	l1161
 16170  00CC2E                     l1157:
 16171                           
 16172                           ;add_functions.c: 159: else if (past_run_count == 10){
 16173  00CC2E  0E0A               	movlw	10
 16174  00CC30  1851               	xorwf	operation_summary@past_run_count,w,c
 16175  00CC32  1052               	iorwf	operation_summary@past_run_count+1,w,c
 16176  00CC34  A4D8               	btfss	status,2,c
 16177  00CC36  D036               	goto	l1161
 16178                           
 16179                           ;add_functions.c: 160: EEPROM_ind += 38;
 16180  00CC38  0E26               	movlw	38
 16181  00CC3A  2655               	addwf	operation_summary@EEPROM_ind,f,c
 16182  00CC3C  0E00               	movlw	0
 16183  00CC3E  2256               	addwfc	operation_summary@EEPROM_ind+1,f,c
 16184                           
 16185                           ;add_functions.c: 161: for(i = 0; i < 3; i++){
 16186  00CC40  0E00               	movlw	0
 16187  00CC42  6E54               	movwf	operation_summary@i+1,c
 16188  00CC44  0E00               	movlw	0
 16189  00CC46  6E53               	movwf	operation_summary@i,c
 16190  00CC48                     l6918:
 16191  00CC48  BE54               	btfsc	operation_summary@i+1,7,c
 16192  00CC4A  D006               	goto	l1162
 16193  00CC4C  5054               	movf	operation_summary@i+1,w,c
 16194  00CC4E  E112               	bnz	l6928
 16195  00CC50  0E03               	movlw	3
 16196  00CC52  5C53               	subwf	operation_summary@i,w,c
 16197  00CC54  B0D8               	btfsc	status,0,c
 16198  00CC56  D00E               	goto	u6530
 16199  00CC58                     l1162:
 16200                           
 16201                           ;add_functions.c: 162: EEPROM_print[i] = read_EEPROM(i + EEPROM_ind);}
 16202  00CC58  0E3F               	movlw	low operation_summary@EEPROM_print
 16203  00CC5A  2453               	addwf	operation_summary@i,w,c
 16204  00CC5C  6ED9               	movwf	fsr2l,c
 16205  00CC5E  0E00               	movlw	high operation_summary@EEPROM_print
 16206  00CC60  2054               	addwfc	operation_summary@i+1,w,c
 16207  00CC62  6EDA               	movwf	fsr2h,c
 16208  00CC64  5053               	movf	operation_summary@i,w,c
 16209  00CC66  2455               	addwf	operation_summary@EEPROM_ind,w,c
 16210  00CC68  EC52  F051         	call	_read_EEPROM
 16211  00CC6C  6EDF               	movwf	indf2,c
 16212  00CC6E  4A53               	infsnz	operation_summary@i,f,c
 16213  00CC70  2A54               	incf	operation_summary@i+1,f,c
 16214  00CC72  D7EA               	goto	l6918
 16215  00CC74                     u6530:
 16216  00CC74                     l6928:
 16217                           
 16218                           ;add_functions.c: 163: printf("Reservoir Count");
 16219  00CC74  0E2D               	movlw	low STR_84
 16220  00CC76  6E0D               	movwf	printf@f,c
 16221  00CC78  0EFE               	movlw	high STR_84
 16222  00CC7A  6E0E               	movwf	printf@f+1,c
 16223  00CC7C  EC66  F061         	call	_printf	;wreg free
 16224                           
 16225                           ;add_functions.c: 164: lcdInst(0xC0);;
 16226  00CC80  0EC0               	movlw	192
 16227  00CC82  EC3E  F051         	call	_lcdInst
 16228                           
 16229                           ;add_functions.c: 165: printf("R %d  F %d  L %d", EEPROM_print[0], EEPROM_print[1], EEPR
      +                          OM_print[2]);
 16230  00CC86  0E46               	movlw	low STR_126
 16231  00CC88  6E0D               	movwf	printf@f,c
 16232  00CC8A  0EFD               	movlw	high STR_126
 16233  00CC8C  6E0E               	movwf	printf@f+1,c
 16234  00CC8E  C03F  F00F         	movff	operation_summary@EEPROM_print,?_printf+2
 16235  00CC92  6A10               	clrf	?_printf+3,c
 16236  00CC94  C040  F011         	movff	operation_summary@EEPROM_print+1,?_printf+4
 16237  00CC98  6A12               	clrf	?_printf+5,c
 16238  00CC9A  C041  F013         	movff	operation_summary@EEPROM_print+2,?_printf+6
 16239  00CC9E  6A14               	clrf	?_printf+7,c
 16240  00CCA0  EC66  F061         	call	_printf	;wreg free
 16241  00CCA4                     l1161:
 16242                           
 16243                           ;add_functions.c: 166: }
 16244                           ;add_functions.c: 168: past_run_count += 1;
 16245  00CCA4  4A51               	infsnz	operation_summary@past_run_count,f,c
 16246  00CCA6  2A52               	incf	operation_summary@past_run_count+1,f,c
 16247  00CCA8                     l1136:
 16248  00CCA8  BE52               	btfsc	operation_summary@past_run_count+1,7,c
 16249  00CCAA  D566               	goto	l1129
 16250  00CCAC  5052               	movf	operation_summary@past_run_count+1,w,c
 16251  00CCAE  E105               	bnz	l1165
 16252  00CCB0  0E0C               	movlw	12
 16253  00CCB2  5C51               	subwf	operation_summary@past_run_count,w,c
 16254  00CCB4  B0D8               	btfsc	status,0,c
 16255  00CCB6  0012               	return	
 16256  00CCB8  D55F               	goto	l1129
 16257  00CCBA                     l1165:
 16258  00CCBA  0012               	return		;funcret
 16259  00CCBC                     __end_of_operation_summary:
 16260                           	opt stack 0
 16261                           tblptru	equ	0xFF8
 16262                           tblptrh	equ	0xFF7
 16263                           tblptrl	equ	0xFF6
 16264                           tablat	equ	0xFF5
 16265                           prodh	equ	0xFF4
 16266                           prodl	equ	0xFF3
 16267                           intcon	equ	0xFF2
 16268                           postinc0	equ	0xFEE
 16269                           wreg	equ	0xFE8
 16270                           postinc1	equ	0xFE6
 16271                           postdec1	equ	0xFE5
 16272                           plusw1	equ	0xFE3
 16273                           fsr1h	equ	0xFE2
 16274                           fsr1l	equ	0xFE1
 16275                           indf2	equ	0xFDF
 16276                           postinc2	equ	0xFDE
 16277                           postdec2	equ	0xFDD
 16278                           plusw2	equ	0xFDB
 16279                           fsr2h	equ	0xFDA
 16280                           fsr2l	equ	0xFD9
 16281                           status	equ	0xFD8
 16282                           
 16283 ;; *************** function _read_EEPROM *****************
 16284 ;; Defined at:
 16285 ;;		line 37 in file "EEPROM_storage.c"
 16286 ;; Parameters:    Size  Location     Type
 16287 ;;  address         1    wreg     unsigned char 
 16288 ;; Auto vars:     Size  Location     Type
 16289 ;;  address         1    0[COMRAM] unsigned char 
 16290 ;; Return value:  Size  Location     Type
 16291 ;;                  1    wreg      unsigned char 
 16292 ;; Registers used:
 16293 ;;		wreg, status,2
 16294 ;; Tracked objects:
 16295 ;;		On entry : 0/0
 16296 ;;		On exit  : 0/0
 16297 ;;		Unchanged: 0/0
 16298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16299 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16300 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16301 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16302 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16303 ;;Total ram usage:        1 bytes
 16304 ;; Hardware stack levels used:    1
 16305 ;; This function calls:
 16306 ;;		Nothing
 16307 ;; This function is called by:
 16308 ;;		_main
 16309 ;;		_operation_summary
 16310 ;;		_shift_EEPROM
 16311 ;; This function uses a non-reentrant model
 16312 ;;
 16313                           
 16314                           	psect	text20
 16315  00A2A4                     __ptext20:
 16316                           	opt stack 0
 16317  00A2A4                     _read_EEPROM:
 16318                           	opt stack 29
 16319                           
 16320                           ;incstack = 0
 16321                           ;read_EEPROM@address stored from wreg
 16322  00A2A4  6E01               	movwf	read_EEPROM@address,c
 16323  00A2A6                     
 16324                           ;EEPROM_storage.c: 38: while( EECON1bits.WR ){continue;}
 16325  00A2A6  B2A6               	btfsc	4006,1,c	;volsfr
 16326  00A2A8  D7FE               	goto	l5996
 16327                           
 16328                           ;EEPROM_storage.c: 40: EEADR = address;
 16329  00A2AA  C001  FFA9         	movff	read_EEPROM@address,4009	;volatile
 16330                           
 16331                           ;EEPROM_storage.c: 41: EECON1bits.EEPGD = 0;
 16332  00A2AE  9EA6               	bcf	4006,7,c	;volsfr
 16333                           
 16334                           ;EEPROM_storage.c: 42: EECON1bits.CFGS = 0;
 16335  00A2B0  9CA6               	bcf	4006,6,c	;volsfr
 16336                           
 16337                           ;EEPROM_storage.c: 43: EECON1bits.RD = 1;
 16338  00A2B2  80A6               	bsf	4006,0,c	;volsfr
 16339                           
 16340                           ;EEPROM_storage.c: 44: return( EEDATA );
 16341  00A2B4  50A8               	movf	4008,w,c	;volatile
 16342  00A2B6  0012               	return	
 16343  00A2B8                     __end_of_read_EEPROM:
 16344                           	opt stack 0
 16345                           tblptru	equ	0xFF8
 16346                           tblptrh	equ	0xFF7
 16347                           tblptrl	equ	0xFF6
 16348                           tablat	equ	0xFF5
 16349                           prodh	equ	0xFF4
 16350                           prodl	equ	0xFF3
 16351                           intcon	equ	0xFF2
 16352                           postinc0	equ	0xFEE
 16353                           wreg	equ	0xFE8
 16354                           postinc1	equ	0xFE6
 16355                           postdec1	equ	0xFE5
 16356                           plusw1	equ	0xFE3
 16357                           fsr1h	equ	0xFE2
 16358                           fsr1l	equ	0xFE1
 16359                           indf2	equ	0xFDF
 16360                           postinc2	equ	0xFDE
 16361                           postdec2	equ	0xFDD
 16362                           plusw2	equ	0xFDB
 16363                           fsr2h	equ	0xFDA
 16364                           fsr2l	equ	0xFD9
 16365                           status	equ	0xFD8
 16366                           
 16367 ;; *************** function _printf *****************
 16368 ;; Defined at:
 16369 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 16370 ;; Parameters:    Size  Location     Type
 16371 ;;  f               2   12[COMRAM] PTR const unsigned char 
 16372 ;;		 -> STR_126(17), STR_125(16), STR_124(16), STR_123(9), 
 16373 ;;		 -> STR_122(19), STR_121(16), STR_120(17), STR_119(11), 
 16374 ;;		 -> STR_118(17), STR_117(11), STR_116(17), STR_115(11), 
 16375 ;;		 -> STR_114(17), STR_113(11), STR_112(17), STR_111(11), 
 16376 ;;		 -> STR_110(17), STR_109(11), STR_108(17), STR_107(11), 
 16377 ;;		 -> STR_106(17), STR_105(11), STR_104(14), STR_103(11), 
 16378 ;;		 -> STR_102(24), STR_89(14), STR_88(20), STR_87(20), 
 16379 ;;		 -> STR_86(14), STR_85(16), STR_84(16), STR_83(16), 
 16380 ;;		 -> STR_82(9), STR_81(19), STR_80(16), STR_79(17), 
 16381 ;;		 -> STR_78(11), STR_77(17), STR_76(11), STR_75(17), 
 16382 ;;		 -> STR_74(11), STR_73(17), STR_72(11), STR_71(17), 
 16383 ;;		 -> STR_70(11), STR_69(17), STR_68(11), STR_67(17), 
 16384 ;;		 -> STR_66(11), STR_65(17), STR_64(11), STR_63(14), 
 16385 ;;		 -> STR_62(11), STR_61(14), STR_60(12), STR_59(17), 
 16386 ;;		 -> STR_58(14), STR_57(15), STR_56(12), STR_55(13), 
 16387 ;;		 -> STR_54(17), STR_53(14), STR_52(5), STR_51(16), 
 16388 ;;		 -> STR_50(17), STR_49(5), STR_48(16), STR_47(15), 
 16389 ;;		 -> STR_46(9), STR_45(10), STR_44(13), STR_43(10), 
 16390 ;;		 -> STR_42(31), STR_41(25), STR_40(15), STR_39(7), 
 16391 ;;		 -> STR_38(15), STR_37(14), STR_36(9), STR_35(10), 
 16392 ;;		 -> STR_34(12), STR_33(10), STR_32(30), STR_31(33), 
 16393 ;;		 -> STR_30(14), STR_29(17), STR_28(12), STR_27(12), 
 16394 ;;		 -> STR_26(11), STR_25(9), STR_24(9), STR_23(10), 
 16395 ;;		 -> STR_22(8), STR_21(15), STR_20(17), STR_19(15), 
 16396 ;;		 -> STR_18(16), STR_17(15), STR_16(12), STR_15(2), 
 16397 ;;		 -> STR_14(14), STR_13(11), STR_12(11), STR_11(2), 
 16398 ;;		 -> STR_10(14), STR_9(15), STR_8(16), STR_7(23), 
 16399 ;;		 -> STR_6(38), STR_5(39), STR_4(35), STR_3(41), 
 16400 ;;		 -> STR_2(6), STR_1(11), 
 16401 ;; Auto vars:     Size  Location     Type
 16402 ;;  idx             1   28[COMRAM] unsigned char 
 16403 ;;  tmpval          4    0        struct .
 16404 ;;  width           2   39[COMRAM] int 
 16405 ;;  val             2   36[COMRAM] unsigned int 
 16406 ;;  len             2   34[COMRAM] unsigned int 
 16407 ;;  ap              2   32[COMRAM] PTR void [1]
 16408 ;;		 -> ?_printf(2), 
 16409 ;;  cp              2   30[COMRAM] PTR const unsigned char 
 16410 ;;		 -> STR_127(7), printRTC@month(4), 
 16411 ;;  c               1   41[COMRAM] char 
 16412 ;;  flag            1   38[COMRAM] unsigned char 
 16413 ;;  prec            1   29[COMRAM] char 
 16414 ;; Return value:  Size  Location     Type
 16415 ;;                  2   12[COMRAM] int 
 16416 ;; Registers used:
 16417 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16418 ;; Tracked objects:
 16419 ;;		On entry : 0/0
 16420 ;;		On exit  : 0/0
 16421 ;;		Unchanged: 0/0
 16422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16423 ;;      Params:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16424 ;;      Locals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16425 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16426 ;;      Totals:        30       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16427 ;;Total ram usage:       30 bytes
 16428 ;; Hardware stack levels used:    1
 16429 ;; Hardware stack levels required when called:    2
 16430 ;; This function calls:
 16431 ;;		___lwdiv
 16432 ;;		___lwmod
 16433 ;;		___wmul
 16434 ;;		_isdigit
 16435 ;;		_putch
 16436 ;; This function is called by:
 16437 ;;		_main
 16438 ;;		_operation_summary
 16439 ;;		_printRTC
 16440 ;; This function uses a non-reentrant model
 16441 ;;
 16442                           
 16443                           	psect	text21
 16444  00C2CC                     __ptext21:
 16445                           	opt stack 0
 16446  00C2CC                     _printf:
 16447                           	opt stack 28
 16448                           
 16449                           ;doprnt.c: 466: va_list ap;
 16450                           ;doprnt.c: 499: signed char c;
 16451                           ;doprnt.c: 501: int width;
 16452                           ;doprnt.c: 506: signed char prec;
 16453                           ;doprnt.c: 508: unsigned char flag;
 16454                           ;doprnt.c: 523: union {
 16455                           ;doprnt.c: 524: unsigned long vd;
 16456                           ;doprnt.c: 525: double integ;
 16457                           ;doprnt.c: 526: } tmpval;
 16458                           ;doprnt.c: 528: unsigned int val;
 16459                           ;doprnt.c: 529: unsigned len;
 16460                           ;doprnt.c: 530: const char * cp;
 16461                           ;doprnt.c: 533: *ap = __va_start();
 16462                           
 16463                           ;incstack = 0
 16464  00C2CC  0E0F               	movlw	low (?_printf+2)
 16465  00C2CE  6E21               	movwf	printf@ap,c
 16466  00C2D0  0E00               	movlw	high (?_printf+2)
 16467  00C2D2  6E22               	movwf	printf@ap+1,c
 16468                           
 16469                           ;doprnt.c: 536: while(c = *f++) {
 16470  00C2D4  D1FA               	goto	u5040
 16471  00C2D6                     
 16472                           ;doprnt.c: 538: if(c != '%')
 16473  00C2D6  0E25               	movlw	37
 16474  00C2D8  182A               	xorwf	printf@c,w,c
 16475  00C2DA  B4D8               	btfsc	status,2,c
 16476  00C2DC  D004               	goto	l1366
 16477                           
 16478                           ;doprnt.c: 540: {
 16479                           ;doprnt.c: 541: (putch(c) );
 16480  00C2DE  502A               	movf	printf@c,w,c
 16481  00C2E0  EC48  F051         	call	_putch
 16482                           
 16483                           ;doprnt.c: 542: continue;
 16484  00C2E4  D1F2               	goto	u5040
 16485  00C2E6                     l1366:
 16486                           
 16487                           ;doprnt.c: 543: }
 16488                           ;doprnt.c: 546: width = 0;
 16489  00C2E6  0E00               	movlw	0
 16490  00C2E8  6E29               	movwf	printf@width+1,c
 16491  00C2EA  0E00               	movlw	0
 16492  00C2EC  6E28               	movwf	printf@width,c
 16493                           
 16494                           ;doprnt.c: 548: flag = 0;
 16495  00C2EE  0E00               	movlw	0
 16496  00C2F0  6E27               	movwf	printf@flag,c
 16497                           
 16498                           ;doprnt.c: 551: switch(*f) {
 16499                           
 16500                           ;doprnt.c: 550: for(;;) {
 16501  00C2F2  D003               	goto	l1368
 16502  00C2F4                     
 16503                           ;doprnt.c: 580: flag |= 0x04;
 16504  00C2F4  8427               	bsf	printf@flag,2,c
 16505                           
 16506                           ;doprnt.c: 581: f++;
 16507  00C2F6  4A0D               	infsnz	printf@f,f,c
 16508  00C2F8  2A0E               	incf	printf@f+1,f,c
 16509  00C2FA                     l1368:
 16510  00C2FA  C00D  FFF6         	movff	printf@f,tblptrl
 16511  00C2FE  C00E  FFF7         	movff	printf@f+1,tblptrh
 16512  00C302                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 16513  00C302  6AF8               	clrf	tblptru,c
 16514  00C304                     	endif
 16515  00C304                     	if	0	;tblptru may be non-zero
 16516  00C304                     	endif
 16517  00C304  0008               	tblrd		*
 16518  00C306  50F5               	movf	tablat,w,c
 16519                           
 16520                           ; Switch size 1, requested type "space"
 16521                           ; Number of cases is 1, Range of values is 48 to 48
 16522                           ; switch strategies available:
 16523                           ; Name         Instructions Cycles
 16524                           ; simple_byte            4     3 (average)
 16525                           ;	Chosen strategy is simple_byte
 16526  00C308  0A30               	xorlw	48	; case 48
 16527  00C30A  B4D8               	btfsc	status,2,c
 16528  00C30C  D7F3               	goto	l1369
 16529                           
 16530                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
 16531                           
 16532                           ;doprnt.c: 586: }
 16533                           
 16534                           ;doprnt.c: 585: break;
 16535  00C30E  C00D  FFF6         	movff	printf@f,tblptrl
 16536  00C312  C00E  FFF7         	movff	printf@f+1,tblptrh
 16537  00C316                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 16538  00C316  6AF8               	clrf	tblptru,c
 16539  00C318                     	endif
 16540  00C318                     	if	0	;tblptru may be non-zero
 16541  00C318                     	endif
 16542  00C318  0008               	tblrd		*
 16543  00C31A  50F5               	movf	tablat,w,c
 16544  00C31C  EC86  F051         	call	_isdigit
 16545  00C320  A0D8               	btfss	status,0,c
 16546  00C322  D0A6               	goto	l1376
 16547                           
 16548                           ;doprnt.c: 598: width = 0;
 16549  00C324  0E00               	movlw	0
 16550  00C326  6E29               	movwf	printf@width+1,c
 16551  00C328  0E00               	movlw	0
 16552  00C32A  6E28               	movwf	printf@width,c
 16553  00C32C                     
 16554                           ;doprnt.c: 600: width *= 10;
 16555  00C32C  C028  F001         	movff	printf@width,___wmul@multiplier
 16556  00C330  C029  F002         	movff	printf@width+1,___wmul@multiplier+1
 16557  00C334  0E00               	movlw	0
 16558  00C336  6E04               	movwf	___wmul@multiplicand+1,c
 16559  00C338  0E0A               	movlw	10
 16560  00C33A  6E03               	movwf	___wmul@multiplicand,c
 16561  00C33C  ECB7  F051         	call	___wmul	;wreg free
 16562  00C340  C001  F028         	movff	?___wmul,printf@width
 16563  00C344  C002  F029         	movff	?___wmul+1,printf@width+1
 16564                           
 16565                           ;doprnt.c: 601: width += *f++ - '0';
 16566  00C348  0ED0               	movlw	208
 16567  00C34A  6E19               	movwf	??_printf& (0+255),c
 16568  00C34C  0EFF               	movlw	255
 16569  00C34E  6E1A               	movwf	(??_printf+1)& (0+255),c
 16570  00C350  C00D  FFF6         	movff	printf@f,tblptrl
 16571  00C354  C00E  FFF7         	movff	printf@f+1,tblptrh
 16572  00C358                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 16573  00C358  6AF8               	clrf	tblptru,c
 16574  00C35A                     	endif
 16575  00C35A                     	if	0	;tblptru may be non-zero
 16576  00C35A                     	endif
 16577  00C35A  0008               	tblrd		*
 16578  00C35C  50F5               	movf	tablat,w,c
 16579  00C35E  6E1B               	movwf	(??_printf+2)& (0+255),c
 16580  00C360  6A1C               	clrf	(??_printf+3)& (0+255),c
 16581  00C362  5019               	movf	??_printf,w,c
 16582  00C364  261B               	addwf	??_printf+2,f,c
 16583  00C366  501A               	movf	??_printf+1,w,c
 16584  00C368  221C               	addwfc	??_printf+3,f,c
 16585  00C36A  501B               	movf	??_printf+2,w,c
 16586  00C36C  2628               	addwf	printf@width,f,c
 16587  00C36E  501C               	movf	??_printf+3,w,c
 16588  00C370  2229               	addwfc	printf@width+1,f,c
 16589  00C372  4A0D               	infsnz	printf@f,f,c
 16590  00C374  2A0E               	incf	printf@f+1,f,c
 16591                           
 16592                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
 16593  00C376  C00D  FFF6         	movff	printf@f,tblptrl
 16594  00C37A  C00E  FFF7         	movff	printf@f+1,tblptrh
 16595  00C37E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 16596  00C37E  6AF8               	clrf	tblptru,c
 16597  00C380                     	endif
 16598  00C380                     	if	0	;tblptru may be non-zero
 16599  00C380                     	endif
 16600  00C380  0008               	tblrd		*
 16601  00C382  50F5               	movf	tablat,w,c
 16602  00C384  EC86  F051         	call	_isdigit
 16603  00C388  A0D8               	btfss	status,0,c
 16604  00C38A  D072               	goto	l1376
 16605  00C38C  D7CF               	goto	l1374
 16606  00C38E                     
 16607                           ;doprnt.c: 721: flag |= 0x80;
 16608  00C38E  8E27               	bsf	printf@flag,7,c
 16609                           
 16610                           ;doprnt.c: 723: break;
 16611  00C390  D08A               	goto	l1381
 16612  00C392                     
 16613                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
 16614  00C392  C021  FFD9         	movff	printf@ap,fsr2l
 16615  00C396  C022  FFDA         	movff	printf@ap+1,fsr2h
 16616  00C39A  CFDE F01F          	movff	postinc2,printf@cp
 16617  00C39E  CFDD F020          	movff	postdec2,printf@cp+1
 16618  00C3A2  0E02               	movlw	2
 16619  00C3A4  2621               	addwf	printf@ap,f,c
 16620  00C3A6  0E00               	movlw	0
 16621  00C3A8  2222               	addwfc	printf@ap+1,f,c
 16622                           
 16623                           ;doprnt.c: 740: if(!cp)
 16624  00C3AA  501F               	movf	printf@cp,w,c
 16625  00C3AC  1020               	iorwf	printf@cp+1,w,c
 16626  00C3AE  A4D8               	btfss	status,2,c
 16627  00C3B0  D004               	goto	l1384
 16628                           
 16629                           ;doprnt.c: 741: cp = "(null)";
 16630  00C3B2  0EAE               	movlw	low STR_127
 16631  00C3B4  6E1F               	movwf	printf@cp,c
 16632  00C3B6  0EFF               	movlw	high STR_127
 16633  00C3B8  6E20               	movwf	printf@cp+1,c
 16634  00C3BA                     l1384:
 16635                           
 16636                           ;doprnt.c: 745: len = 0;
 16637  00C3BA  0E00               	movlw	0
 16638  00C3BC  6E24               	movwf	printf@len+1,c
 16639  00C3BE  0E00               	movlw	0
 16640  00C3C0  6E23               	movwf	printf@len,c
 16641                           
 16642                           ;doprnt.c: 746: while(cp[len])
 16643  00C3C2  D002               	goto	l1385
 16644  00C3C4                     
 16645                           ;doprnt.c: 747: len++;
 16646  00C3C4  4A23               	infsnz	printf@len,f,c
 16647  00C3C6  2A24               	incf	printf@len+1,f,c
 16648  00C3C8                     l1385:
 16649  00C3C8  5023               	movf	printf@len,w,c
 16650  00C3CA  241F               	addwf	printf@cp,w,c
 16651  00C3CC  6E19               	movwf	??_printf& (0+255),c
 16652  00C3CE  5024               	movf	printf@len+1,w,c
 16653  00C3D0  2020               	addwfc	printf@cp+1,w,c
 16654  00C3D2  6E1A               	movwf	(??_printf+1)& (0+255),c
 16655  00C3D4  C019  FFF6         	movff	??_printf,tblptrl
 16656  00C3D8  C01A  FFF7         	movff	??_printf+1,tblptrh
 16657  00C3DC  0E00               	movlw	low (__mediumconst shr (0+16))
 16658  00C3DE  6EF8               	movwf	tblptru,c
 16659  00C3E0  0E0F               	movlw	(high __ramtop+-1)
 16660  00C3E2  64F7               	cpfsgt	tblptrh,c
 16661  00C3E4  D003               	bra	u4807
 16662  00C3E6  0008               	tblrd		*
 16663  00C3E8  50F5               	movf	tablat,w,c
 16664  00C3EA  D005               	bra	u4800
 16665  00C3EC                     u4807:
 16666  00C3EC  CFF6 FFE9          	movff	tblptrl,fsr0l
 16667  00C3F0  CFF7 FFEA          	movff	tblptrh,fsr0h
 16668  00C3F4  50EF               	movf	indf0,w,c
 16669  00C3F6                     u4800:
 16670  00C3F6  0900               	iorlw	0
 16671  00C3F8  A4D8               	btfss	status,2,c
 16672  00C3FA  D7E4               	goto	l1386
 16673                           
 16674                           ;doprnt.c: 757: if(width > len)
 16675  00C3FC  5028               	movf	printf@width,w,c
 16676  00C3FE  5C23               	subwf	printf@len,w,c
 16677  00C400  5029               	movf	printf@width+1,w,c
 16678  00C402  5824               	subwfb	printf@len+1,w,c
 16679  00C404  B0D8               	btfsc	status,0,c
 16680  00C406  D005               	goto	l1388
 16681                           
 16682                           ;doprnt.c: 758: width -= len;
 16683  00C408  5023               	movf	printf@len,w,c
 16684  00C40A  5E28               	subwf	printf@width,f,c
 16685  00C40C  5024               	movf	printf@len+1,w,c
 16686  00C40E  5A29               	subwfb	printf@width+1,f,c
 16687  00C410  D008               	goto	l1390
 16688  00C412                     l1388:
 16689                           
 16690                           ;doprnt.c: 759: else
 16691                           ;doprnt.c: 760: width = 0;
 16692  00C412  0E00               	movlw	0
 16693  00C414  6E29               	movwf	printf@width+1,c
 16694  00C416  0E00               	movlw	0
 16695  00C418  6E28               	movwf	printf@width,c
 16696                           
 16697                           ;doprnt.c: 764: while(width--)
 16698  00C41A  D003               	goto	l1390
 16699  00C41C                     l5764:
 16700                           
 16701                           ;doprnt.c: 765: (putch(' ') );
 16702  00C41C  0E20               	movlw	32
 16703  00C41E  EC48  F051         	call	_putch
 16704  00C422                     l1390:
 16705  00C422  0628               	decf	printf@width,f,c
 16706  00C424  A0D8               	btfss	status,0,c
 16707  00C426  0629               	decf	printf@width+1,f,c
 16708  00C428  2828               	incf	printf@width,w,c
 16709  00C42A  E1F8               	bnz	l5764
 16710  00C42C  2829               	incf	printf@width+1,w,c
 16711  00C42E  B4D8               	btfsc	status,2,c
 16712  00C430  D016               	goto	l1393
 16713  00C432  D7F4               	goto	l1391
 16714  00C434                     l5768:
 16715                           
 16716                           ;doprnt.c: 768: (putch(*cp++) );
 16717  00C434  C01F  FFF6         	movff	printf@cp,tblptrl
 16718  00C438  C020  FFF7         	movff	printf@cp+1,tblptrh
 16719  00C43C  0E00               	movlw	low (__mediumconst shr (0+16))
 16720  00C43E  6EF8               	movwf	tblptru,c
 16721  00C440  0E0F               	movlw	(high __ramtop+-1)
 16722  00C442  64F7               	cpfsgt	tblptrh,c
 16723  00C444  D003               	bra	u4847
 16724  00C446  0008               	tblrd		*
 16725  00C448  50F5               	movf	tablat,w,c
 16726  00C44A  D005               	bra	u4840
 16727  00C44C                     u4847:
 16728  00C44C  CFF6 FFE9          	movff	tblptrl,fsr0l
 16729  00C450  CFF7 FFEA          	movff	tblptrh,fsr0h
 16730  00C454  50EF               	movf	indf0,w,c
 16731  00C456                     u4840:
 16732  00C456  EC48  F051         	call	_putch
 16733  00C45A  4A1F               	infsnz	printf@cp,f,c
 16734  00C45C  2A20               	incf	printf@cp+1,f,c
 16735  00C45E                     l1393:
 16736  00C45E  0623               	decf	printf@len,f,c
 16737  00C460  A0D8               	btfss	status,0,c
 16738  00C462  0624               	decf	printf@len+1,f,c
 16739  00C464  2823               	incf	printf@len,w,c
 16740  00C466  E1E6               	bnz	l5768
 16741  00C468  2824               	incf	printf@len+1,w,c
 16742  00C46A  B4D8               	btfsc	status,2,c
 16743  00C46C  D12E               	goto	u5040
 16744  00C46E  D7E2               	goto	l1394
 16745  00C470                     l1376:
 16746  00C470  C00D  FFF6         	movff	printf@f,tblptrl
 16747  00C474  C00E  FFF7         	movff	printf@f+1,tblptrh
 16748  00C478  4A0D               	infsnz	printf@f,f,c
 16749  00C47A  2A0E               	incf	printf@f+1,f,c
 16750  00C47C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 16751  00C47C  6AF8               	clrf	tblptru,c
 16752  00C47E                     	endif
 16753  00C47E                     	if	0	;tblptru may be non-zero
 16754  00C47E                     	endif
 16755  00C47E  0008               	tblrd		*
 16756  00C480  CFF5 F02A          	movff	tablat,printf@c
 16757  00C484  502A               	movf	printf@c,w,c
 16758                           
 16759                           ; Switch size 1, requested type "space"
 16760                           ; Number of cases is 5, Range of values is 0 to 120
 16761                           ; switch strategies available:
 16762                           ; Name         Instructions Cycles
 16763                           ; simple_byte           16     9 (average)
 16764                           ;	Chosen strategy is simple_byte
 16765  00C486  0A00               	xorlw	0	; case 0
 16766  00C488  B4D8               	btfsc	status,2,c
 16767  00C48A  0012               	return	
 16768  00C48C  0A64               	xorlw	100	; case 100
 16769  00C48E  B4D8               	btfsc	status,2,c
 16770  00C490  D00A               	goto	l1381
 16771  00C492  0A0D               	xorlw	13	; case 105
 16772  00C494  B4D8               	btfsc	status,2,c
 16773  00C496  D007               	goto	l1381
 16774  00C498  0A1A               	xorlw	26	; case 115
 16775  00C49A  B4D8               	btfsc	status,2,c
 16776  00C49C  D77A               	goto	l1383
 16777  00C49E  0A0B               	xorlw	11	; case 120
 16778  00C4A0  B4D8               	btfsc	status,2,c
 16779  00C4A2  D775               	goto	l1382
 16780  00C4A4  D112               	goto	u5040
 16781  00C4A6                     l1381:
 16782                           
 16783                           ;doprnt.c: 1251: if((flag & 0x80) == 0x00)
 16784  00C4A6  BE27               	btfsc	printf@flag,7,c
 16785  00C4A8  D015               	goto	l1397
 16786                           
 16787                           ;doprnt.c: 1253: {
 16788                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
 16789  00C4AA  C021  FFD9         	movff	printf@ap,fsr2l
 16790  00C4AE  C022  FFDA         	movff	printf@ap+1,fsr2h
 16791  00C4B2  CFDE F025          	movff	postinc2,printf@val
 16792  00C4B6  CFDD F026          	movff	postdec2,printf@val+1
 16793  00C4BA  0E02               	movlw	2
 16794  00C4BC  2621               	addwf	printf@ap,f,c
 16795  00C4BE  0E00               	movlw	0
 16796  00C4C0  2222               	addwfc	printf@ap+1,f,c
 16797                           
 16798                           ;doprnt.c: 1261: if((int)val < 0) {
 16799  00C4C2  AE26               	btfss	printf@val+1,7,c
 16800  00C4C4  D04A               	goto	l1400
 16801                           
 16802                           ;doprnt.c: 1262: flag |= 0x03;
 16803  00C4C6  0E03               	movlw	3
 16804  00C4C8  1227               	iorwf	printf@flag,f,c
 16805                           
 16806                           ;doprnt.c: 1263: val = -val;
 16807  00C4CA  6C25               	negf	printf@val,c
 16808  00C4CC  1E26               	comf	printf@val+1,f,c
 16809  00C4CE  B0D8               	btfsc	status,0,c
 16810  00C4D0  2A26               	incf	printf@val+1,f,c
 16811                           
 16812                           ;doprnt.c: 1264: }
 16813                           ;doprnt.c: 1266: }
 16814  00C4D2  D043               	goto	l1400
 16815  00C4D4                     l1397:
 16816                           
 16817                           ;doprnt.c: 1268: else
 16818                           ;doprnt.c: 1273: {
 16819                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
 16820  00C4D4  C021  FFD9         	movff	printf@ap,fsr2l
 16821  00C4D8  C022  FFDA         	movff	printf@ap+1,fsr2h
 16822  00C4DC  CFDE F025          	movff	postinc2,printf@val
 16823  00C4E0  CFDD F026          	movff	postdec2,printf@val+1
 16824  00C4E4  0E02               	movlw	2
 16825  00C4E6  2621               	addwf	printf@ap,f,c
 16826  00C4E8  0E00               	movlw	0
 16827  00C4EA  2222               	addwfc	printf@ap+1,f,c
 16828                           
 16829                           ;doprnt.c: 1287: }
 16830                           ;doprnt.c: 1294: switch((unsigned char)(flag & 0x80)) {
 16831  00C4EC  D036               	goto	l1400
 16832  00C4EE                     
 16833                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 16834  00C4EE  0E01               	movlw	1
 16835  00C4F0  6E2A               	movwf	printf@c,c
 16836  00C4F2                     l5794:
 16837  00C4F2  0E05               	movlw	5
 16838  00C4F4  182A               	xorwf	printf@c,w,c
 16839  00C4F6  B4D8               	btfsc	status,2,c
 16840  00C4F8  D038               	goto	l1405
 16841                           
 16842                           ;doprnt.c: 1306: if(val < dpowers[c])
 16843  00C4FA  502A               	movf	printf@c,w,c
 16844  00C4FC  0D02               	mullw	2
 16845  00C4FE  0EA3               	movlw	low _dpowers
 16846  00C500  24F3               	addwf	prodl,w,c
 16847  00C502  6EF6               	movwf	tblptrl,c
 16848  00C504  0EFB               	movlw	high _dpowers
 16849  00C506  20F4               	addwfc	prodh,w,c
 16850  00C508  6EF7               	movwf	tblptrh,c
 16851  00C50A                     	if	1	;There are 3 active tblptr bytes
 16852  00C50A  6AF8               	clrf	tblptru,c
 16853  00C50C  0E00               	movlw	low (__mediumconst shr (0+16))
 16854  00C50E  22F8               	addwfc	tblptru,f,c
 16855  00C510                     	endif
 16856  00C510  0009               	tblrd		*+
 16857  00C512  50F5               	movf	tablat,w,c
 16858  00C514  5C25               	subwf	printf@val,w,c
 16859  00C516  0009               	tblrd		*+
 16860  00C518  50F5               	movf	tablat,w,c
 16861  00C51A  5826               	subwfb	printf@val+1,w,c
 16862  00C51C  A0D8               	btfss	status,0,c
 16863  00C51E  D025               	goto	l1405
 16864                           
 16865                           ;doprnt.c: 1307: break;
 16866  00C520  2A2A               	incf	printf@c,f,c
 16867  00C522  D7E7               	goto	l5794
 16868  00C524                     
 16869                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
 16870  00C524  0E01               	movlw	1
 16871  00C526  6E2A               	movwf	printf@c,c
 16872  00C528                     l5808:
 16873  00C528  0E04               	movlw	4
 16874  00C52A  182A               	xorwf	printf@c,w,c
 16875  00C52C  B4D8               	btfsc	status,2,c
 16876  00C52E  D01D               	goto	l1405
 16877                           
 16878                           ;doprnt.c: 1317: if(val < hexpowers[c])
 16879  00C530  502A               	movf	printf@c,w,c
 16880  00C532  0D02               	mullw	2
 16881  00C534  0EAD               	movlw	low _hexpowers
 16882  00C536  24F3               	addwf	prodl,w,c
 16883  00C538  6EF6               	movwf	tblptrl,c
 16884  00C53A  0EFB               	movlw	high _hexpowers
 16885  00C53C  20F4               	addwfc	prodh,w,c
 16886  00C53E  6EF7               	movwf	tblptrh,c
 16887  00C540                     	if	1	;There are 3 active tblptr bytes
 16888  00C540  6AF8               	clrf	tblptru,c
 16889  00C542  0E00               	movlw	low (__mediumconst shr (0+16))
 16890  00C544  22F8               	addwfc	tblptru,f,c
 16891  00C546                     	endif
 16892  00C546  0009               	tblrd		*+
 16893  00C548  50F5               	movf	tablat,w,c
 16894  00C54A  5C25               	subwf	printf@val,w,c
 16895  00C54C  0009               	tblrd		*+
 16896  00C54E  50F5               	movf	tablat,w,c
 16897  00C550  5826               	subwfb	printf@val+1,w,c
 16898  00C552  A0D8               	btfss	status,0,c
 16899  00C554  D00A               	goto	l1405
 16900                           
 16901                           ;doprnt.c: 1318: break;
 16902  00C556  2A2A               	incf	printf@c,f,c
 16903  00C558  D7E7               	goto	l5808
 16904  00C55A                     l1400:
 16905  00C55A  5027               	movf	printf@flag,w,c
 16906  00C55C  0B80               	andlw	128
 16907                           
 16908                           ; Switch size 1, requested type "space"
 16909                           ; Number of cases is 2, Range of values is 0 to 128
 16910                           ; switch strategies available:
 16911                           ; Name         Instructions Cycles
 16912                           ; simple_byte            7     4 (average)
 16913                           ;	Chosen strategy is simple_byte
 16914  00C55E  0A00               	xorlw	0	; case 0
 16915  00C560  B4D8               	btfsc	status,2,c
 16916  00C562  D7C5               	goto	l1401
 16917  00C564  0A80               	xorlw	128	; case 128
 16918  00C566  B4D8               	btfsc	status,2,c
 16919  00C568  D7DD               	goto	l1406
 16920  00C56A                     l1405:
 16921                           
 16922                           ;doprnt.c: 1345: if(width && flag & 0x03)
 16923  00C56A  5028               	movf	printf@width,w,c
 16924  00C56C  1029               	iorwf	printf@width+1,w,c
 16925  00C56E  B4D8               	btfsc	status,2,c
 16926  00C570  D009               	goto	l1410
 16927  00C572  C027  F019         	movff	printf@flag,??_printf
 16928  00C576  0E03               	movlw	3
 16929  00C578  1619               	andwf	??_printf,f,c
 16930  00C57A  B4D8               	btfsc	status,2,c
 16931  00C57C  D003               	goto	l1410
 16932                           
 16933                           ;doprnt.c: 1346: width--;
 16934  00C57E  0628               	decf	printf@width,f,c
 16935  00C580  A0D8               	btfss	status,0,c
 16936  00C582  0629               	decf	printf@width+1,f,c
 16937  00C584                     l1410:
 16938                           
 16939                           ;doprnt.c: 1381: if(width > c)
 16940  00C584  0E80               	movlw	128
 16941  00C586  BE2A               	btfsc	printf@c,7,c
 16942  00C588  0E7F               	movlw	127
 16943  00C58A  6E19               	movwf	??_printf& (0+255),c
 16944  00C58C  5028               	movf	printf@width,w,c
 16945  00C58E  5C2A               	subwf	printf@c,w,c
 16946  00C590  5029               	movf	printf@width+1,w,c
 16947  00C592  0A80               	xorlw	128
 16948  00C594  5819               	subwfb	??_printf& (0+255),w,c
 16949  00C596  B0D8               	btfsc	status,0,c
 16950  00C598  D007               	goto	l1411
 16951                           
 16952                           ;doprnt.c: 1382: width -= c;
 16953  00C59A  502A               	movf	printf@c,w,c
 16954  00C59C  5E28               	subwf	printf@width,f,c
 16955  00C59E  0E00               	movlw	0
 16956  00C5A0  BE2A               	btfsc	printf@c,7,c
 16957  00C5A2  0EFF               	movlw	255
 16958  00C5A4  5A29               	subwfb	printf@width+1,f,c
 16959  00C5A6  D004               	goto	l1412
 16960  00C5A8                     l1411:
 16961                           
 16962                           ;doprnt.c: 1383: else
 16963                           ;doprnt.c: 1384: width = 0;
 16964  00C5A8  0E00               	movlw	0
 16965  00C5AA  6E29               	movwf	printf@width+1,c
 16966  00C5AC  0E00               	movlw	0
 16967  00C5AE  6E28               	movwf	printf@width,c
 16968  00C5B0                     l1412:
 16969                           
 16970                           ;doprnt.c: 1387: if(flag & 0x04) {
 16971  00C5B0  A427               	btfss	printf@flag,2,c
 16972  00C5B2  D014               	goto	l1413
 16973                           
 16974                           ;doprnt.c: 1392: if(flag & 0x03)
 16975  00C5B4  C027  F019         	movff	printf@flag,??_printf
 16976  00C5B8  0E03               	movlw	3
 16977  00C5BA  1619               	andwf	??_printf,f,c
 16978  00C5BC  B4D8               	btfsc	status,2,c
 16979  00C5BE  D003               	goto	l1414
 16980                           
 16981                           ;doprnt.c: 1393: (putch('-') );
 16982  00C5C0  0E2D               	movlw	45
 16983  00C5C2  EC48  F051         	call	_putch
 16984  00C5C6                     l1414:
 16985                           
 16986                           ;doprnt.c: 1415: if(width)
 16987  00C5C6  5028               	movf	printf@width,w,c
 16988  00C5C8  1029               	iorwf	printf@width+1,w,c
 16989  00C5CA  B4D8               	btfsc	status,2,c
 16990  00C5CC  D01E               	goto	l1422
 16991                           
 16992                           ;doprnt.c: 1417: (putch('0') );
 16993                           
 16994                           ;doprnt.c: 1416: do
 16995  00C5CE  0E30               	movlw	48
 16996  00C5D0  EC48  F051         	call	_putch
 16997                           
 16998                           ;doprnt.c: 1418: while(--width);
 16999  00C5D4  0628               	decf	printf@width,f,c
 17000  00C5D6  A0D8               	btfss	status,0,c
 17001  00C5D8  0629               	decf	printf@width+1,f,c
 17002  00C5DA  D7F5               	goto	l1414
 17003  00C5DC                     l1413:
 17004                           
 17005                           ;doprnt.c: 1422: {
 17006                           ;doprnt.c: 1424: if(width
 17007                           ;doprnt.c: 1428: )
 17008  00C5DC  5028               	movf	printf@width,w,c
 17009  00C5DE  1029               	iorwf	printf@width+1,w,c
 17010  00C5E0  B4D8               	btfsc	status,2,c
 17011  00C5E2  D00A               	goto	u5020
 17012  00C5E4                     u5010:
 17013                           
 17014                           ;doprnt.c: 1430: (putch(' ') );
 17015                           
 17016                           ;doprnt.c: 1429: do
 17017  00C5E4  0E20               	movlw	32
 17018  00C5E6  EC48  F051         	call	_putch
 17019                           
 17020                           ;doprnt.c: 1431: while(--width);
 17021  00C5EA  0628               	decf	printf@width,f,c
 17022  00C5EC  A0D8               	btfss	status,0,c
 17023  00C5EE  0629               	decf	printf@width+1,f,c
 17024  00C5F0  5028               	movf	printf@width,w,c
 17025  00C5F2  1029               	iorwf	printf@width+1,w,c
 17026  00C5F4  A4D8               	btfss	status,2,c
 17027  00C5F6  D7F6               	goto	u5010
 17028  00C5F8                     u5020:
 17029                           
 17030                           ;doprnt.c: 1438: if(flag & 0x03)
 17031  00C5F8  C027  F019         	movff	printf@flag,??_printf
 17032  00C5FC  0E03               	movlw	3
 17033  00C5FE  1619               	andwf	??_printf,f,c
 17034  00C600  B4D8               	btfsc	status,2,c
 17035  00C602  D003               	goto	l1422
 17036                           
 17037                           ;doprnt.c: 1439: (putch('-') );
 17038  00C604  0E2D               	movlw	45
 17039  00C606  EC48  F051         	call	_putch
 17040  00C60A                     l1422:
 17041                           
 17042                           ;doprnt.c: 1469: }
 17043                           ;doprnt.c: 1472: prec = c;
 17044  00C60A  C02A  F01E         	movff	printf@c,printf@prec
 17045                           
 17046                           ;doprnt.c: 1474: while(prec--) {
 17047  00C60E  D059               	goto	l1423
 17048  00C610                     
 17049                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
 17050  00C610  501E               	movf	printf@prec,w,c
 17051  00C612  0D02               	mullw	2
 17052  00C614  0EA3               	movlw	low _dpowers
 17053  00C616  24F3               	addwf	prodl,w,c
 17054  00C618  6EF6               	movwf	tblptrl,c
 17055  00C61A  0EFB               	movlw	high _dpowers
 17056  00C61C  20F4               	addwfc	prodh,w,c
 17057  00C61E  6EF7               	movwf	tblptrh,c
 17058  00C620                     	if	1	;There are 3 active tblptr bytes
 17059  00C620  6AF8               	clrf	tblptru,c
 17060  00C622  0E00               	movlw	low (__mediumconst shr (0+16))
 17061  00C624  22F8               	addwfc	tblptru,f,c
 17062  00C626                     	endif
 17063  00C626  0009               	tblrd		*+
 17064  00C628  CFF5 F003          	movff	tablat,___lwdiv@divisor
 17065  00C62C  000A               	tblrd		*-
 17066  00C62E  CFF5 F004          	movff	tablat,___lwdiv@divisor+1
 17067  00C632  C025  F001         	movff	printf@val,___lwdiv@dividend
 17068  00C636  C026  F002         	movff	printf@val+1,___lwdiv@dividend+1
 17069  00C63A  EC7F  F052         	call	___lwdiv	;wreg free
 17070  00C63E  C001  F008         	movff	?___lwdiv,___lwmod@dividend
 17071  00C642  C002  F009         	movff	?___lwdiv+1,___lwmod@dividend+1
 17072  00C646  0E00               	movlw	0
 17073  00C648  6E0B               	movwf	___lwmod@divisor+1,c
 17074  00C64A  0E0A               	movlw	10
 17075  00C64C  6E0A               	movwf	___lwmod@divisor,c
 17076  00C64E  EC38  F052         	call	___lwmod	;wreg free
 17077  00C652  5008               	movf	?___lwmod,w,c
 17078  00C654  0F30               	addlw	48
 17079  00C656  6E2A               	movwf	printf@c,c
 17080                           
 17081                           ;doprnt.c: 1491: break;
 17082  00C658  D031               	goto	l1427
 17083  00C65A                     
 17084                           ;doprnt.c: 1499: {
 17085                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
 17086  00C65A  C025  F001         	movff	printf@val,___lwdiv@dividend
 17087  00C65E  C026  F002         	movff	printf@val+1,___lwdiv@dividend+1
 17088  00C662  501E               	movf	printf@prec,w,c
 17089  00C664  0D02               	mullw	2
 17090  00C666  0EAD               	movlw	low _hexpowers
 17091  00C668  24F3               	addwf	prodl,w,c
 17092  00C66A  6EF6               	movwf	tblptrl,c
 17093  00C66C  0EFB               	movlw	high _hexpowers
 17094  00C66E  20F4               	addwfc	prodh,w,c
 17095  00C670  6EF7               	movwf	tblptrh,c
 17096  00C672                     	if	1	;There are 3 active tblptr bytes
 17097  00C672  6AF8               	clrf	tblptru,c
 17098  00C674  0E00               	movlw	low (__mediumconst shr (0+16))
 17099  00C676  22F8               	addwfc	tblptru,f,c
 17100  00C678                     	endif
 17101  00C678  0009               	tblrd		*+
 17102  00C67A  CFF5 F003          	movff	tablat,___lwdiv@divisor
 17103  00C67E  000A               	tblrd		*-
 17104  00C680  CFF5 F004          	movff	tablat,___lwdiv@divisor+1
 17105  00C684  EC7F  F052         	call	___lwdiv	;wreg free
 17106  00C688  5001               	movf	?___lwdiv,w,c
 17107  00C68A  0B0F               	andlw	15
 17108  00C68C  6E1D               	movwf	printf@idx,c
 17109                           
 17110                           ;doprnt.c: 1506: c = "0123456789abcdef"[idx];
 17111  00C68E  501D               	movf	printf@idx,w,c
 17112  00C690  0D01               	mullw	1
 17113  00C692  0E35               	movlw	low STR_128
 17114  00C694  24F3               	addwf	prodl,w,c
 17115  00C696  6EF6               	movwf	tblptrl,c
 17116  00C698  0EFD               	movlw	high STR_128
 17117  00C69A  20F4               	addwfc	prodh,w,c
 17118  00C69C  6EF7               	movwf	tblptrh,c
 17119  00C69E                     	if	1	;There are 3 active tblptr bytes
 17120  00C69E  6AF8               	clrf	tblptru,c
 17121  00C6A0  0E00               	movlw	low (__mediumconst shr (0+16))
 17122  00C6A2  22F8               	addwfc	tblptru,f,c
 17123  00C6A4                     	endif
 17124  00C6A4  0008               	tblrd		*
 17125  00C6A6  CFF5 F02A          	movff	tablat,printf@c
 17126                           
 17127                           ;doprnt.c: 1523: }
 17128                           
 17129                           ;doprnt.c: 1508: }
 17130                           ;doprnt.c: 1510: break;
 17131  00C6AA  D008               	goto	l1427
 17132  00C6AC  5027               	movf	printf@flag,w,c
 17133  00C6AE  0B80               	andlw	128
 17134                           
 17135                           ; Switch size 1, requested type "space"
 17136                           ; Number of cases is 2, Range of values is 0 to 128
 17137                           ; switch strategies available:
 17138                           ; Name         Instructions Cycles
 17139                           ; simple_byte            7     4 (average)
 17140                           ;	Chosen strategy is simple_byte
 17141  00C6B0  0A00               	xorlw	0	; case 0
 17142  00C6B2  B4D8               	btfsc	status,2,c
 17143  00C6B4  D7AD               	goto	l1426
 17144  00C6B6  0A80               	xorlw	128	; case 128
 17145  00C6B8  B4D8               	btfsc	status,2,c
 17146  00C6BA  D7CF               	goto	l1428
 17147  00C6BC                     l1427:
 17148                           
 17149                           ;doprnt.c: 1524: (putch(c) );
 17150  00C6BC  502A               	movf	printf@c,w,c
 17151  00C6BE  EC48  F051         	call	_putch
 17152  00C6C2                     l1423:
 17153  00C6C2  061E               	decf	printf@prec,f,c
 17154  00C6C4  281E               	incf	printf@prec,w,c
 17155  00C6C6  A4D8               	btfss	status,2,c
 17156  00C6C8  D7F1               	goto	l1425
 17157  00C6CA                     u5040:
 17158  00C6CA  C00D  FFF6         	movff	printf@f,tblptrl
 17159  00C6CE  C00E  FFF7         	movff	printf@f+1,tblptrh
 17160  00C6D2  4A0D               	infsnz	printf@f,f,c
 17161  00C6D4  2A0E               	incf	printf@f+1,f,c
 17162  00C6D6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 17163  00C6D6  6AF8               	clrf	tblptru,c
 17164  00C6D8                     	endif
 17165  00C6D8                     	if	0	;tblptru may be non-zero
 17166  00C6D8                     	endif
 17167  00C6D8  0008               	tblrd		*
 17168  00C6DA  CFF5 F02A          	movff	tablat,printf@c
 17169  00C6DE  502A               	movf	printf@c,w,c
 17170  00C6E0  B4D8               	btfsc	status,2,c
 17171  00C6E2  0012               	return	
 17172  00C6E4  D5F8               	goto	l1365
 17173  00C6E6                     __end_of_printf:
 17174                           	opt stack 0
 17175                           tblptru	equ	0xFF8
 17176                           tblptrh	equ	0xFF7
 17177                           tblptrl	equ	0xFF6
 17178                           tablat	equ	0xFF5
 17179                           prodh	equ	0xFF4
 17180                           prodl	equ	0xFF3
 17181                           intcon	equ	0xFF2
 17182                           indf0	equ	0xFEF
 17183                           postinc0	equ	0xFEE
 17184                           fsr0h	equ	0xFEA
 17185                           fsr0l	equ	0xFE9
 17186                           wreg	equ	0xFE8
 17187                           postinc1	equ	0xFE6
 17188                           postdec1	equ	0xFE5
 17189                           plusw1	equ	0xFE3
 17190                           fsr1h	equ	0xFE2
 17191                           fsr1l	equ	0xFE1
 17192                           indf2	equ	0xFDF
 17193                           postinc2	equ	0xFDE
 17194                           postdec2	equ	0xFDD
 17195                           plusw2	equ	0xFDB
 17196                           fsr2h	equ	0xFDA
 17197                           fsr2l	equ	0xFD9
 17198                           status	equ	0xFD8
 17199                           
 17200 ;; *************** function _putch *****************
 17201 ;; Defined at:
 17202 ;;		line 36 in file "lcd.c"
 17203 ;; Parameters:    Size  Location     Type
 17204 ;;  data            1    wreg     unsigned char 
 17205 ;; Auto vars:     Size  Location     Type
 17206 ;;  data            1    2[COMRAM] unsigned char 
 17207 ;; Return value:  Size  Location     Type
 17208 ;;                  1    wreg      void 
 17209 ;; Registers used:
 17210 ;;		wreg, status,2, status,0, cstack
 17211 ;; Tracked objects:
 17212 ;;		On entry : 0/0
 17213 ;;		On exit  : 0/0
 17214 ;;		Unchanged: 0/0
 17215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17216 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17217 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17218 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17219 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17220 ;;Total ram usage:        1 bytes
 17221 ;; Hardware stack levels used:    1
 17222 ;; Hardware stack levels required when called:    1
 17223 ;; This function calls:
 17224 ;;		_lcdNibble
 17225 ;; This function is called by:
 17226 ;;		_main
 17227 ;;		_printf
 17228 ;; This function uses a non-reentrant model
 17229 ;;
 17230                           
 17231                           	psect	text22
 17232  00A290                     __ptext22:
 17233                           	opt stack 0
 17234  00A290                     _putch:
 17235                           	opt stack 29
 17236                           
 17237                           ;incstack = 0
 17238                           ;putch@data stored from wreg
 17239  00A290  6E03               	movwf	putch@data,c
 17240                           
 17241                           ;lcd.c: 44: LATDbits.LATD2 = 1;
 17242  00A292  848C               	bsf	3980,2,c	;volatile
 17243                           
 17244                           ;lcd.c: 45: lcdNibble(data);
 17245  00A294  5003               	movf	putch@data,w,c
 17246  00A296  ECF6  F053         	call	_lcdNibble
 17247                           
 17248                           ;lcd.c: 46: _delay((unsigned long)((100)*(40000000/4000000.0)));
 17249  00A29A  0EC8               	movlw	200
 17250  00A29C                     u10347:
 17251  00A29C  D000               	nop2	
 17252  00A29E  2EE8               	decfsz	wreg,f,c
 17253  00A2A0  D7FD               	bra	u10347
 17254  00A2A2  0012               	return		;funcret
 17255  00A2A4                     __end_of_putch:
 17256                           	opt stack 0
 17257                           tblptru	equ	0xFF8
 17258                           tblptrh	equ	0xFF7
 17259                           tblptrl	equ	0xFF6
 17260                           tablat	equ	0xFF5
 17261                           prodh	equ	0xFF4
 17262                           prodl	equ	0xFF3
 17263                           intcon	equ	0xFF2
 17264                           indf0	equ	0xFEF
 17265                           postinc0	equ	0xFEE
 17266                           fsr0h	equ	0xFEA
 17267                           fsr0l	equ	0xFE9
 17268                           wreg	equ	0xFE8
 17269                           postinc1	equ	0xFE6
 17270                           postdec1	equ	0xFE5
 17271                           plusw1	equ	0xFE3
 17272                           fsr1h	equ	0xFE2
 17273                           fsr1l	equ	0xFE1
 17274                           indf2	equ	0xFDF
 17275                           postinc2	equ	0xFDE
 17276                           postdec2	equ	0xFDD
 17277                           plusw2	equ	0xFDB
 17278                           fsr2h	equ	0xFDA
 17279                           fsr2l	equ	0xFD9
 17280                           status	equ	0xFD8
 17281                           
 17282 ;; *************** function _isdigit *****************
 17283 ;; Defined at:
 17284 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\isdigit.c"
 17285 ;; Parameters:    Size  Location     Type
 17286 ;;  c               1    wreg     unsigned char 
 17287 ;; Auto vars:     Size  Location     Type
 17288 ;;  c               1    2[COMRAM] unsigned char 
 17289 ;; Return value:  Size  Location     Type
 17290 ;;		None               void
 17291 ;; Registers used:
 17292 ;;		wreg, status,2, status,0
 17293 ;; Tracked objects:
 17294 ;;		On entry : 0/0
 17295 ;;		On exit  : 0/0
 17296 ;;		Unchanged: 0/0
 17297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17298 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17299 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17300 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17301 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17302 ;;Total ram usage:        3 bytes
 17303 ;; Hardware stack levels used:    1
 17304 ;; This function calls:
 17305 ;;		Nothing
 17306 ;; This function is called by:
 17307 ;;		_printf
 17308 ;; This function uses a non-reentrant model
 17309 ;;
 17310                           
 17311                           	psect	text23
 17312  00A30C                     __ptext23:
 17313                           	opt stack 0
 17314  00A30C                     _isdigit:
 17315                           	opt stack 29
 17316                           
 17317                           ;incstack = 0
 17318                           ;isdigit@c stored from wreg
 17319  00A30C  6E03               	movwf	isdigit@c,c
 17320  00A30E  0E00               	movlw	0
 17321  00A310  6E02               	movwf	_isdigit$1786,c
 17322  00A312  0E3A               	movlw	58
 17323  00A314  6003               	cpfslt	isdigit@c,c
 17324  00A316  D005               	goto	l1761
 17325  00A318  0E2F               	movlw	47
 17326  00A31A  6403               	cpfsgt	isdigit@c,c
 17327  00A31C  D002               	goto	l1761
 17328  00A31E  0E01               	movlw	1
 17329  00A320  6E02               	movwf	_isdigit$1786,c
 17330  00A322                     l1761:
 17331  00A322  C002  F001         	movff	_isdigit$1786,??_isdigit
 17332  00A326  3001               	rrcf	??_isdigit,w,c
 17333  00A328  0012               	return	
 17334  00A32A                     __end_of_isdigit:
 17335                           	opt stack 0
 17336                           tblptru	equ	0xFF8
 17337                           tblptrh	equ	0xFF7
 17338                           tblptrl	equ	0xFF6
 17339                           tablat	equ	0xFF5
 17340                           prodh	equ	0xFF4
 17341                           prodl	equ	0xFF3
 17342                           intcon	equ	0xFF2
 17343                           indf0	equ	0xFEF
 17344                           postinc0	equ	0xFEE
 17345                           fsr0h	equ	0xFEA
 17346                           fsr0l	equ	0xFE9
 17347                           wreg	equ	0xFE8
 17348                           postinc1	equ	0xFE6
 17349                           postdec1	equ	0xFE5
 17350                           plusw1	equ	0xFE3
 17351                           fsr1h	equ	0xFE2
 17352                           fsr1l	equ	0xFE1
 17353                           indf2	equ	0xFDF
 17354                           postinc2	equ	0xFDE
 17355                           postdec2	equ	0xFDD
 17356                           plusw2	equ	0xFDB
 17357                           fsr2h	equ	0xFDA
 17358                           fsr2l	equ	0xFD9
 17359                           status	equ	0xFD8
 17360                           
 17361 ;; *************** function ___lwmod *****************
 17362 ;; Defined at:
 17363 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwmod.c"
 17364 ;; Parameters:    Size  Location     Type
 17365 ;;  dividend        2    7[COMRAM] unsigned int 
 17366 ;;  divisor         2    9[COMRAM] unsigned int 
 17367 ;; Auto vars:     Size  Location     Type
 17368 ;;  counter         1   11[COMRAM] unsigned char 
 17369 ;; Return value:  Size  Location     Type
 17370 ;;                  2    7[COMRAM] unsigned int 
 17371 ;; Registers used:
 17372 ;;		wreg, status,2, status,0
 17373 ;; Tracked objects:
 17374 ;;		On entry : 0/0
 17375 ;;		On exit  : 0/0
 17376 ;;		Unchanged: 0/0
 17377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17378 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17379 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17380 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17381 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17382 ;;Total ram usage:        5 bytes
 17383 ;; Hardware stack levels used:    1
 17384 ;; This function calls:
 17385 ;;		Nothing
 17386 ;; This function is called by:
 17387 ;;		_printf
 17388 ;; This function uses a non-reentrant model
 17389 ;;
 17390                           
 17391                           	psect	text24
 17392  00A470                     __ptext24:
 17393                           	opt stack 0
 17394  00A470                     ___lwmod:
 17395                           	opt stack 29
 17396                           
 17397                           ;incstack = 0
 17398  00A470  500A               	movf	___lwmod@divisor,w,c
 17399  00A472  100B               	iorwf	___lwmod@divisor+1,w,c
 17400  00A474  B4D8               	btfsc	status,2,c
 17401  00A476  D018               	goto	l1855
 17402  00A478  0E01               	movlw	1
 17403  00A47A  6E0C               	movwf	___lwmod@counter,c
 17404  00A47C  D004               	goto	l1850
 17405  00A47E  90D8               	bcf	status,0,c
 17406  00A480  360A               	rlcf	___lwmod@divisor,f,c
 17407  00A482  360B               	rlcf	___lwmod@divisor+1,f,c
 17408  00A484  2A0C               	incf	___lwmod@counter,f,c
 17409  00A486                     l1850:
 17410  00A486  AE0B               	btfss	___lwmod@divisor+1,7,c
 17411  00A488  D7FA               	goto	l1851
 17412  00A48A                     u4740:
 17413  00A48A  500A               	movf	___lwmod@divisor,w,c
 17414  00A48C  5C08               	subwf	___lwmod@dividend,w,c
 17415  00A48E  500B               	movf	___lwmod@divisor+1,w,c
 17416  00A490  5809               	subwfb	___lwmod@dividend+1,w,c
 17417  00A492  A0D8               	btfss	status,0,c
 17418  00A494  D004               	goto	l1854
 17419  00A496  500A               	movf	___lwmod@divisor,w,c
 17420  00A498  5E08               	subwf	___lwmod@dividend,f,c
 17421  00A49A  500B               	movf	___lwmod@divisor+1,w,c
 17422  00A49C  5A09               	subwfb	___lwmod@dividend+1,f,c
 17423  00A49E                     l1854:
 17424  00A49E  90D8               	bcf	status,0,c
 17425  00A4A0  320B               	rrcf	___lwmod@divisor+1,f,c
 17426  00A4A2  320A               	rrcf	___lwmod@divisor,f,c
 17427  00A4A4  2E0C               	decfsz	___lwmod@counter,f,c
 17428  00A4A6  D7F1               	goto	u4740
 17429  00A4A8                     l1855:
 17430  00A4A8  C008  F008         	movff	___lwmod@dividend,?___lwmod
 17431  00A4AC  C009  F009         	movff	___lwmod@dividend+1,?___lwmod+1
 17432  00A4B0  0012               	return		;funcret
 17433  00A4B2                     __end_of___lwmod:
 17434                           	opt stack 0
 17435                           tblptru	equ	0xFF8
 17436                           tblptrh	equ	0xFF7
 17437                           tblptrl	equ	0xFF6
 17438                           tablat	equ	0xFF5
 17439                           prodh	equ	0xFF4
 17440                           prodl	equ	0xFF3
 17441                           intcon	equ	0xFF2
 17442                           indf0	equ	0xFEF
 17443                           postinc0	equ	0xFEE
 17444                           fsr0h	equ	0xFEA
 17445                           fsr0l	equ	0xFE9
 17446                           wreg	equ	0xFE8
 17447                           postinc1	equ	0xFE6
 17448                           postdec1	equ	0xFE5
 17449                           plusw1	equ	0xFE3
 17450                           fsr1h	equ	0xFE2
 17451                           fsr1l	equ	0xFE1
 17452                           indf2	equ	0xFDF
 17453                           postinc2	equ	0xFDE
 17454                           postdec2	equ	0xFDD
 17455                           plusw2	equ	0xFDB
 17456                           fsr2h	equ	0xFDA
 17457                           fsr2l	equ	0xFD9
 17458                           status	equ	0xFD8
 17459                           
 17460 ;; *************** function ___lwdiv *****************
 17461 ;; Defined at:
 17462 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwdiv.c"
 17463 ;; Parameters:    Size  Location     Type
 17464 ;;  dividend        2    0[COMRAM] unsigned int 
 17465 ;;  divisor         2    2[COMRAM] unsigned int 
 17466 ;; Auto vars:     Size  Location     Type
 17467 ;;  quotient        2    4[COMRAM] unsigned int 
 17468 ;;  counter         1    6[COMRAM] unsigned char 
 17469 ;; Return value:  Size  Location     Type
 17470 ;;                  2    0[COMRAM] unsigned int 
 17471 ;; Registers used:
 17472 ;;		wreg, status,2, status,0
 17473 ;; Tracked objects:
 17474 ;;		On entry : 0/0
 17475 ;;		On exit  : 0/0
 17476 ;;		Unchanged: 0/0
 17477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17478 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17479 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17480 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17481 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17482 ;;Total ram usage:        7 bytes
 17483 ;; Hardware stack levels used:    1
 17484 ;; This function calls:
 17485 ;;		Nothing
 17486 ;; This function is called by:
 17487 ;;		_printf
 17488 ;; This function uses a non-reentrant model
 17489 ;;
 17490                           
 17491                           	psect	text25
 17492  00A4FE                     __ptext25:
 17493                           	opt stack 0
 17494  00A4FE                     ___lwdiv:
 17495                           	opt stack 29
 17496                           
 17497                           ;incstack = 0
 17498  00A4FE  0E00               	movlw	0
 17499  00A500  6E06               	movwf	___lwdiv@quotient+1,c
 17500  00A502  0E00               	movlw	0
 17501  00A504  6E05               	movwf	___lwdiv@quotient,c
 17502  00A506  5003               	movf	___lwdiv@divisor,w,c
 17503  00A508  1004               	iorwf	___lwdiv@divisor+1,w,c
 17504  00A50A  B4D8               	btfsc	status,2,c
 17505  00A50C  D01C               	goto	l1845
 17506  00A50E  0E01               	movlw	1
 17507  00A510  6E07               	movwf	___lwdiv@counter,c
 17508  00A512  D004               	goto	l1840
 17509  00A514  90D8               	bcf	status,0,c
 17510  00A516  3603               	rlcf	___lwdiv@divisor,f,c
 17511  00A518  3604               	rlcf	___lwdiv@divisor+1,f,c
 17512  00A51A  2A07               	incf	___lwdiv@counter,f,c
 17513  00A51C                     l1840:
 17514  00A51C  AE04               	btfss	___lwdiv@divisor+1,7,c
 17515  00A51E  D7FA               	goto	l1841
 17516  00A520                     u4710:
 17517  00A520  90D8               	bcf	status,0,c
 17518  00A522  3605               	rlcf	___lwdiv@quotient,f,c
 17519  00A524  3606               	rlcf	___lwdiv@quotient+1,f,c
 17520  00A526  5003               	movf	___lwdiv@divisor,w,c
 17521  00A528  5C01               	subwf	___lwdiv@dividend,w,c
 17522  00A52A  5004               	movf	___lwdiv@divisor+1,w,c
 17523  00A52C  5802               	subwfb	___lwdiv@dividend+1,w,c
 17524  00A52E  A0D8               	btfss	status,0,c
 17525  00A530  D005               	goto	l1844
 17526  00A532  5003               	movf	___lwdiv@divisor,w,c
 17527  00A534  5E01               	subwf	___lwdiv@dividend,f,c
 17528  00A536  5004               	movf	___lwdiv@divisor+1,w,c
 17529  00A538  5A02               	subwfb	___lwdiv@dividend+1,f,c
 17530  00A53A  8005               	bsf	___lwdiv@quotient,0,c
 17531  00A53C                     l1844:
 17532  00A53C  90D8               	bcf	status,0,c
 17533  00A53E  3204               	rrcf	___lwdiv@divisor+1,f,c
 17534  00A540  3203               	rrcf	___lwdiv@divisor,f,c
 17535  00A542  2E07               	decfsz	___lwdiv@counter,f,c
 17536  00A544  D7ED               	goto	u4710
 17537  00A546                     l1845:
 17538  00A546  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
 17539  00A54A  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
 17540  00A54E  0012               	return		;funcret
 17541  00A550                     __end_of___lwdiv:
 17542                           	opt stack 0
 17543                           tblptru	equ	0xFF8
 17544                           tblptrh	equ	0xFF7
 17545                           tblptrl	equ	0xFF6
 17546                           tablat	equ	0xFF5
 17547                           prodh	equ	0xFF4
 17548                           prodl	equ	0xFF3
 17549                           intcon	equ	0xFF2
 17550                           indf0	equ	0xFEF
 17551                           postinc0	equ	0xFEE
 17552                           fsr0h	equ	0xFEA
 17553                           fsr0l	equ	0xFE9
 17554                           wreg	equ	0xFE8
 17555                           postinc1	equ	0xFE6
 17556                           postdec1	equ	0xFE5
 17557                           plusw1	equ	0xFE3
 17558                           fsr1h	equ	0xFE2
 17559                           fsr1l	equ	0xFE1
 17560                           indf2	equ	0xFDF
 17561                           postinc2	equ	0xFDE
 17562                           postdec2	equ	0xFDD
 17563                           plusw2	equ	0xFDB
 17564                           fsr2h	equ	0xFDA
 17565                           fsr2l	equ	0xFD9
 17566                           status	equ	0xFD8
 17567                           
 17568 ;; *************** function _loadRTC *****************
 17569 ;; Defined at:
 17570 ;;		line 29 in file "RTC.c"
 17571 ;; Parameters:    Size  Location     Type
 17572 ;;		None
 17573 ;; Auto vars:     Size  Location     Type
 17574 ;;  i               2   22[COMRAM] int 
 17575 ;; Return value:  Size  Location     Type
 17576 ;;                  1    wreg      void 
 17577 ;; Registers used:
 17578 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17579 ;; Tracked objects:
 17580 ;;		On entry : 0/0
 17581 ;;		On exit  : 0/0
 17582 ;;		Unchanged: 0/0
 17583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17584 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17585 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17586 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17587 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17588 ;;Total ram usage:        3 bytes
 17589 ;; Hardware stack levels used:    1
 17590 ;; Hardware stack levels required when called:    2
 17591 ;; This function calls:
 17592 ;;		_I2C_Master_Init
 17593 ;;		_I2C_Master_Start
 17594 ;;		_I2C_Master_Stop
 17595 ;;		_I2C_Master_Write
 17596 ;; This function is called by:
 17597 ;;		_main
 17598 ;; This function uses a non-reentrant model
 17599 ;;
 17600                           
 17601                           	psect	text26
 17602  00A674                     __ptext26:
 17603                           	opt stack 0
 17604  00A674                     _loadRTC:
 17605                           	opt stack 28
 17606                           
 17607                           ;RTC.c: 31: I2C_Master_Init(10000);
 17608                           
 17609                           ;incstack = 0
 17610  00A674  0E10               	movlw	16
 17611  00A676  6E0E               	movwf	I2C_Master_Init@clockFreq,c
 17612  00A678  0E27               	movlw	39
 17613  00A67A  6E0F               	movwf	I2C_Master_Init@clockFreq+1,c
 17614  00A67C  0E00               	movlw	0
 17615  00A67E  6E10               	movwf	I2C_Master_Init@clockFreq+2,c
 17616  00A680  0E00               	movlw	0
 17617  00A682  6E11               	movwf	I2C_Master_Init@clockFreq+3,c
 17618  00A684  ECA8  F052         	call	_I2C_Master_Init	;wreg free
 17619                           
 17620                           ;RTC.c: 33: (INTCONbits.GIE = 0);
 17621  00A688  9EF2               	bcf	intcon,7,c	;volatile
 17622                           
 17623                           ;RTC.c: 35: I2C_Master_Start();
 17624  00A68A  EC28  F051         	call	_I2C_Master_Start	;wreg free
 17625                           
 17626                           ;RTC.c: 36: I2C_Master_Write(0b11010000);
 17627  00A68E  0E00               	movlw	0
 17628  00A690  6E03               	movwf	I2C_Master_Write@byteToWrite+1,c
 17629  00A692  0ED0               	movlw	208
 17630  00A694  6E02               	movwf	I2C_Master_Write@byteToWrite,c
 17631  00A696  EC30  F051         	call	_I2C_Master_Write	;wreg free
 17632                           
 17633                           ;RTC.c: 37: I2C_Master_Write(0x00);
 17634  00A69A  0E00               	movlw	0
 17635  00A69C  6E03               	movwf	I2C_Master_Write@byteToWrite+1,c
 17636  00A69E  0E00               	movlw	0
 17637  00A6A0  6E02               	movwf	I2C_Master_Write@byteToWrite,c
 17638  00A6A2  EC30  F051         	call	_I2C_Master_Write	;wreg free
 17639                           
 17640                           ;RTC.c: 38: for(int i = 0; i<7; i++){
 17641  00A6A6  0E00               	movlw	0
 17642  00A6A8  6E18               	movwf	loadRTC@i+1,c
 17643  00A6AA  0E00               	movlw	0
 17644  00A6AC  6E17               	movwf	loadRTC@i,c
 17645  00A6AE                     l6436:
 17646  00A6AE  BE18               	btfsc	loadRTC@i+1,7,c
 17647  00A6B0  D006               	goto	l899
 17648  00A6B2  5018               	movf	loadRTC@i+1,w,c
 17649  00A6B4  E114               	bnz	l6446
 17650  00A6B6  0E07               	movlw	7
 17651  00A6B8  5C17               	subwf	loadRTC@i,w,c
 17652  00A6BA  B0D8               	btfsc	status,0,c
 17653  00A6BC  D010               	goto	u5860
 17654  00A6BE                     l899:
 17655                           
 17656                           ;RTC.c: 39: I2C_Master_Write(time[i]);
 17657  00A6BE  0EB7               	movlw	low _time
 17658  00A6C0  2417               	addwf	loadRTC@i,w,c
 17659  00A6C2  6ED9               	movwf	fsr2l,c
 17660  00A6C4  0E02               	movlw	high _time
 17661  00A6C6  2018               	addwfc	loadRTC@i+1,w,c
 17662  00A6C8  6EDA               	movwf	fsr2h,c
 17663  00A6CA  50DF               	movf	indf2,w,c
 17664  00A6CC  6E16               	movwf	??_loadRTC& (0+255),c
 17665  00A6CE  5016               	movf	??_loadRTC,w,c
 17666  00A6D0  6E02               	movwf	I2C_Master_Write@byteToWrite,c
 17667  00A6D2  6A03               	clrf	I2C_Master_Write@byteToWrite+1,c
 17668  00A6D4  EC30  F051         	call	_I2C_Master_Write	;wreg free
 17669  00A6D8  4A17               	infsnz	loadRTC@i,f,c
 17670  00A6DA  2A18               	incf	loadRTC@i+1,f,c
 17671  00A6DC  D7E8               	goto	l6436
 17672  00A6DE                     u5860:
 17673  00A6DE                     l6446:
 17674                           
 17675                           ;RTC.c: 40: }
 17676                           ;RTC.c: 41: I2C_Master_Stop();
 17677  00A6DE  EC2C  F051         	call	_I2C_Master_Stop	;wreg free
 17678                           
 17679                           ;RTC.c: 42: (INTCONbits.GIE = 1);
 17680  00A6E2  8EF2               	bsf	intcon,7,c	;volatile
 17681  00A6E4  0012               	return		;funcret
 17682  00A6E6                     __end_of_loadRTC:
 17683                           	opt stack 0
 17684                           tblptru	equ	0xFF8
 17685                           tblptrh	equ	0xFF7
 17686                           tblptrl	equ	0xFF6
 17687                           tablat	equ	0xFF5
 17688                           prodh	equ	0xFF4
 17689                           prodl	equ	0xFF3
 17690                           intcon	equ	0xFF2
 17691                           indf0	equ	0xFEF
 17692                           postinc0	equ	0xFEE
 17693                           fsr0h	equ	0xFEA
 17694                           fsr0l	equ	0xFE9
 17695                           wreg	equ	0xFE8
 17696                           postinc1	equ	0xFE6
 17697                           postdec1	equ	0xFE5
 17698                           plusw1	equ	0xFE3
 17699                           fsr1h	equ	0xFE2
 17700                           fsr1l	equ	0xFE1
 17701                           indf2	equ	0xFDF
 17702                           postinc2	equ	0xFDE
 17703                           postdec2	equ	0xFDD
 17704                           plusw2	equ	0xFDB
 17705                           fsr2h	equ	0xFDA
 17706                           fsr2l	equ	0xFD9
 17707                           status	equ	0xFD8
 17708                           
 17709 ;; *************** function _I2C_Master_Write *****************
 17710 ;; Defined at:
 17711 ;;		line 116 in file "I2C.c"
 17712 ;; Parameters:    Size  Location     Type
 17713 ;;  byteToWrite     2    1[COMRAM] unsigned int 
 17714 ;; Auto vars:     Size  Location     Type
 17715 ;;		None
 17716 ;; Return value:  Size  Location     Type
 17717 ;;                  1    wreg      void 
 17718 ;; Registers used:
 17719 ;;		wreg, status,2, status,0, cstack
 17720 ;; Tracked objects:
 17721 ;;		On entry : 0/0
 17722 ;;		On exit  : 0/0
 17723 ;;		Unchanged: 0/0
 17724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17725 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17726 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17727 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17728 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17729 ;;Total ram usage:        2 bytes
 17730 ;; Hardware stack levels used:    1
 17731 ;; Hardware stack levels required when called:    1
 17732 ;; This function calls:
 17733 ;;		_I2C_Master_Wait
 17734 ;; This function is called by:
 17735 ;;		_main
 17736 ;;		_loadRTC
 17737 ;;		_set_total_init_time
 17738 ;;		_comp_time_difference
 17739 ;;		_getRTC
 17740 ;;		_send_arduino
 17741 ;; This function uses a non-reentrant model
 17742 ;;
 17743                           
 17744                           	psect	text27
 17745  00A260                     __ptext27:
 17746                           	opt stack 0
 17747  00A260                     _I2C_Master_Write:
 17748                           	opt stack 28
 17749                           
 17750                           ;I2C.c: 124: I2C_Master_Wait();
 17751                           
 17752                           ;incstack = 0
 17753  00A260  EC35  F051         	call	_I2C_Master_Wait	;wreg free
 17754                           
 17755                           ;I2C.c: 125: SSPBUF = byteToWrite;
 17756  00A264  C002  FFC9         	movff	I2C_Master_Write@byteToWrite,4041	;volatile
 17757  00A268  0012               	return		;funcret
 17758  00A26A                     __end_of_I2C_Master_Write:
 17759                           	opt stack 0
 17760                           tblptru	equ	0xFF8
 17761                           tblptrh	equ	0xFF7
 17762                           tblptrl	equ	0xFF6
 17763                           tablat	equ	0xFF5
 17764                           prodh	equ	0xFF4
 17765                           prodl	equ	0xFF3
 17766                           intcon	equ	0xFF2
 17767                           indf0	equ	0xFEF
 17768                           postinc0	equ	0xFEE
 17769                           fsr0h	equ	0xFEA
 17770                           fsr0l	equ	0xFE9
 17771                           wreg	equ	0xFE8
 17772                           postinc1	equ	0xFE6
 17773                           postdec1	equ	0xFE5
 17774                           plusw1	equ	0xFE3
 17775                           fsr1h	equ	0xFE2
 17776                           fsr1l	equ	0xFE1
 17777                           indf2	equ	0xFDF
 17778                           postinc2	equ	0xFDE
 17779                           postdec2	equ	0xFDD
 17780                           plusw2	equ	0xFDB
 17781                           fsr2h	equ	0xFDA
 17782                           fsr2l	equ	0xFD9
 17783                           status	equ	0xFD8
 17784                           
 17785 ;; *************** function _I2C_Master_Stop *****************
 17786 ;; Defined at:
 17787 ;;		line 103 in file "I2C.c"
 17788 ;; Parameters:    Size  Location     Type
 17789 ;;		None
 17790 ;; Auto vars:     Size  Location     Type
 17791 ;;		None
 17792 ;; Return value:  Size  Location     Type
 17793 ;;                  1    wreg      void 
 17794 ;; Registers used:
 17795 ;;		wreg, status,2, status,0, cstack
 17796 ;; Tracked objects:
 17797 ;;		On entry : 0/0
 17798 ;;		On exit  : 0/0
 17799 ;;		Unchanged: 0/0
 17800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17801 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17802 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17803 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17804 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17805 ;;Total ram usage:        0 bytes
 17806 ;; Hardware stack levels used:    1
 17807 ;; Hardware stack levels required when called:    1
 17808 ;; This function calls:
 17809 ;;		_I2C_Master_Wait
 17810 ;; This function is called by:
 17811 ;;		_main
 17812 ;;		_loadRTC
 17813 ;;		_set_total_init_time
 17814 ;;		_comp_time_difference
 17815 ;;		_getRTC
 17816 ;;		_send_arduino
 17817 ;; This function uses a non-reentrant model
 17818 ;;
 17819                           
 17820                           	psect	text28
 17821  00A258                     __ptext28:
 17822                           	opt stack 0
 17823  00A258                     _I2C_Master_Stop:
 17824                           	opt stack 28
 17825                           
 17826                           ;I2C.c: 112: I2C_Master_Wait();
 17827                           
 17828                           ;incstack = 0
 17829  00A258  EC35  F051         	call	_I2C_Master_Wait	;wreg free
 17830                           
 17831                           ;I2C.c: 113: SSPCON2bits.PEN = 1;
 17832  00A25C  84C5               	bsf	4037,2,c	;volatile
 17833  00A25E  0012               	return		;funcret
 17834  00A260                     __end_of_I2C_Master_Stop:
 17835                           	opt stack 0
 17836                           tblptru	equ	0xFF8
 17837                           tblptrh	equ	0xFF7
 17838                           tblptrl	equ	0xFF6
 17839                           tablat	equ	0xFF5
 17840                           prodh	equ	0xFF4
 17841                           prodl	equ	0xFF3
 17842                           intcon	equ	0xFF2
 17843                           indf0	equ	0xFEF
 17844                           postinc0	equ	0xFEE
 17845                           fsr0h	equ	0xFEA
 17846                           fsr0l	equ	0xFE9
 17847                           wreg	equ	0xFE8
 17848                           postinc1	equ	0xFE6
 17849                           postdec1	equ	0xFE5
 17850                           plusw1	equ	0xFE3
 17851                           fsr1h	equ	0xFE2
 17852                           fsr1l	equ	0xFE1
 17853                           indf2	equ	0xFDF
 17854                           postinc2	equ	0xFDE
 17855                           postdec2	equ	0xFDD
 17856                           plusw2	equ	0xFDB
 17857                           fsr2h	equ	0xFDA
 17858                           fsr2l	equ	0xFD9
 17859                           status	equ	0xFD8
 17860                           
 17861 ;; *************** function _I2C_Master_Start *****************
 17862 ;; Defined at:
 17863 ;;		line 77 in file "I2C.c"
 17864 ;; Parameters:    Size  Location     Type
 17865 ;;		None
 17866 ;; Auto vars:     Size  Location     Type
 17867 ;;		None
 17868 ;; Return value:  Size  Location     Type
 17869 ;;                  1    wreg      void 
 17870 ;; Registers used:
 17871 ;;		wreg, status,2, status,0, cstack
 17872 ;; Tracked objects:
 17873 ;;		On entry : 0/0
 17874 ;;		On exit  : 0/0
 17875 ;;		Unchanged: 0/0
 17876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17877 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17878 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17879 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17880 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17881 ;;Total ram usage:        0 bytes
 17882 ;; Hardware stack levels used:    1
 17883 ;; Hardware stack levels required when called:    1
 17884 ;; This function calls:
 17885 ;;		_I2C_Master_Wait
 17886 ;; This function is called by:
 17887 ;;		_main
 17888 ;;		_loadRTC
 17889 ;;		_set_total_init_time
 17890 ;;		_comp_time_difference
 17891 ;;		_getRTC
 17892 ;;		_send_arduino
 17893 ;; This function uses a non-reentrant model
 17894 ;;
 17895                           
 17896                           	psect	text29
 17897  00A250                     __ptext29:
 17898                           	opt stack 0
 17899  00A250                     _I2C_Master_Start:
 17900                           	opt stack 28
 17901                           
 17902                           ;I2C.c: 86: I2C_Master_Wait();
 17903                           
 17904                           ;incstack = 0
 17905  00A250  EC35  F051         	call	_I2C_Master_Wait	;wreg free
 17906                           
 17907                           ;I2C.c: 87: SSPCON2bits.SEN = 1;
 17908  00A254  80C5               	bsf	4037,0,c	;volatile
 17909  00A256  0012               	return		;funcret
 17910  00A258                     __end_of_I2C_Master_Start:
 17911                           	opt stack 0
 17912                           tblptru	equ	0xFF8
 17913                           tblptrh	equ	0xFF7
 17914                           tblptrl	equ	0xFF6
 17915                           tablat	equ	0xFF5
 17916                           prodh	equ	0xFF4
 17917                           prodl	equ	0xFF3
 17918                           intcon	equ	0xFF2
 17919                           indf0	equ	0xFEF
 17920                           postinc0	equ	0xFEE
 17921                           fsr0h	equ	0xFEA
 17922                           fsr0l	equ	0xFE9
 17923                           wreg	equ	0xFE8
 17924                           postinc1	equ	0xFE6
 17925                           postdec1	equ	0xFE5
 17926                           plusw1	equ	0xFE3
 17927                           fsr1h	equ	0xFE2
 17928                           fsr1l	equ	0xFE1
 17929                           indf2	equ	0xFDF
 17930                           postinc2	equ	0xFDE
 17931                           postdec2	equ	0xFDD
 17932                           plusw2	equ	0xFDB
 17933                           fsr2h	equ	0xFDA
 17934                           fsr2l	equ	0xFD9
 17935                           status	equ	0xFD8
 17936                           
 17937 ;; *************** function _I2C_Master_Wait *****************
 17938 ;; Defined at:
 17939 ;;		line 59 in file "I2C.c"
 17940 ;; Parameters:    Size  Location     Type
 17941 ;;		None
 17942 ;; Auto vars:     Size  Location     Type
 17943 ;;		None
 17944 ;; Return value:  Size  Location     Type
 17945 ;;                  1    wreg      void 
 17946 ;; Registers used:
 17947 ;;		wreg, status,2, status,0
 17948 ;; Tracked objects:
 17949 ;;		On entry : 0/0
 17950 ;;		On exit  : 0/0
 17951 ;;		Unchanged: 0/0
 17952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17953 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17954 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17955 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17956 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17957 ;;Total ram usage:        1 bytes
 17958 ;; Hardware stack levels used:    1
 17959 ;; This function calls:
 17960 ;;		Nothing
 17961 ;; This function is called by:
 17962 ;;		_I2C_Master_Start
 17963 ;;		_I2C_Master_Stop
 17964 ;;		_I2C_Master_Write
 17965 ;;		_I2C_Master_Read
 17966 ;;		_I2C_Master_RepeatedStart
 17967 ;; This function uses a non-reentrant model
 17968 ;;
 17969                           
 17970                           	psect	text30
 17971  00A26A                     __ptext30:
 17972                           	opt stack 0
 17973  00A26A                     _I2C_Master_Wait:
 17974                           	opt stack 28
 17975                           
 17976                           ;I2C.c: 74: while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
 17977                           
 17978                           ;incstack = 0
 17979  00A26A  B4C7               	btfsc	4039,2,c	;volatile
 17980  00A26C  D7FE               	goto	_I2C_Master_Wait
 17981  00A26E  CFC5 F001          	movff	4037,??_I2C_Master_Wait	;volatile
 17982  00A272  0E1F               	movlw	31
 17983  00A274  1601               	andwf	??_I2C_Master_Wait,f,c
 17984  00A276  B4D8               	btfsc	status,2,c
 17985  00A278  0012               	return	
 17986  00A27A  D7F7               	goto	_I2C_Master_Wait
 17987  00A27C                     __end_of_I2C_Master_Wait:
 17988                           	opt stack 0
 17989                           tblptru	equ	0xFF8
 17990                           tblptrh	equ	0xFF7
 17991                           tblptrl	equ	0xFF6
 17992                           tablat	equ	0xFF5
 17993                           prodh	equ	0xFF4
 17994                           prodl	equ	0xFF3
 17995                           intcon	equ	0xFF2
 17996                           indf0	equ	0xFEF
 17997                           postinc0	equ	0xFEE
 17998                           fsr0h	equ	0xFEA
 17999                           fsr0l	equ	0xFE9
 18000                           wreg	equ	0xFE8
 18001                           postinc1	equ	0xFE6
 18002                           postdec1	equ	0xFE5
 18003                           plusw1	equ	0xFE3
 18004                           fsr1h	equ	0xFE2
 18005                           fsr1l	equ	0xFE1
 18006                           indf2	equ	0xFDF
 18007                           postinc2	equ	0xFDE
 18008                           postdec2	equ	0xFDD
 18009                           plusw2	equ	0xFDB
 18010                           fsr2h	equ	0xFDA
 18011                           fsr2l	equ	0xFD9
 18012                           status	equ	0xFD8
 18013                           
 18014 ;; *************** function _I2C_Master_Init *****************
 18015 ;; Defined at:
 18016 ;;		line 22 in file "I2C.c"
 18017 ;; Parameters:    Size  Location     Type
 18018 ;;  clockFreq       4   13[COMRAM] const unsigned long 
 18019 ;; Auto vars:     Size  Location     Type
 18020 ;;		None
 18021 ;; Return value:  Size  Location     Type
 18022 ;;                  1    wreg      void 
 18023 ;; Registers used:
 18024 ;;		wreg, status,2, status,0, cstack
 18025 ;; Tracked objects:
 18026 ;;		On entry : 0/0
 18027 ;;		On exit  : 0/0
 18028 ;;		Unchanged: 0/0
 18029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18030 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18031 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18032 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18033 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18034 ;;Total ram usage:        8 bytes
 18035 ;; Hardware stack levels used:    1
 18036 ;; Hardware stack levels required when called:    1
 18037 ;; This function calls:
 18038 ;;		___lldiv
 18039 ;; This function is called by:
 18040 ;;		_main
 18041 ;;		_loadRTC
 18042 ;;		_set_total_init_time
 18043 ;;		_comp_time_difference
 18044 ;;		_getRTC
 18045 ;;		_send_arduino
 18046 ;; This function uses a non-reentrant model
 18047 ;;
 18048                           
 18049                           	psect	text31
 18050  00A550                     __ptext31:
 18051                           	opt stack 0
 18052  00A550                     _I2C_Master_Init:
 18053                           	opt stack 28
 18054                           
 18055                           ;I2C.c: 42: SSPCON1bits.SSPEN = 0;
 18056                           
 18057                           ;incstack = 0
 18058  00A550  9AC6               	bcf	4038,5,c	;volatile
 18059                           
 18060                           ;I2C.c: 45: TRISCbits.TRISC3 = 1;
 18061  00A552  8694               	bsf	3988,3,c	;volatile
 18062                           
 18063                           ;I2C.c: 46: TRISCbits.TRISC4 = 1;
 18064  00A554  8894               	bsf	3988,4,c	;volatile
 18065                           
 18066                           ;I2C.c: 49: SSPSTAT = 0b10000000;
 18067  00A556  0E80               	movlw	128
 18068  00A558  6EC7               	movwf	4039,c	;volatile
 18069                           
 18070                           ;I2C.c: 50: SSPCON1 = 0b00101000;
 18071  00A55A  0E28               	movlw	40
 18072  00A55C  6EC6               	movwf	4038,c	;volatile
 18073                           
 18074                           ;I2C.c: 51: SSPCON2 = 0b00000000;
 18075  00A55E  0E00               	movlw	0
 18076  00A560  6EC5               	movwf	4037,c	;volatile
 18077                           
 18078                           ;I2C.c: 56: SSPADD = (40000000 / (4 * clockFreq)) - 1;
 18079  00A562  0E00               	movlw	0
 18080  00A564  6E01               	movwf	___lldiv@dividend,c
 18081  00A566  0E5A               	movlw	90
 18082  00A568  6E02               	movwf	___lldiv@dividend+1,c
 18083  00A56A  0E62               	movlw	98
 18084  00A56C  6E03               	movwf	___lldiv@dividend+2,c
 18085  00A56E  0E02               	movlw	2
 18086  00A570  6E04               	movwf	___lldiv@dividend+3,c
 18087  00A572  C00E  F012         	movff	I2C_Master_Init@clockFreq,??_I2C_Master_Init
 18088  00A576  C00F  F013         	movff	I2C_Master_Init@clockFreq+1,??_I2C_Master_Init+1
 18089  00A57A  C010  F014         	movff	I2C_Master_Init@clockFreq+2,??_I2C_Master_Init+2
 18090  00A57E  C011  F015         	movff	I2C_Master_Init@clockFreq+3,??_I2C_Master_Init+3
 18091  00A582  0E02               	movlw	2
 18092  00A584                     u4365:
 18093  00A584  90D8               	bcf	status,0,c
 18094  00A586  3612               	rlcf	??_I2C_Master_Init,f,c
 18095  00A588  3613               	rlcf	??_I2C_Master_Init+1,f,c
 18096  00A58A  3614               	rlcf	??_I2C_Master_Init+2,f,c
 18097  00A58C  3615               	rlcf	??_I2C_Master_Init+3,f,c
 18098  00A58E  2EE8               	decfsz	wreg,f,c
 18099  00A590  D7F9               	goto	u4365
 18100  00A592  C012  F005         	movff	??_I2C_Master_Init,___lldiv@divisor
 18101  00A596  C013  F006         	movff	??_I2C_Master_Init+1,___lldiv@divisor+1
 18102  00A59A  C014  F007         	movff	??_I2C_Master_Init+2,___lldiv@divisor+2
 18103  00A59E  C015  F008         	movff	??_I2C_Master_Init+3,___lldiv@divisor+3
 18104  00A5A2  EC73  F053         	call	___lldiv	;wreg free
 18105  00A5A6  0401               	decf	?___lldiv,w,c
 18106  00A5A8  6EC8               	movwf	4040,c	;volatile
 18107  00A5AA  0012               	return		;funcret
 18108  00A5AC                     __end_of_I2C_Master_Init:
 18109                           	opt stack 0
 18110                           tblptru	equ	0xFF8
 18111                           tblptrh	equ	0xFF7
 18112                           tblptrl	equ	0xFF6
 18113                           tablat	equ	0xFF5
 18114                           prodh	equ	0xFF4
 18115                           prodl	equ	0xFF3
 18116                           intcon	equ	0xFF2
 18117                           indf0	equ	0xFEF
 18118                           postinc0	equ	0xFEE
 18119                           fsr0h	equ	0xFEA
 18120                           fsr0l	equ	0xFE9
 18121                           wreg	equ	0xFE8
 18122                           postinc1	equ	0xFE6
 18123                           postdec1	equ	0xFE5
 18124                           plusw1	equ	0xFE3
 18125                           fsr1h	equ	0xFE2
 18126                           fsr1l	equ	0xFE1
 18127                           indf2	equ	0xFDF
 18128                           postinc2	equ	0xFDE
 18129                           postdec2	equ	0xFDD
 18130                           plusw2	equ	0xFDB
 18131                           fsr2h	equ	0xFDA
 18132                           fsr2l	equ	0xFD9
 18133                           status	equ	0xFD8
 18134                           
 18135 ;; *************** function ___lldiv *****************
 18136 ;; Defined at:
 18137 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lldiv.c"
 18138 ;; Parameters:    Size  Location     Type
 18139 ;;  dividend        4    0[COMRAM] unsigned long 
 18140 ;;  divisor         4    4[COMRAM] unsigned long 
 18141 ;; Auto vars:     Size  Location     Type
 18142 ;;  quotient        4    8[COMRAM] unsigned long 
 18143 ;;  counter         1   12[COMRAM] unsigned char 
 18144 ;; Return value:  Size  Location     Type
 18145 ;;                  4    0[COMRAM] unsigned long 
 18146 ;; Registers used:
 18147 ;;		wreg, status,2, status,0
 18148 ;; Tracked objects:
 18149 ;;		On entry : 0/0
 18150 ;;		On exit  : 0/0
 18151 ;;		Unchanged: 0/0
 18152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18153 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18154 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18155 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18156 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18157 ;;Total ram usage:       13 bytes
 18158 ;; Hardware stack levels used:    1
 18159 ;; This function calls:
 18160 ;;		Nothing
 18161 ;; This function is called by:
 18162 ;;		_I2C_Master_Init
 18163 ;; This function uses a non-reentrant model
 18164 ;;
 18165                           
 18166                           	psect	text32
 18167  00A6E6                     __ptext32:
 18168                           	opt stack 0
 18169  00A6E6                     ___lldiv:
 18170                           	opt stack 28
 18171                           
 18172                           ;incstack = 0
 18173  00A6E6  0E00               	movlw	0
 18174  00A6E8  6E09               	movwf	___lldiv@quotient,c
 18175  00A6EA  0E00               	movlw	0
 18176  00A6EC  6E0A               	movwf	___lldiv@quotient+1,c
 18177  00A6EE  0E00               	movlw	0
 18178  00A6F0  6E0B               	movwf	___lldiv@quotient+2,c
 18179  00A6F2  0E00               	movlw	0
 18180  00A6F4  6E0C               	movwf	___lldiv@quotient+3,c
 18181  00A6F6  5005               	movf	___lldiv@divisor,w,c
 18182  00A6F8  1006               	iorwf	___lldiv@divisor+1,w,c
 18183  00A6FA  1007               	iorwf	___lldiv@divisor+2,w,c
 18184  00A6FC  1008               	iorwf	___lldiv@divisor+3,w,c
 18185  00A6FE  B4D8               	btfsc	status,2,c
 18186  00A700  D02A               	goto	l1792
 18187  00A702  0E01               	movlw	1
 18188  00A704  6E0D               	movwf	___lldiv@counter,c
 18189  00A706  D006               	goto	l1787
 18190  00A708  90D8               	bcf	status,0,c
 18191  00A70A  3605               	rlcf	___lldiv@divisor,f,c
 18192  00A70C  3606               	rlcf	___lldiv@divisor+1,f,c
 18193  00A70E  3607               	rlcf	___lldiv@divisor+2,f,c
 18194  00A710  3608               	rlcf	___lldiv@divisor+3,f,c
 18195  00A712  2A0D               	incf	___lldiv@counter,f,c
 18196  00A714                     l1787:
 18197  00A714  AE08               	btfss	___lldiv@divisor+3,7,c
 18198  00A716  D7F8               	goto	l1788
 18199  00A718                     u4340:
 18200  00A718  90D8               	bcf	status,0,c
 18201  00A71A  3609               	rlcf	___lldiv@quotient,f,c
 18202  00A71C  360A               	rlcf	___lldiv@quotient+1,f,c
 18203  00A71E  360B               	rlcf	___lldiv@quotient+2,f,c
 18204  00A720  360C               	rlcf	___lldiv@quotient+3,f,c
 18205  00A722  5005               	movf	___lldiv@divisor,w,c
 18206  00A724  5C01               	subwf	___lldiv@dividend,w,c
 18207  00A726  5006               	movf	___lldiv@divisor+1,w,c
 18208  00A728  5802               	subwfb	___lldiv@dividend+1,w,c
 18209  00A72A  5007               	movf	___lldiv@divisor+2,w,c
 18210  00A72C  5803               	subwfb	___lldiv@dividend+2,w,c
 18211  00A72E  5008               	movf	___lldiv@divisor+3,w,c
 18212  00A730  5804               	subwfb	___lldiv@dividend+3,w,c
 18213  00A732  A0D8               	btfss	status,0,c
 18214  00A734  D009               	goto	l1791
 18215  00A736  5005               	movf	___lldiv@divisor,w,c
 18216  00A738  5E01               	subwf	___lldiv@dividend,f,c
 18217  00A73A  5006               	movf	___lldiv@divisor+1,w,c
 18218  00A73C  5A02               	subwfb	___lldiv@dividend+1,f,c
 18219  00A73E  5007               	movf	___lldiv@divisor+2,w,c
 18220  00A740  5A03               	subwfb	___lldiv@dividend+2,f,c
 18221  00A742  5008               	movf	___lldiv@divisor+3,w,c
 18222  00A744  5A04               	subwfb	___lldiv@dividend+3,f,c
 18223  00A746  8009               	bsf	___lldiv@quotient,0,c
 18224  00A748                     l1791:
 18225  00A748  90D8               	bcf	status,0,c
 18226  00A74A  3208               	rrcf	___lldiv@divisor+3,f,c
 18227  00A74C  3207               	rrcf	___lldiv@divisor+2,f,c
 18228  00A74E  3206               	rrcf	___lldiv@divisor+1,f,c
 18229  00A750  3205               	rrcf	___lldiv@divisor,f,c
 18230  00A752  2E0D               	decfsz	___lldiv@counter,f,c
 18231  00A754  D7E1               	goto	u4340
 18232  00A756                     l1792:
 18233  00A756  C009  F001         	movff	___lldiv@quotient,?___lldiv
 18234  00A75A  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
 18235  00A75E  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
 18236  00A762  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
 18237  00A766  0012               	return		;funcret
 18238  00A768                     __end_of___lldiv:
 18239                           	opt stack 0
 18240                           tblptru	equ	0xFF8
 18241                           tblptrh	equ	0xFF7
 18242                           tblptrl	equ	0xFF6
 18243                           tablat	equ	0xFF5
 18244                           prodh	equ	0xFF4
 18245                           prodl	equ	0xFF3
 18246                           intcon	equ	0xFF2
 18247                           indf0	equ	0xFEF
 18248                           postinc0	equ	0xFEE
 18249                           fsr0h	equ	0xFEA
 18250                           fsr0l	equ	0xFE9
 18251                           wreg	equ	0xFE8
 18252                           postinc1	equ	0xFE6
 18253                           postdec1	equ	0xFE5
 18254                           plusw1	equ	0xFE3
 18255                           fsr1h	equ	0xFE2
 18256                           fsr1l	equ	0xFE1
 18257                           indf2	equ	0xFDF
 18258                           postinc2	equ	0xFDE
 18259                           postdec2	equ	0xFDD
 18260                           plusw2	equ	0xFDB
 18261                           fsr2h	equ	0xFDA
 18262                           fsr2l	equ	0xFD9
 18263                           status	equ	0xFD8
 18264                           
 18265 ;; *************** function _lcd_shift_display *****************
 18266 ;; Defined at:
 18267 ;;		line 126 in file "lcd.c"
 18268 ;; Parameters:    Size  Location     Type
 18269 ;;  numChars        1    wreg     unsigned char 
 18270 ;;  direction       1    3[COMRAM] unsigned char 
 18271 ;; Auto vars:     Size  Location     Type
 18272 ;;  numChars        1    4[COMRAM] unsigned char 
 18273 ;;  n               1    5[COMRAM] unsigned char 
 18274 ;; Return value:  Size  Location     Type
 18275 ;;                  1    wreg      void 
 18276 ;; Registers used:
 18277 ;;		wreg, status,2, status,0, cstack
 18278 ;; Tracked objects:
 18279 ;;		On entry : 0/0
 18280 ;;		On exit  : 0/0
 18281 ;;		Unchanged: 0/0
 18282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18283 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18284 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18285 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18286 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18287 ;;Total ram usage:        3 bytes
 18288 ;; Hardware stack levels used:    1
 18289 ;; Hardware stack levels required when called:    2
 18290 ;; This function calls:
 18291 ;;		_lcdInst
 18292 ;; This function is called by:
 18293 ;;		_main
 18294 ;; This function uses a non-reentrant model
 18295 ;;
 18296                           
 18297                           	psect	text33
 18298  00A2D4                     __ptext33:
 18299                           	opt stack 0
 18300  00A2D4                     _lcd_shift_display:
 18301                           	opt stack 28
 18302                           
 18303                           ;incstack = 0
 18304                           ;lcd_shift_display@numChars stored from wreg
 18305  00A2D4  6E05               	movwf	lcd_shift_display@numChars,c
 18306                           
 18307                           ;lcd.c: 138: for(unsigned char n = numChars; n > 0; n--){
 18308  00A2D6  C005  F006         	movff	lcd_shift_display@numChars,lcd_shift_display@n
 18309  00A2DA                     l6492:
 18310  00A2DA  5006               	movf	lcd_shift_display@n,w,c
 18311  00A2DC  B4D8               	btfsc	status,2,c
 18312  00A2DE  0012               	return	
 18313                           
 18314                           ;lcd.c: 139: lcdInst((unsigned char)(0x18 | (direction << 2)));
 18315  00A2E0  4404               	rlncf	lcd_shift_display@direction,w,c
 18316  00A2E2  46E8               	rlncf	wreg,f,c
 18317  00A2E4  0BFC               	andlw	252
 18318  00A2E6  0918               	iorlw	24
 18319  00A2E8  EC3E  F051         	call	_lcdInst
 18320  00A2EC  0606               	decf	lcd_shift_display@n,f,c
 18321  00A2EE  D7F5               	goto	l6492
 18322  00A2F0                     __end_of_lcd_shift_display:
 18323                           	opt stack 0
 18324                           tblptru	equ	0xFF8
 18325                           tblptrh	equ	0xFF7
 18326                           tblptrl	equ	0xFF6
 18327                           tablat	equ	0xFF5
 18328                           prodh	equ	0xFF4
 18329                           prodl	equ	0xFF3
 18330                           intcon	equ	0xFF2
 18331                           indf0	equ	0xFEF
 18332                           postinc0	equ	0xFEE
 18333                           fsr0h	equ	0xFEA
 18334                           fsr0l	equ	0xFE9
 18335                           wreg	equ	0xFE8
 18336                           postinc1	equ	0xFE6
 18337                           postdec1	equ	0xFE5
 18338                           plusw1	equ	0xFE3
 18339                           fsr1h	equ	0xFE2
 18340                           fsr1l	equ	0xFE1
 18341                           indf2	equ	0xFDF
 18342                           postinc2	equ	0xFDE
 18343                           postdec2	equ	0xFDD
 18344                           plusw2	equ	0xFDB
 18345                           fsr2h	equ	0xFDA
 18346                           fsr2l	equ	0xFD9
 18347                           status	equ	0xFD8
 18348                           
 18349 ;; *************** function _lcd_set_cursor *****************
 18350 ;; Defined at:
 18351 ;;		line 92 in file "lcd.c"
 18352 ;; Parameters:    Size  Location     Type
 18353 ;;  x               1    wreg     unsigned char 
 18354 ;;  y               1    6[COMRAM] unsigned char 
 18355 ;; Auto vars:     Size  Location     Type
 18356 ;;  x               1    9[COMRAM] unsigned char 
 18357 ;;  i               1    8[COMRAM] unsigned char 
 18358 ;; Return value:  Size  Location     Type
 18359 ;;                  1    wreg      void 
 18360 ;; Registers used:
 18361 ;;		wreg, status,2, status,0, cstack
 18362 ;; Tracked objects:
 18363 ;;		On entry : 0/0
 18364 ;;		On exit  : 0/0
 18365 ;;		Unchanged: 0/0
 18366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18367 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18368 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18369 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18370 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18371 ;;Total ram usage:        4 bytes
 18372 ;; Hardware stack levels used:    1
 18373 ;; Hardware stack levels required when called:    3
 18374 ;; This function calls:
 18375 ;;		_lcdInst
 18376 ;;		_lcd_shift_cursor
 18377 ;; This function is called by:
 18378 ;;		_main
 18379 ;; This function uses a non-reentrant model
 18380 ;;
 18381                           
 18382                           	psect	text34
 18383  00A430                     __ptext34:
 18384                           	opt stack 0
 18385  00A430                     _lcd_set_cursor:
 18386                           	opt stack 27
 18387                           
 18388                           ;incstack = 0
 18389                           ;lcd_set_cursor@x stored from wreg
 18390  00A430  6E0A               	movwf	lcd_set_cursor@x,c
 18391                           
 18392                           ;lcd.c: 102: lcdInst(0x80);_delay((unsigned long)((5)*(40000000/4000.0)));;
 18393  00A432  0E80               	movlw	128
 18394  00A434  EC3E  F051         	call	_lcdInst
 18395  00A438  0E41               	movlw	65
 18396  00A43A  6E08               	movwf	??_lcd_set_cursor& (0+255),c
 18397  00A43C  0EEE               	movlw	238
 18398  00A43E                     u10357:
 18399  00A43E  2EE8               	decfsz	wreg,f,c
 18400  00A440  D7FE               	bra	u10357
 18401  00A442  2E08               	decfsz	??_lcd_set_cursor& (0+255),f,c
 18402  00A444  D7FC               	bra	u10357
 18403  00A446  D000               	nop2	
 18404                           
 18405                           ;lcd.c: 103: for(unsigned char i = 0; i < y; i++){lcdInst(0xC0);;}
 18406  00A448  0E00               	movlw	0
 18407  00A44A  6E09               	movwf	lcd_set_cursor@i,c
 18408  00A44C  D004               	goto	l588
 18409  00A44E  0EC0               	movlw	192
 18410  00A450  EC3E  F051         	call	_lcdInst
 18411  00A454  2A09               	incf	lcd_set_cursor@i,f,c
 18412  00A456                     l588:
 18413  00A456  5007               	movf	lcd_set_cursor@y,w,c
 18414  00A458  5C09               	subwf	lcd_set_cursor@i,w,c
 18415  00A45A  A0D8               	btfss	status,0,c
 18416  00A45C  D7F8               	goto	l589
 18417                           
 18418                           ;lcd.c: 104: if(x > 0){
 18419  00A45E  500A               	movf	lcd_set_cursor@x,w,c
 18420  00A460  B4D8               	btfsc	status,2,c
 18421  00A462  0012               	return	
 18422                           
 18423                           ;lcd.c: 105: lcd_shift_cursor(x, 1);
 18424  00A464  0E01               	movlw	1
 18425  00A466  6E04               	movwf	lcd_shift_cursor@direction,c
 18426  00A468  500A               	movf	lcd_set_cursor@x,w,c
 18427  00A46A  EC5C  F051         	call	_lcd_shift_cursor
 18428  00A46E  0012               	return	
 18429  00A470                     __end_of_lcd_set_cursor:
 18430                           	opt stack 0
 18431                           tblptru	equ	0xFF8
 18432                           tblptrh	equ	0xFF7
 18433                           tblptrl	equ	0xFF6
 18434                           tablat	equ	0xFF5
 18435                           prodh	equ	0xFF4
 18436                           prodl	equ	0xFF3
 18437                           intcon	equ	0xFF2
 18438                           indf0	equ	0xFEF
 18439                           postinc0	equ	0xFEE
 18440                           fsr0h	equ	0xFEA
 18441                           fsr0l	equ	0xFE9
 18442                           wreg	equ	0xFE8
 18443                           postinc1	equ	0xFE6
 18444                           postdec1	equ	0xFE5
 18445                           plusw1	equ	0xFE3
 18446                           fsr1h	equ	0xFE2
 18447                           fsr1l	equ	0xFE1
 18448                           indf2	equ	0xFDF
 18449                           postinc2	equ	0xFDE
 18450                           postdec2	equ	0xFDD
 18451                           plusw2	equ	0xFDB
 18452                           fsr2h	equ	0xFDA
 18453                           fsr2l	equ	0xFD9
 18454                           status	equ	0xFD8
 18455                           
 18456 ;; *************** function _lcd_shift_cursor *****************
 18457 ;; Defined at:
 18458 ;;		line 109 in file "lcd.c"
 18459 ;; Parameters:    Size  Location     Type
 18460 ;;  numChars        1    wreg     unsigned char 
 18461 ;;  direction       1    3[COMRAM] unsigned char 
 18462 ;; Auto vars:     Size  Location     Type
 18463 ;;  numChars        1    4[COMRAM] unsigned char 
 18464 ;;  n               1    5[COMRAM] unsigned char 
 18465 ;; Return value:  Size  Location     Type
 18466 ;;                  1    wreg      void 
 18467 ;; Registers used:
 18468 ;;		wreg, status,2, status,0, cstack
 18469 ;; Tracked objects:
 18470 ;;		On entry : 0/0
 18471 ;;		On exit  : 0/0
 18472 ;;		Unchanged: 0/0
 18473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18474 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18475 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18476 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18477 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18478 ;;Total ram usage:        3 bytes
 18479 ;; Hardware stack levels used:    1
 18480 ;; Hardware stack levels required when called:    2
 18481 ;; This function calls:
 18482 ;;		_lcdInst
 18483 ;; This function is called by:
 18484 ;;		_lcd_set_cursor
 18485 ;; This function uses a non-reentrant model
 18486 ;;
 18487                           
 18488                           	psect	text35
 18489  00A2B8                     __ptext35:
 18490                           	opt stack 0
 18491  00A2B8                     _lcd_shift_cursor:
 18492                           	opt stack 27
 18493                           
 18494                           ;incstack = 0
 18495                           ;lcd_shift_cursor@numChars stored from wreg
 18496  00A2B8  6E05               	movwf	lcd_shift_cursor@numChars,c
 18497                           
 18498                           ;lcd.c: 121: for(unsigned char n = numChars; n > 0; n--){
 18499  00A2BA  C005  F006         	movff	lcd_shift_cursor@numChars,lcd_shift_cursor@n
 18500  00A2BE                     l6012:
 18501  00A2BE  5006               	movf	lcd_shift_cursor@n,w,c
 18502  00A2C0  B4D8               	btfsc	status,2,c
 18503  00A2C2  0012               	return	
 18504                           
 18505                           ;lcd.c: 122: lcdInst((unsigned char)(0x10 | (direction << 2)));
 18506  00A2C4  4404               	rlncf	lcd_shift_cursor@direction,w,c
 18507  00A2C6  46E8               	rlncf	wreg,f,c
 18508  00A2C8  0BFC               	andlw	252
 18509  00A2CA  0910               	iorlw	16
 18510  00A2CC  EC3E  F051         	call	_lcdInst
 18511  00A2D0  0606               	decf	lcd_shift_cursor@n,f,c
 18512  00A2D2  D7F5               	goto	l6012
 18513  00A2D4                     __end_of_lcd_shift_cursor:
 18514                           	opt stack 0
 18515                           tblptru	equ	0xFF8
 18516                           tblptrh	equ	0xFF7
 18517                           tblptrl	equ	0xFF6
 18518                           tablat	equ	0xFF5
 18519                           prodh	equ	0xFF4
 18520                           prodl	equ	0xFF3
 18521                           intcon	equ	0xFF2
 18522                           indf0	equ	0xFEF
 18523                           postinc0	equ	0xFEE
 18524                           fsr0h	equ	0xFEA
 18525                           fsr0l	equ	0xFE9
 18526                           wreg	equ	0xFE8
 18527                           postinc1	equ	0xFE6
 18528                           postdec1	equ	0xFE5
 18529                           plusw1	equ	0xFE3
 18530                           fsr1h	equ	0xFE2
 18531                           fsr1l	equ	0xFE1
 18532                           indf2	equ	0xFDF
 18533                           postinc2	equ	0xFDE
 18534                           postdec2	equ	0xFDD
 18535                           plusw2	equ	0xFDB
 18536                           fsr2h	equ	0xFDA
 18537                           fsr2l	equ	0xFD9
 18538                           status	equ	0xFD8
 18539                           
 18540 ;; *************** function _initTime *****************
 18541 ;; Defined at:
 18542 ;;		line 18 in file "RTC.c"
 18543 ;; Parameters:    Size  Location     Type
 18544 ;;  s               1    wreg     unsigned char 
 18545 ;;  m               1    0[COMRAM] unsigned char 
 18546 ;;  h               1    1[COMRAM] unsigned char 
 18547 ;;  w               1    2[COMRAM] unsigned char 
 18548 ;;  DD              1    3[COMRAM] unsigned char 
 18549 ;;  MM              1    4[COMRAM] unsigned char 
 18550 ;;  YY              1    5[COMRAM] unsigned char 
 18551 ;; Auto vars:     Size  Location     Type
 18552 ;;  s               1    6[COMRAM] unsigned char 
 18553 ;; Return value:  Size  Location     Type
 18554 ;;                  1    wreg      void 
 18555 ;; Registers used:
 18556 ;;		wreg
 18557 ;; Tracked objects:
 18558 ;;		On entry : 0/0
 18559 ;;		On exit  : 0/0
 18560 ;;		Unchanged: 0/0
 18561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18562 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18563 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18564 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18565 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18566 ;;Total ram usage:        7 bytes
 18567 ;; Hardware stack levels used:    1
 18568 ;; This function calls:
 18569 ;;		Nothing
 18570 ;; This function is called by:
 18571 ;;		_main
 18572 ;; This function uses a non-reentrant model
 18573 ;;
 18574                           
 18575                           	psect	text36
 18576  00A32A                     __ptext36:
 18577                           	opt stack 0
 18578  00A32A                     _initTime:
 18579                           	opt stack 30
 18580                           
 18581                           ;incstack = 0
 18582                           ;initTime@s stored from wreg
 18583  00A32A  6E07               	movwf	initTime@s,c
 18584                           
 18585                           ;RTC.c: 20: time[0] = s;
 18586  00A32C  C007  F2B7         	movff	initTime@s,_time
 18587                           
 18588                           ;RTC.c: 21: time[1] = m;
 18589  00A330  C001  F2B8         	movff	initTime@m,_time+1
 18590                           
 18591                           ;RTC.c: 22: time[2] = h;
 18592  00A334  C002  F2B9         	movff	initTime@h,_time+2
 18593                           
 18594                           ;RTC.c: 23: time[3] = w;
 18595  00A338  C003  F2BA         	movff	initTime@w,_time+3
 18596                           
 18597                           ;RTC.c: 24: time[4] = DD;
 18598  00A33C  C004  F2BB         	movff	initTime@DD,_time+4
 18599                           
 18600                           ;RTC.c: 25: time[5] = MM;
 18601  00A340  C005  F2BC         	movff	initTime@MM,_time+5
 18602                           
 18603                           ;RTC.c: 26: time[6] = YY;
 18604  00A344  C006  F2BD         	movff	initTime@YY,_time+6
 18605  00A348  0012               	return		;funcret
 18606  00A34A                     __end_of_initTime:
 18607                           	opt stack 0
 18608                           tblptru	equ	0xFF8
 18609                           tblptrh	equ	0xFF7
 18610                           tblptrl	equ	0xFF6
 18611                           tablat	equ	0xFF5
 18612                           prodh	equ	0xFF4
 18613                           prodl	equ	0xFF3
 18614                           intcon	equ	0xFF2
 18615                           indf0	equ	0xFEF
 18616                           postinc0	equ	0xFEE
 18617                           fsr0h	equ	0xFEA
 18618                           fsr0l	equ	0xFE9
 18619                           wreg	equ	0xFE8
 18620                           postinc1	equ	0xFE6
 18621                           postdec1	equ	0xFE5
 18622                           plusw1	equ	0xFE3
 18623                           fsr1h	equ	0xFE2
 18624                           fsr1l	equ	0xFE1
 18625                           indf2	equ	0xFDF
 18626                           postinc2	equ	0xFDE
 18627                           postdec2	equ	0xFDD
 18628                           plusw2	equ	0xFDB
 18629                           fsr2h	equ	0xFDA
 18630                           fsr2l	equ	0xFD9
 18631                           status	equ	0xFD8
 18632                           
 18633 ;; *************** function _initLCD *****************
 18634 ;; Defined at:
 18635 ;;		line 72 in file "lcd.c"
 18636 ;; Parameters:    Size  Location     Type
 18637 ;;		None
 18638 ;; Auto vars:     Size  Location     Type
 18639 ;;		None
 18640 ;; Return value:  Size  Location     Type
 18641 ;;                  1    wreg      void 
 18642 ;; Registers used:
 18643 ;;		wreg, status,2, status,0, cstack
 18644 ;; Tracked objects:
 18645 ;;		On entry : 0/0
 18646 ;;		On exit  : 0/0
 18647 ;;		Unchanged: 0/0
 18648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18649 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18650 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18651 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18652 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18653 ;;Total ram usage:        1 bytes
 18654 ;; Hardware stack levels used:    1
 18655 ;; Hardware stack levels required when called:    2
 18656 ;; This function calls:
 18657 ;;		_lcdInst
 18658 ;; This function is called by:
 18659 ;;		_main
 18660 ;; This function uses a non-reentrant model
 18661 ;;
 18662                           
 18663                           	psect	text37
 18664  00A4B2                     __ptext37:
 18665                           	opt stack 0
 18666  00A4B2                     _initLCD:
 18667                           	opt stack 28
 18668                           
 18669                           ;lcd.c: 80: _delay((unsigned long)((15)*(40000000/4000.0)));
 18670                           
 18671                           ;incstack = 0
 18672  00A4B2  0EC3               	movlw	195
 18673  00A4B4  6E04               	movwf	??_initLCD& (0+255),c
 18674  00A4B6  0ECD               	movlw	205
 18675  00A4B8                     u10367:
 18676  00A4B8  2EE8               	decfsz	wreg,f,c
 18677  00A4BA  D7FE               	bra	u10367
 18678  00A4BC  2E04               	decfsz	??_initLCD& (0+255),f,c
 18679  00A4BE  D7FC               	bra	u10367
 18680  00A4C0  F000               	nop	
 18681                           
 18682                           ;lcd.c: 81: lcdInst(0b00110011);
 18683  00A4C2  0E33               	movlw	51
 18684  00A4C4  EC3E  F051         	call	_lcdInst
 18685                           
 18686                           ;lcd.c: 82: lcdInst(0b00110010);
 18687  00A4C8  0E32               	movlw	50
 18688  00A4CA  EC3E  F051         	call	_lcdInst
 18689                           
 18690                           ;lcd.c: 83: lcdInst(0b00101000);
 18691  00A4CE  0E28               	movlw	40
 18692  00A4D0  EC3E  F051         	call	_lcdInst
 18693                           
 18694                           ;lcd.c: 84: lcdInst(0b00001111);
 18695  00A4D4  0E0F               	movlw	15
 18696  00A4D6  EC3E  F051         	call	_lcdInst
 18697                           
 18698                           ;lcd.c: 85: lcdInst(0b00000110);
 18699  00A4DA  0E06               	movlw	6
 18700  00A4DC  EC3E  F051         	call	_lcdInst
 18701                           
 18702                           ;lcd.c: 86: lcdInst(0x01);_delay((unsigned long)((15)*(40000000/4000.0)));;
 18703  00A4E0  0E01               	movlw	1
 18704  00A4E2  EC3E  F051         	call	_lcdInst
 18705  00A4E6  0EC3               	movlw	195
 18706  00A4E8  6E04               	movwf	??_initLCD& (0+255),c
 18707  00A4EA  0ECD               	movlw	205
 18708  00A4EC                     u10377:
 18709  00A4EC  2EE8               	decfsz	wreg,f,c
 18710  00A4EE  D7FE               	bra	u10377
 18711  00A4F0  2E04               	decfsz	??_initLCD& (0+255),f,c
 18712  00A4F2  D7FC               	bra	u10377
 18713  00A4F4  F000               	nop	
 18714                           
 18715                           ;lcd.c: 89: lcdInst(8 | (1 << 2) | (1 << 1)| 1);;
 18716  00A4F6  0E0F               	movlw	15
 18717  00A4F8  EC3E  F051         	call	_lcdInst
 18718  00A4FC  0012               	return		;funcret
 18719  00A4FE                     __end_of_initLCD:
 18720                           	opt stack 0
 18721                           tblptru	equ	0xFF8
 18722                           tblptrh	equ	0xFF7
 18723                           tblptrl	equ	0xFF6
 18724                           tablat	equ	0xFF5
 18725                           prodh	equ	0xFF4
 18726                           prodl	equ	0xFF3
 18727                           intcon	equ	0xFF2
 18728                           indf0	equ	0xFEF
 18729                           postinc0	equ	0xFEE
 18730                           fsr0h	equ	0xFEA
 18731                           fsr0l	equ	0xFE9
 18732                           wreg	equ	0xFE8
 18733                           postinc1	equ	0xFE6
 18734                           postdec1	equ	0xFE5
 18735                           plusw1	equ	0xFE3
 18736                           fsr1h	equ	0xFE2
 18737                           fsr1l	equ	0xFE1
 18738                           indf2	equ	0xFDF
 18739                           postinc2	equ	0xFDE
 18740                           postdec2	equ	0xFDD
 18741                           plusw2	equ	0xFDB
 18742                           fsr2h	equ	0xFDA
 18743                           fsr2l	equ	0xFD9
 18744                           status	equ	0xFD8
 18745                           
 18746 ;; *************** function _lcdInst *****************
 18747 ;; Defined at:
 18748 ;;		line 23 in file "lcd.c"
 18749 ;; Parameters:    Size  Location     Type
 18750 ;;  data            1    wreg     unsigned char 
 18751 ;; Auto vars:     Size  Location     Type
 18752 ;;  data            1    2[COMRAM] unsigned char 
 18753 ;; Return value:  Size  Location     Type
 18754 ;;                  1    wreg      void 
 18755 ;; Registers used:
 18756 ;;		wreg, status,2, status,0, cstack
 18757 ;; Tracked objects:
 18758 ;;		On entry : 0/0
 18759 ;;		On exit  : 0/0
 18760 ;;		Unchanged: 0/0
 18761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18762 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18763 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18764 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18765 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18766 ;;Total ram usage:        1 bytes
 18767 ;; Hardware stack levels used:    1
 18768 ;; Hardware stack levels required when called:    1
 18769 ;; This function calls:
 18770 ;;		_lcdNibble
 18771 ;; This function is called by:
 18772 ;;		_main
 18773 ;;		_initLCD
 18774 ;;		_lcd_set_cursor
 18775 ;;		_lcd_shift_cursor
 18776 ;;		_lcd_shift_display
 18777 ;;		_operation_summary
 18778 ;;		_printRTC
 18779 ;; This function uses a non-reentrant model
 18780 ;;
 18781                           
 18782                           	psect	text38
 18783  00A27C                     __ptext38:
 18784                           	opt stack 0
 18785  00A27C                     _lcdInst:
 18786                           	opt stack 28
 18787                           
 18788                           ;incstack = 0
 18789                           ;lcdInst@data stored from wreg
 18790  00A27C  6E03               	movwf	lcdInst@data,c
 18791                           
 18792                           ;lcd.c: 31: LATDbits.LATD2 = 0;
 18793  00A27E  948C               	bcf	3980,2,c	;volatile
 18794                           
 18795                           ;lcd.c: 32: lcdNibble(data);
 18796  00A280  5003               	movf	lcdInst@data,w,c
 18797  00A282  ECF6  F053         	call	_lcdNibble
 18798                           
 18799                           ;lcd.c: 33: _delay((unsigned long)((100)*(40000000/4000000.0)));
 18800  00A286  0EC8               	movlw	200
 18801  00A288                     u10387:
 18802  00A288  D000               	nop2	
 18803  00A28A  2EE8               	decfsz	wreg,f,c
 18804  00A28C  D7FD               	bra	u10387
 18805  00A28E  0012               	return		;funcret
 18806  00A290                     __end_of_lcdInst:
 18807                           	opt stack 0
 18808                           tblptru	equ	0xFF8
 18809                           tblptrh	equ	0xFF7
 18810                           tblptrl	equ	0xFF6
 18811                           tablat	equ	0xFF5
 18812                           prodh	equ	0xFF4
 18813                           prodl	equ	0xFF3
 18814                           intcon	equ	0xFF2
 18815                           indf0	equ	0xFEF
 18816                           postinc0	equ	0xFEE
 18817                           fsr0h	equ	0xFEA
 18818                           fsr0l	equ	0xFE9
 18819                           wreg	equ	0xFE8
 18820                           postinc1	equ	0xFE6
 18821                           postdec1	equ	0xFE5
 18822                           plusw1	equ	0xFE3
 18823                           fsr1h	equ	0xFE2
 18824                           fsr1l	equ	0xFE1
 18825                           indf2	equ	0xFDF
 18826                           postinc2	equ	0xFDE
 18827                           postdec2	equ	0xFDD
 18828                           plusw2	equ	0xFDB
 18829                           fsr2h	equ	0xFDA
 18830                           fsr2l	equ	0xFD9
 18831                           status	equ	0xFD8
 18832                           
 18833 ;; *************** function _lcdNibble *****************
 18834 ;; Defined at:
 18835 ;;		line 49 in file "lcd.c"
 18836 ;; Parameters:    Size  Location     Type
 18837 ;;  data            1    wreg     unsigned char 
 18838 ;; Auto vars:     Size  Location     Type
 18839 ;;  data            1    1[COMRAM] unsigned char 
 18840 ;;  temp            1    0[COMRAM] unsigned char 
 18841 ;; Return value:  Size  Location     Type
 18842 ;;                  1    wreg      void 
 18843 ;; Registers used:
 18844 ;;		wreg, status,2, status,0
 18845 ;; Tracked objects:
 18846 ;;		On entry : 0/0
 18847 ;;		On exit  : 0/0
 18848 ;;		Unchanged: 0/0
 18849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18850 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18851 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18852 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18853 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18854 ;;Total ram usage:        2 bytes
 18855 ;; Hardware stack levels used:    1
 18856 ;; This function calls:
 18857 ;;		Nothing
 18858 ;; This function is called by:
 18859 ;;		_lcdInst
 18860 ;;		_putch
 18861 ;; This function uses a non-reentrant model
 18862 ;;
 18863                           
 18864                           	psect	text39
 18865  00A7EC                     __ptext39:
 18866                           	opt stack 0
 18867  00A7EC                     _lcdNibble:
 18868                           	opt stack 29
 18869                           
 18870                           ;incstack = 0
 18871                           ;lcdNibble@data stored from wreg
 18872  00A7EC  6E02               	movwf	lcdNibble@data,c
 18873                           
 18874                           ;lcd.c: 57: char temp = (unsigned char) (data & 0xF0);
 18875  00A7EE  5002               	movf	lcdNibble@data,w,c
 18876  00A7F0  0BF0               	andlw	240
 18877  00A7F2  6E01               	movwf	lcdNibble@temp,c
 18878                           
 18879                           ;lcd.c: 58: LATD = (unsigned char) (LATD & 0x0F);
 18880  00A7F4  508C               	movf	3980,w,c	;volatile
 18881  00A7F6  0B0F               	andlw	15
 18882  00A7F8  6E8C               	movwf	3980,c	;volatile
 18883                           
 18884                           ;lcd.c: 59: LATD = (unsigned char) (temp | LATD);
 18885  00A7FA  5001               	movf	lcdNibble@temp,w,c
 18886  00A7FC  108C               	iorwf	3980,w,c	;volatile
 18887  00A7FE  6E8C               	movwf	3980,c	;volatile
 18888                           
 18889                           ;lcd.c: 61: { LCDinterruptState = INTCONbits.GIE; (INTCONbits.GIE = 0); LATDbits.LATD3 =
      +                           1; _delay((unsigned long)((25)*(40000000/4000000.0))); LATDbits.LATD3 = 0; _delay((unsi
      +                          gned long)((100)*(40000000/4000000.0))); INTCONbits.GIE = LCDinterruptState;};
 18890  00A800  0E00               	movlw	0
 18891  00A802  BEF2               	btfsc	intcon,7,c	;volatile
 18892  00A804  0E01               	movlw	1
 18893  00A806  0102               	movlb	2	; () banked
 18894  00A808  6FD6               	movwf	_LCDinterruptState& (0+255),b
 18895                           
 18896                           ; BSR set to: 2
 18897  00A80A  9EF2               	bcf	intcon,7,c	;volatile
 18898                           
 18899                           ; BSR set to: 2
 18900  00A80C  868C               	bsf	3980,3,c	;volatile
 18901                           
 18902                           ; BSR set to: 2
 18903  00A80E  0E53               	movlw	83
 18904  00A810                     u10397:
 18905  00A810  2EE8               	decfsz	wreg,f,c
 18906  00A812  D7FE               	bra	u10397
 18907  00A814  F000               	nop	
 18908  00A816  968C               	bcf	3980,3,c	;volatile
 18909  00A818  0EC8               	movlw	200
 18910  00A81A                     u10407:
 18911  00A81A  D000               	nop2	
 18912  00A81C  2EE8               	decfsz	wreg,f,c
 18913  00A81E  D7FD               	bra	u10407
 18914  00A820  0102               	movlb	2	; () banked
 18915  00A822  B1D6               	btfsc	_LCDinterruptState& (0+255),0,b
 18916  00A824  D002               	bra	u4515
 18917  00A826  9EF2               	bcf	intcon,7,c	;volatile
 18918  00A828  D001               	bra	u4516
 18919  00A82A                     u4515:
 18920  00A82A  8EF2               	bsf	intcon,7,c	;volatile
 18921  00A82C                     u4516:
 18922                           
 18923                           ;lcd.c: 64: data = (unsigned char) (data << 4);
 18924  00A82C  3802               	swapf	lcdNibble@data,w,c
 18925  00A82E  0BF0               	andlw	240
 18926  00A830  6E02               	movwf	lcdNibble@data,c
 18927                           
 18928                           ;lcd.c: 65: temp = (unsigned char) (data & 0xF0);
 18929  00A832  5002               	movf	lcdNibble@data,w,c
 18930  00A834  0BF0               	andlw	240
 18931  00A836  6E01               	movwf	lcdNibble@temp,c
 18932                           
 18933                           ;lcd.c: 66: LATD = (unsigned char) (LATD & 0x0F);
 18934  00A838  508C               	movf	3980,w,c	;volatile
 18935  00A83A  0B0F               	andlw	15
 18936  00A83C  6E8C               	movwf	3980,c	;volatile
 18937                           
 18938                           ;lcd.c: 67: LATD = (unsigned char) (temp | LATD);
 18939  00A83E  5001               	movf	lcdNibble@temp,w,c
 18940  00A840  108C               	iorwf	3980,w,c	;volatile
 18941  00A842  6E8C               	movwf	3980,c	;volatile
 18942                           
 18943                           ;lcd.c: 69: { LCDinterruptState = INTCONbits.GIE; (INTCONbits.GIE = 0); LATDbits.LATD3 =
      +                           1; _delay((unsigned long)((25)*(40000000/4000000.0))); LATDbits.LATD3 = 0; _delay((unsi
      +                          gned long)((100)*(40000000/4000000.0))); INTCONbits.GIE = LCDinterruptState;};
 18944  00A844  0E00               	movlw	0
 18945  00A846  BEF2               	btfsc	intcon,7,c	;volatile
 18946  00A848  0E01               	movlw	1
 18947  00A84A  0102               	movlb	2	; () banked
 18948  00A84C  6FD6               	movwf	_LCDinterruptState& (0+255),b
 18949                           
 18950                           ; BSR set to: 2
 18951  00A84E  9EF2               	bcf	intcon,7,c	;volatile
 18952                           
 18953                           ; BSR set to: 2
 18954  00A850  868C               	bsf	3980,3,c	;volatile
 18955                           
 18956                           ; BSR set to: 2
 18957  00A852  0E53               	movlw	83
 18958  00A854                     u10417:
 18959  00A854  2EE8               	decfsz	wreg,f,c
 18960  00A856  D7FE               	bra	u10417
 18961  00A858  F000               	nop	
 18962  00A85A  968C               	bcf	3980,3,c	;volatile
 18963  00A85C  0EC8               	movlw	200
 18964  00A85E                     u10427:
 18965  00A85E  D000               	nop2	
 18966  00A860  2EE8               	decfsz	wreg,f,c
 18967  00A862  D7FD               	bra	u10427
 18968  00A864  0102               	movlb	2	; () banked
 18969  00A866  B1D6               	btfsc	_LCDinterruptState& (0+255),0,b
 18970  00A868  D002               	bra	u4525
 18971  00A86A  9EF2               	bcf	intcon,7,c	;volatile
 18972  00A86C  D001               	bra	u4526
 18973  00A86E                     u4525:
 18974  00A86E  8EF2               	bsf	intcon,7,c	;volatile
 18975  00A870                     u4526:
 18976  00A870  0012               	return		;funcret
 18977  00A872                     __end_of_lcdNibble:
 18978                           	opt stack 0
 18979                           tblptru	equ	0xFF8
 18980                           tblptrh	equ	0xFF7
 18981                           tblptrl	equ	0xFF6
 18982                           tablat	equ	0xFF5
 18983                           prodh	equ	0xFF4
 18984                           prodl	equ	0xFF3
 18985                           intcon	equ	0xFF2
 18986                           indf0	equ	0xFEF
 18987                           postinc0	equ	0xFEE
 18988                           fsr0h	equ	0xFEA
 18989                           fsr0l	equ	0xFE9
 18990                           wreg	equ	0xFE8
 18991                           postinc1	equ	0xFE6
 18992                           postdec1	equ	0xFE5
 18993                           plusw1	equ	0xFE3
 18994                           fsr1h	equ	0xFE2
 18995                           fsr1l	equ	0xFE1
 18996                           indf2	equ	0xFDF
 18997                           postinc2	equ	0xFDE
 18998                           postdec2	equ	0xFDD
 18999                           plusw2	equ	0xFDB
 19000                           fsr2h	equ	0xFDA
 19001                           fsr2l	equ	0xFD9
 19002                           status	equ	0xFD8
 19003                           
 19004 ;; *************** function _compare_arrays *****************
 19005 ;; Defined at:
 19006 ;;		line 19 in file "add_functions.c"
 19007 ;; Parameters:    Size  Location     Type
 19008 ;;  array1          2    0[COMRAM] PTR int 
 19009 ;;		 -> main@row_check(8), 
 19010 ;;  array2          2    2[COMRAM] PTR int 
 19011 ;;		 -> main@s(8), main@r(8), main@q(8), main@p(8), 
 19012 ;;		 -> main@o(8), main@n(8), main@m(8), main@l(8), 
 19013 ;;		 -> main@z(8), main@y(8), main@x(8), main@h(8), 
 19014 ;;		 -> main@g(8), main@f(8), main@e(8), main@d(8), 
 19015 ;;		 -> main@c(8), main@b(8), main@a(8), 
 19016 ;; Auto vars:     Size  Location     Type
 19017 ;;  i               2    8[COMRAM] int 
 19018 ;; Return value:  Size  Location     Type
 19019 ;;                  2    0[COMRAM] short 
 19020 ;; Registers used:
 19021 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 19022 ;; Tracked objects:
 19023 ;;		On entry : 0/0
 19024 ;;		On exit  : 0/0
 19025 ;;		Unchanged: 0/0
 19026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19027 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19028 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19029 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19030 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19031 ;;Total ram usage:       10 bytes
 19032 ;; Hardware stack levels used:    1
 19033 ;; This function calls:
 19034 ;;		Nothing
 19035 ;; This function is called by:
 19036 ;;		_main
 19037 ;; This function uses a non-reentrant model
 19038 ;;
 19039                           
 19040                           	psect	text40
 19041  00A608                     __ptext40:
 19042                           	opt stack 0
 19043  00A608                     _compare_arrays:
 19044                           	opt stack 30
 19045                           
 19046                           ;add_functions.c: 20: int i = 0;
 19047                           
 19048                           ;incstack = 0
 19049  00A608  0E00               	movlw	0
 19050  00A60A  6E0A               	movwf	compare_arrays@i+1,c
 19051  00A60C  0E00               	movlw	0
 19052  00A60E  6E09               	movwf	compare_arrays@i,c
 19053                           
 19054                           ;add_functions.c: 21: for (i = 0; i < 4; i ++){
 19055  00A610  0E00               	movlw	0
 19056  00A612  6E0A               	movwf	compare_arrays@i+1,c
 19057  00A614  0E00               	movlw	0
 19058  00A616  6E09               	movwf	compare_arrays@i,c
 19059  00A618                     l6940:
 19060  00A618  BE0A               	btfsc	compare_arrays@i+1,7,c
 19061  00A61A  D006               	goto	l1093
 19062  00A61C  500A               	movf	compare_arrays@i+1,w,c
 19063  00A61E  E125               	bnz	l6954
 19064  00A620  0E04               	movlw	4
 19065  00A622  5C09               	subwf	compare_arrays@i,w,c
 19066  00A624  B0D8               	btfsc	status,0,c
 19067  00A626  D021               	goto	u6570
 19068  00A628                     l1093:
 19069                           
 19070                           ;add_functions.c: 22: if (array1[i] != array2[i]){
 19071  00A628  90D8               	bcf	status,0,c
 19072  00A62A  3409               	rlcf	compare_arrays@i,w,c
 19073  00A62C  6ED9               	movwf	fsr2l,c
 19074  00A62E  340A               	rlcf	compare_arrays@i+1,w,c
 19075  00A630  6EDA               	movwf	fsr2h,c
 19076  00A632  5003               	movf	compare_arrays@array2,w,c
 19077  00A634  26D9               	addwf	fsr2l,f,c
 19078  00A636  5004               	movf	compare_arrays@array2+1,w,c
 19079  00A638  22DA               	addwfc	fsr2h,f,c
 19080  00A63A  90D8               	bcf	status,0,c
 19081  00A63C  3409               	rlcf	compare_arrays@i,w,c
 19082  00A63E  6EE1               	movwf	fsr1l,c
 19083  00A640  340A               	rlcf	compare_arrays@i+1,w,c
 19084  00A642  6EE2               	movwf	fsr1h,c
 19085  00A644  5001               	movf	compare_arrays@array1,w,c
 19086  00A646  26E1               	addwf	fsr1l,f,c
 19087  00A648  5002               	movf	compare_arrays@array1+1,w,c
 19088  00A64A  22E2               	addwfc	fsr1h,f,c
 19089  00A64C  50DE               	movf	postinc2,w,c
 19090  00A64E  18E6               	xorwf	postinc1,w,c
 19091  00A650  E104               	bnz	u6560
 19092  00A652  50DE               	movf	postinc2,w,c
 19093  00A654  18E6               	xorwf	postinc1,w,c
 19094  00A656  B4D8               	btfsc	status,2,c
 19095  00A658  D005               	goto	l1095
 19096  00A65A                     u6560:
 19097                           
 19098                           ;add_functions.c: 23: return 0;
 19099  00A65A  0E00               	movlw	0
 19100  00A65C  6E02               	movwf	?_compare_arrays+1,c
 19101  00A65E  0E00               	movlw	0
 19102  00A660  6E01               	movwf	?_compare_arrays,c
 19103  00A662  0012               	return	
 19104  00A664                     l1095:
 19105  00A664  4A09               	infsnz	compare_arrays@i,f,c
 19106  00A666  2A0A               	incf	compare_arrays@i+1,f,c
 19107  00A668  D7D7               	goto	l6940
 19108  00A66A                     u6570:
 19109  00A66A                     l6954:
 19110                           
 19111                           ;add_functions.c: 24: }
 19112                           ;add_functions.c: 25: }
 19113                           ;add_functions.c: 26: return 1;
 19114  00A66A  0E00               	movlw	0
 19115  00A66C  6E02               	movwf	?_compare_arrays+1,c
 19116  00A66E  0E01               	movlw	1
 19117  00A670  6E01               	movwf	?_compare_arrays,c
 19118  00A672  0012               	return	
 19119  00A674                     __end_of_compare_arrays:
 19120                           	opt stack 0
 19121                           tblptru	equ	0xFF8
 19122                           tblptrh	equ	0xFF7
 19123                           tblptrl	equ	0xFF6
 19124                           tablat	equ	0xFF5
 19125                           prodh	equ	0xFF4
 19126                           prodl	equ	0xFF3
 19127                           intcon	equ	0xFF2
 19128                           indf0	equ	0xFEF
 19129                           postinc0	equ	0xFEE
 19130                           fsr0h	equ	0xFEA
 19131                           fsr0l	equ	0xFE9
 19132                           wreg	equ	0xFE8
 19133                           postinc1	equ	0xFE6
 19134                           postdec1	equ	0xFE5
 19135                           plusw1	equ	0xFE3
 19136                           fsr1h	equ	0xFE2
 19137                           fsr1l	equ	0xFE1
 19138                           indf2	equ	0xFDF
 19139                           postinc2	equ	0xFDE
 19140                           postdec2	equ	0xFDD
 19141                           plusw2	equ	0xFDB
 19142                           fsr2h	equ	0xFDA
 19143                           fsr2l	equ	0xFD9
 19144                           status	equ	0xFD8
 19145                           
 19146 ;; *************** function _comp_EEPROM_time *****************
 19147 ;; Defined at:
 19148 ;;		line 217 in file "add_functions.c"
 19149 ;; Parameters:    Size  Location     Type
 19150 ;;		None
 19151 ;; Auto vars:     Size  Location     Type
 19152 ;;  i               2   14[COMRAM] short 
 19153 ;; Return value:  Size  Location     Type
 19154 ;;                  1    wreg      void 
 19155 ;; Registers used:
 19156 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 19157 ;; Tracked objects:
 19158 ;;		On entry : 0/0
 19159 ;;		On exit  : 0/0
 19160 ;;		Unchanged: 0/0
 19161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19162 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19163 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19164 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19165 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19166 ;;Total ram usage:       10 bytes
 19167 ;; Hardware stack levels used:    1
 19168 ;; Hardware stack levels required when called:    1
 19169 ;; This function calls:
 19170 ;;		___wmul
 19171 ;; This function is called by:
 19172 ;;		_main
 19173 ;; This function uses a non-reentrant model
 19174 ;;
 19175                           
 19176                           	psect	text41
 19177  00A90A                     __ptext41:
 19178                           	opt stack 0
 19179  00A90A                     _comp_EEPROM_time:
 19180                           	opt stack 29
 19181                           
 19182                           ;add_functions.c: 218: short int i = 0;
 19183                           
 19184                           ;incstack = 0
 19185  00A90A  0E00               	movlw	0
 19186  00A90C  6E10               	movwf	comp_EEPROM_time@i+1,c
 19187  00A90E  0E00               	movlw	0
 19188  00A910  6E0F               	movwf	comp_EEPROM_time@i,c
 19189                           
 19190                           ;add_functions.c: 219: while (total_difference - i*60 >= 0){
 19191  00A912  D002               	goto	l1178
 19192  00A914                     
 19193                           ;add_functions.c: 220: i++;
 19194  00A914  4A0F               	infsnz	comp_EEPROM_time@i,f,c
 19195  00A916  2A10               	incf	comp_EEPROM_time@i+1,f,c
 19196  00A918                     l1178:
 19197  00A918  C00F  F001         	movff	comp_EEPROM_time@i,___wmul@multiplier
 19198  00A91C  C010  F002         	movff	comp_EEPROM_time@i+1,___wmul@multiplier+1
 19199  00A920  0E00               	movlw	0
 19200  00A922  6E04               	movwf	___wmul@multiplicand+1,c
 19201  00A924  0E3C               	movlw	60
 19202  00A926  6E03               	movwf	___wmul@multiplicand,c
 19203  00A928  ECB7  F051         	call	___wmul	;wreg free
 19204  00A92C  C001  F007         	movff	?___wmul,??_comp_EEPROM_time
 19205  00A930  C002  F008         	movff	?___wmul+1,??_comp_EEPROM_time+1
 19206  00A934  0E00               	movlw	0
 19207  00A936  BE08               	btfsc	(??_comp_EEPROM_time+1)& (0+255),7,c
 19208  00A938  0EFF               	movlw	255
 19209  00A93A  6E09               	movwf	(??_comp_EEPROM_time+2)& (0+255),c
 19210  00A93C  6E0A               	movwf	(??_comp_EEPROM_time+3)& (0+255),c
 19211  00A93E  1E07               	comf	??_comp_EEPROM_time,f,c
 19212  00A940  1E08               	comf	??_comp_EEPROM_time+1,f,c
 19213  00A942  1E09               	comf	??_comp_EEPROM_time+2,f,c
 19214  00A944  1E0A               	comf	??_comp_EEPROM_time+3,f,c
 19215  00A946  2A07               	incf	??_comp_EEPROM_time,f,c
 19216  00A948  0E00               	movlw	0
 19217  00A94A  2208               	addwfc	??_comp_EEPROM_time+1,f,c
 19218  00A94C  2209               	addwfc	??_comp_EEPROM_time+2,f,c
 19219  00A94E  220A               	addwfc	??_comp_EEPROM_time+3,f,c
 19220  00A950  0102               	movlb	2	; () banked
 19221  00A952  51C4               	movf	_total_difference& (0+255),w,b
 19222  00A954  2407               	addwf	??_comp_EEPROM_time,w,c
 19223  00A956  6E0B               	movwf	(??_comp_EEPROM_time+4)& (0+255),c
 19224  00A958  51C5               	movf	(_total_difference+1)& (0+255),w,b
 19225  00A95A  2008               	addwfc	??_comp_EEPROM_time+1,w,c
 19226  00A95C  6E0C               	movwf	(??_comp_EEPROM_time+5)& (0+255),c
 19227  00A95E  51C6               	movf	(_total_difference+2)& (0+255),w,b
 19228  00A960  2009               	addwfc	??_comp_EEPROM_time+2,w,c
 19229  00A962  6E0D               	movwf	(??_comp_EEPROM_time+6)& (0+255),c
 19230  00A964  51C7               	movf	(_total_difference+3)& (0+255),w,b
 19231  00A966  200A               	addwfc	??_comp_EEPROM_time+3,w,c
 19232  00A968  6E0E               	movwf	(??_comp_EEPROM_time+7)& (0+255),c
 19233  00A96A  AE0E               	btfss	??_comp_EEPROM_time+7,7,c
 19234  00A96C  D7D3               	goto	l1179
 19235                           
 19236                           ; BSR set to: 2
 19237                           ;add_functions.c: 221: }
 19238                           ;add_functions.c: 222: i--;
 19239                           
 19240                           ; BSR set to: 2
 19241  00A96E  060F               	decf	comp_EEPROM_time@i,f,c
 19242  00A970  A0D8               	btfss	status,0,c
 19243  00A972  0610               	decf	comp_EEPROM_time@i+1,f,c
 19244                           
 19245                           ; BSR set to: 2
 19246                           ;add_functions.c: 223: run_time_minutes = i;
 19247  00A974  C00F  F2D4         	movff	comp_EEPROM_time@i,_run_time_minutes
 19248  00A978  C010  F2D5         	movff	comp_EEPROM_time@i+1,_run_time_minutes+1
 19249                           
 19250                           ; BSR set to: 2
 19251                           ;add_functions.c: 224: run_time_seconds = total_difference - i*60;
 19252  00A97C  C00F  F001         	movff	comp_EEPROM_time@i,___wmul@multiplier
 19253  00A980  C010  F002         	movff	comp_EEPROM_time@i+1,___wmul@multiplier+1
 19254  00A984  0E00               	movlw	0
 19255  00A986  6E04               	movwf	___wmul@multiplicand+1,c
 19256  00A988  0E3C               	movlw	60
 19257  00A98A  6E03               	movwf	___wmul@multiplicand,c
 19258  00A98C  ECB7  F051         	call	___wmul	;wreg free
 19259  00A990  1E01               	comf	?___wmul,f,c
 19260  00A992  1E02               	comf	?___wmul+1,f,c
 19261  00A994  4A01               	infsnz	?___wmul,f,c
 19262  00A996  2A02               	incf	?___wmul+1,f,c
 19263  00A998  0102               	movlb	2	; () banked
 19264  00A99A  51C4               	movf	_total_difference& (0+255),w,b
 19265  00A99C  2401               	addwf	?___wmul,w,c
 19266  00A99E  6FD2               	movwf	_run_time_seconds& (0+255),b
 19267  00A9A0  51C5               	movf	(_total_difference+1)& (0+255),w,b
 19268  00A9A2  2002               	addwfc	?___wmul+1,w,c
 19269  00A9A4  6FD3               	movwf	(_run_time_seconds+1)& (0+255),b
 19270                           
 19271                           ; BSR set to: 2
 19272  00A9A6  0012               	return		;funcret
 19273  00A9A8                     __end_of_comp_EEPROM_time:
 19274                           	opt stack 0
 19275                           tblptru	equ	0xFF8
 19276                           tblptrh	equ	0xFF7
 19277                           tblptrl	equ	0xFF6
 19278                           tablat	equ	0xFF5
 19279                           prodh	equ	0xFF4
 19280                           prodl	equ	0xFF3
 19281                           intcon	equ	0xFF2
 19282                           indf0	equ	0xFEF
 19283                           postinc0	equ	0xFEE
 19284                           fsr0h	equ	0xFEA
 19285                           fsr0l	equ	0xFE9
 19286                           wreg	equ	0xFE8
 19287                           postinc1	equ	0xFE6
 19288                           postdec1	equ	0xFE5
 19289                           plusw1	equ	0xFE3
 19290                           fsr1h	equ	0xFE2
 19291                           fsr1l	equ	0xFE1
 19292                           indf2	equ	0xFDF
 19293                           postinc2	equ	0xFDE
 19294                           postdec2	equ	0xFDD
 19295                           plusw2	equ	0xFDB
 19296                           fsr2h	equ	0xFDA
 19297                           fsr2l	equ	0xFD9
 19298                           status	equ	0xFD8
 19299                           
 19300 ;; *************** function _array_transition *****************
 19301 ;; Defined at:
 19302 ;;		line 29 in file "add_functions.c"
 19303 ;; Parameters:    Size  Location     Type
 19304 ;;  mat             2    6[COMRAM] PTR int [3]
 19305 ;;		 -> main@mat(96), 
 19306 ;; Auto vars:     Size  Location     Type
 19307 ;;  d_numbers      16   18[COMRAM] int [8]
 19308 ;;  i               2   38[COMRAM] short 
 19309 ;;  j               2   36[COMRAM] short 
 19310 ;;  k               2   34[COMRAM] short 
 19311 ;; Return value:  Size  Location     Type
 19312 ;;                  1    wreg      void 
 19313 ;; Registers used:
 19314 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19315 ;; Tracked objects:
 19316 ;;		On entry : 0/0
 19317 ;;		On exit  : 0/0
 19318 ;;		Unchanged: 0/0
 19319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19320 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19321 ;;      Locals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19322 ;;      Temps:         10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19323 ;;      Totals:        34       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19324 ;;Total ram usage:       34 bytes
 19325 ;; Hardware stack levels used:    1
 19326 ;; Hardware stack levels required when called:    1
 19327 ;; This function calls:
 19328 ;;		___wmul
 19329 ;; This function is called by:
 19330 ;;		_main
 19331 ;; This function uses a non-reentrant model
 19332 ;;
 19333                           
 19334                           	psect	text42
 19335  00B922                     __ptext42:
 19336                           	opt stack 0
 19337  00B922                     _array_transition:
 19338                           	opt stack 29
 19339                           
 19340                           ;add_functions.c: 30: short int i, j, k;
 19341                           ;add_functions.c: 31: int d_numbers[8] = {0};
 19342                           
 19343                           ; BSR set to: 2
 19344                           ;incstack = 0
 19345  00B922  EE23  F0B0         	lfsr	2,array_transition@F3190
 19346  00B926  EE10  F013         	lfsr	1,array_transition@d_numbers
 19347  00B92A  0E0F               	movlw	15
 19348  00B92C                     u6041:
 19349  00B92C  CFDB FFE3          	movff	plusw2,plusw1
 19350  00B930  06E8               	decf	wreg,f,c
 19351  00B932  E2FC               	bc	u6041
 19352                           
 19353                           ;add_functions.c: 33: for (i = 0; i < 8; i++){
 19354  00B934  0E00               	movlw	0
 19355  00B936  6E28               	movwf	array_transition@i+1,c
 19356  00B938  0E00               	movlw	0
 19357  00B93A  6E27               	movwf	array_transition@i,c
 19358  00B93C                     l6616:
 19359  00B93C  BE28               	btfsc	array_transition@i+1,7,c
 19360  00B93E  D006               	goto	l1101
 19361  00B940  5028               	movf	array_transition@i+1,w,c
 19362  00B942  E145               	bnz	l6638
 19363  00B944  0E08               	movlw	8
 19364  00B946  5C27               	subwf	array_transition@i,w,c
 19365  00B948  B0D8               	btfsc	status,0,c
 19366  00B94A  D041               	goto	u6080
 19367  00B94C                     l1101:
 19368                           
 19369                           ;add_functions.c: 34: d_numbers[i] = 0;
 19370  00B94C  90D8               	bcf	status,0,c
 19371  00B94E  3427               	rlcf	array_transition@i,w,c
 19372  00B950  6ED9               	movwf	fsr2l,c
 19373  00B952  3428               	rlcf	array_transition@i+1,w,c
 19374  00B954  6EDA               	movwf	fsr2h,c
 19375  00B956  0E13               	movlw	low array_transition@d_numbers
 19376  00B958  26D9               	addwf	fsr2l,f,c
 19377  00B95A  0E00               	movlw	high array_transition@d_numbers
 19378  00B95C  22DA               	addwfc	fsr2h,f,c
 19379  00B95E  0E00               	movlw	0
 19380  00B960  6EDE               	movwf	postinc2,c
 19381  00B962  0E00               	movlw	0
 19382  00B964  6EDD               	movwf	postdec2,c
 19383                           
 19384                           ;add_functions.c: 35: for (j = 0; j < 4; j++){
 19385  00B966  0E00               	movlw	0
 19386  00B968  6E26               	movwf	array_transition@j+1,c
 19387  00B96A  0E00               	movlw	0
 19388  00B96C  6E25               	movwf	array_transition@j,c
 19389  00B96E                     l6624:
 19390  00B96E  BE26               	btfsc	array_transition@j+1,7,c
 19391  00B970  D006               	goto	l1103
 19392  00B972  5026               	movf	array_transition@j+1,w,c
 19393  00B974  E129               	bnz	l6634
 19394  00B976  0E04               	movlw	4
 19395  00B978  5C25               	subwf	array_transition@j,w,c
 19396  00B97A  B0D8               	btfsc	status,0,c
 19397  00B97C  D025               	goto	u6070
 19398  00B97E                     l1103:
 19399                           
 19400                           ;add_functions.c: 36: EEPROM_mat[i][j] = 0;}}
 19401  00B97E  C027  F009         	movff	array_transition@i,??_array_transition
 19402  00B982  C028  F00A         	movff	array_transition@i+1,??_array_transition+1
 19403  00B986  90D8               	bcf	status,0,c
 19404  00B988  3609               	rlcf	??_array_transition,f,c
 19405  00B98A  360A               	rlcf	??_array_transition+1,f,c
 19406  00B98C  90D8               	bcf	status,0,c
 19407  00B98E  3609               	rlcf	??_array_transition,f,c
 19408  00B990  360A               	rlcf	??_array_transition+1,f,c
 19409  00B992  90D8               	bcf	status,0,c
 19410  00B994  3609               	rlcf	??_array_transition,f,c
 19411  00B996  360A               	rlcf	??_array_transition+1,f,c
 19412  00B998  0E60               	movlw	low _EEPROM_mat
 19413  00B99A  6E0B               	movwf	(??_array_transition+2)& (0+255),c
 19414  00B99C  0E03               	movlw	high _EEPROM_mat
 19415  00B99E  6E0C               	movwf	(??_array_transition+3)& (0+255),c
 19416  00B9A0  5009               	movf	??_array_transition,w,c
 19417  00B9A2  260B               	addwf	??_array_transition+2,f,c
 19418  00B9A4  500A               	movf	??_array_transition+1,w,c
 19419  00B9A6  220C               	addwfc	??_array_transition+3,f,c
 19420  00B9A8  90D8               	bcf	status,0,c
 19421  00B9AA  3425               	rlcf	array_transition@j,w,c
 19422  00B9AC  6ED9               	movwf	fsr2l,c
 19423  00B9AE  3426               	rlcf	array_transition@j+1,w,c
 19424  00B9B0  6EDA               	movwf	fsr2h,c
 19425  00B9B2  500B               	movf	??_array_transition+2,w,c
 19426  00B9B4  26D9               	addwf	fsr2l,f,c
 19427  00B9B6  500C               	movf	??_array_transition+3,w,c
 19428  00B9B8  22DA               	addwfc	fsr2h,f,c
 19429  00B9BA  0E00               	movlw	0
 19430  00B9BC  6EDE               	movwf	postinc2,c
 19431  00B9BE  0E00               	movlw	0
 19432  00B9C0  6EDD               	movwf	postdec2,c
 19433  00B9C2  4A25               	infsnz	array_transition@j,f,c
 19434  00B9C4  2A26               	incf	array_transition@j+1,f,c
 19435  00B9C6  D7D3               	goto	l6624
 19436  00B9C8                     u6070:
 19437  00B9C8                     l6634:
 19438  00B9C8  4A27               	infsnz	array_transition@i,f,c
 19439  00B9CA  2A28               	incf	array_transition@i+1,f,c
 19440  00B9CC  D7B7               	goto	l6616
 19441  00B9CE                     u6080:
 19442  00B9CE                     l6638:
 19443                           
 19444                           ;add_functions.c: 38: for (i = 0; i < 16; i++){
 19445  00B9CE  0E00               	movlw	0
 19446  00B9D0  6E28               	movwf	array_transition@i+1,c
 19447  00B9D2  0E00               	movlw	0
 19448  00B9D4  6E27               	movwf	array_transition@i,c
 19449  00B9D6  BE28               	btfsc	array_transition@i+1,7,c
 19450  00B9D8  D008               	goto	l1105
 19451  00B9DA  5028               	movf	array_transition@i+1,w,c
 19452  00B9DC  E105               	bnz	u6090
 19453  00B9DE  0E10               	movlw	16
 19454  00B9E0  5C27               	subwf	array_transition@i,w,c
 19455  00B9E2  B0D8               	btfsc	status,0,c
 19456  00B9E4  D085               	goto	u6160
 19457  00B9E6  D001               	goto	l1105
 19458  00B9E8                     u6090:
 19459  00B9E8  D083               	goto	u6160
 19460  00B9EA                     l1105:
 19461                           
 19462                           ;add_functions.c: 39: if ((mat[i][0]!=0)||(mat[i][1]!=0)||(mat[i][2]!=0)){
 19463  00B9EA  C027  F001         	movff	array_transition@i,___wmul@multiplier
 19464  00B9EE  C028  F002         	movff	array_transition@i+1,___wmul@multiplier+1
 19465  00B9F2  0E00               	movlw	0
 19466  00B9F4  6E04               	movwf	___wmul@multiplicand+1,c
 19467  00B9F6  0E06               	movlw	6
 19468  00B9F8  6E03               	movwf	___wmul@multiplicand,c
 19469  00B9FA  ECB7  F051         	call	___wmul	;wreg free
 19470  00B9FE  5001               	movf	?___wmul,w,c
 19471  00BA00  2407               	addwf	array_transition@mat,w,c
 19472  00BA02  6ED9               	movwf	fsr2l,c
 19473  00BA04  5002               	movf	?___wmul+1,w,c
 19474  00BA06  2008               	addwfc	array_transition@mat+1,w,c
 19475  00BA08  6EDA               	movwf	fsr2h,c
 19476  00BA0A  50DE               	movf	postinc2,w,c
 19477  00BA0C  10DE               	iorwf	postinc2,w,c
 19478  00BA0E  A4D8               	btfss	status,2,c
 19479  00BA10  D038               	goto	u6120
 19480  00BA12  C027  F001         	movff	array_transition@i,___wmul@multiplier
 19481  00BA16  C028  F002         	movff	array_transition@i+1,___wmul@multiplier+1
 19482  00BA1A  0E00               	movlw	0
 19483  00BA1C  6E04               	movwf	___wmul@multiplicand+1,c
 19484  00BA1E  0E06               	movlw	6
 19485  00BA20  6E03               	movwf	___wmul@multiplicand,c
 19486  00BA22  ECB7  F051         	call	___wmul	;wreg free
 19487  00BA26  C007  F009         	movff	array_transition@mat,??_array_transition
 19488  00BA2A  C008  F00A         	movff	array_transition@mat+1,??_array_transition+1
 19489  00BA2E  5001               	movf	?___wmul,w,c
 19490  00BA30  2609               	addwf	??_array_transition,f,c
 19491  00BA32  5002               	movf	?___wmul+1,w,c
 19492  00BA34  220A               	addwfc	??_array_transition+1,f,c
 19493  00BA36  0E02               	movlw	2
 19494  00BA38  2409               	addwf	??_array_transition,w,c
 19495  00BA3A  6ED9               	movwf	fsr2l,c
 19496  00BA3C  0E00               	movlw	0
 19497  00BA3E  200A               	addwfc	??_array_transition+1,w,c
 19498  00BA40  6EDA               	movwf	fsr2h,c
 19499  00BA42  50DE               	movf	postinc2,w,c
 19500  00BA44  10DE               	iorwf	postinc2,w,c
 19501  00BA46  A4D8               	btfss	status,2,c
 19502  00BA48  D01C               	goto	u6120
 19503  00BA4A  C027  F001         	movff	array_transition@i,___wmul@multiplier
 19504  00BA4E  C028  F002         	movff	array_transition@i+1,___wmul@multiplier+1
 19505  00BA52  0E00               	movlw	0
 19506  00BA54  6E04               	movwf	___wmul@multiplicand+1,c
 19507  00BA56  0E06               	movlw	6
 19508  00BA58  6E03               	movwf	___wmul@multiplicand,c
 19509  00BA5A  ECB7  F051         	call	___wmul	;wreg free
 19510  00BA5E  C007  F009         	movff	array_transition@mat,??_array_transition
 19511  00BA62  C008  F00A         	movff	array_transition@mat+1,??_array_transition+1
 19512  00BA66  5001               	movf	?___wmul,w,c
 19513  00BA68  2609               	addwf	??_array_transition,f,c
 19514  00BA6A  5002               	movf	?___wmul+1,w,c
 19515  00BA6C  220A               	addwfc	??_array_transition+1,f,c
 19516  00BA6E  0E04               	movlw	4
 19517  00BA70  2409               	addwf	??_array_transition,w,c
 19518  00BA72  6ED9               	movwf	fsr2l,c
 19519  00BA74  0E00               	movlw	0
 19520  00BA76  200A               	addwfc	??_array_transition+1,w,c
 19521  00BA78  6EDA               	movwf	fsr2h,c
 19522  00BA7A  50DE               	movf	postinc2,w,c
 19523  00BA7C  10DE               	iorwf	postinc2,w,c
 19524  00BA7E  B4D8               	btfsc	status,2,c
 19525  00BA80  D030               	goto	u6150
 19526  00BA82                     u6120:
 19527                           
 19528                           ;add_functions.c: 40: for (k = 0; k < 8; k++){
 19529  00BA82  0E00               	movlw	0
 19530  00BA84  6E24               	movwf	array_transition@k+1,c
 19531  00BA86  0E00               	movlw	0
 19532  00BA88  6E23               	movwf	array_transition@k,c
 19533  00BA8A                     l6652:
 19534  00BA8A  BE24               	btfsc	array_transition@k+1,7,c
 19535  00BA8C  D006               	goto	l1110
 19536  00BA8E  5024               	movf	array_transition@k+1,w,c
 19537  00BA90  E128               	bnz	l6664
 19538  00BA92  0E08               	movlw	8
 19539  00BA94  5C23               	subwf	array_transition@k,w,c
 19540  00BA96  B0D8               	btfsc	status,0,c
 19541  00BA98  D024               	goto	u6150
 19542  00BA9A                     l1110:
 19543                           
 19544                           ;add_functions.c: 41: if (d_numbers[k] == 0){
 19545  00BA9A  90D8               	bcf	status,0,c
 19546  00BA9C  3423               	rlcf	array_transition@k,w,c
 19547  00BA9E  6ED9               	movwf	fsr2l,c
 19548  00BAA0  3424               	rlcf	array_transition@k+1,w,c
 19549  00BAA2  6EDA               	movwf	fsr2h,c
 19550  00BAA4  0E13               	movlw	low array_transition@d_numbers
 19551  00BAA6  26D9               	addwf	fsr2l,f,c
 19552  00BAA8  0E00               	movlw	high array_transition@d_numbers
 19553  00BAAA  22DA               	addwfc	fsr2h,f,c
 19554  00BAAC  50DE               	movf	postinc2,w,c
 19555  00BAAE  10DE               	iorwf	postinc2,w,c
 19556  00BAB0  A4D8               	btfss	status,2,c
 19557  00BAB2  D014               	goto	l1112
 19558                           
 19559                           ;add_functions.c: 42: d_numbers[k] = (i + 1);
 19560  00BAB4  0E01               	movlw	1
 19561  00BAB6  2427               	addwf	array_transition@i,w,c
 19562  00BAB8  6E09               	movwf	??_array_transition& (0+255),c
 19563  00BABA  0E00               	movlw	0
 19564  00BABC  2028               	addwfc	array_transition@i+1,w,c
 19565  00BABE  6E0A               	movwf	(??_array_transition+1)& (0+255),c
 19566  00BAC0  90D8               	bcf	status,0,c
 19567  00BAC2  3423               	rlcf	array_transition@k,w,c
 19568  00BAC4  6ED9               	movwf	fsr2l,c
 19569  00BAC6  3424               	rlcf	array_transition@k+1,w,c
 19570  00BAC8  6EDA               	movwf	fsr2h,c
 19571  00BACA  0E13               	movlw	low array_transition@d_numbers
 19572  00BACC  26D9               	addwf	fsr2l,f,c
 19573  00BACE  0E00               	movlw	high array_transition@d_numbers
 19574  00BAD0  22DA               	addwfc	fsr2h,f,c
 19575  00BAD2  C009  FFDE         	movff	??_array_transition,postinc2
 19576  00BAD6  C00A  FFDD         	movff	??_array_transition+1,postdec2
 19577                           
 19578                           ;add_functions.c: 43: break;}}}}
 19579  00BADA  D003               	goto	u6150
 19580  00BADC                     l1112:
 19581  00BADC  4A23               	infsnz	array_transition@k,f,c
 19582  00BADE  2A24               	incf	array_transition@k+1,f,c
 19583  00BAE0  D7D4               	goto	l6652
 19584  00BAE2                     u6150:
 19585  00BAE2                     l6664:
 19586  00BAE2  4A27               	infsnz	array_transition@i,f,c
 19587  00BAE4  2A28               	incf	array_transition@i+1,f,c
 19588  00BAE6  BE28               	btfsc	array_transition@i+1,7,c
 19589  00BAE8  D780               	goto	l1105
 19590  00BAEA  5028               	movf	array_transition@i+1,w,c
 19591  00BAEC  E101               	bnz	l6668
 19592  00BAEE  D777               	goto	L18
 19593  00BAF0                     u6160:
 19594  00BAF0                     l6668:
 19595                           
 19596                           ;add_functions.c: 45: for (i = 0; i < 8; i++){
 19597  00BAF0  0E00               	movlw	0
 19598  00BAF2  6E28               	movwf	array_transition@i+1,c
 19599  00BAF4  0E00               	movlw	0
 19600  00BAF6  6E27               	movwf	array_transition@i,c
 19601  00BAF8  BE28               	btfsc	array_transition@i+1,7,c
 19602  00BAFA  D008               	goto	l1113
 19603  00BAFC  5028               	movf	array_transition@i+1,w,c
 19604  00BAFE  E105               	bnz	u6170
 19605  00BB00  0E08               	movlw	8
 19606  00BB02  5C27               	subwf	array_transition@i,w,c
 19607  00BB04  B0D8               	btfsc	status,0,c
 19608  00BB06  0012               	return	
 19609  00BB08  D001               	goto	l1113
 19610  00BB0A                     u6170:
 19611  00BB0A  0012               	return	
 19612  00BB0C                     l1113:
 19613                           
 19614                           ;add_functions.c: 46: if (d_numbers[i] != 0){
 19615  00BB0C  90D8               	bcf	status,0,c
 19616  00BB0E  3427               	rlcf	array_transition@i,w,c
 19617  00BB10  6ED9               	movwf	fsr2l,c
 19618  00BB12  3428               	rlcf	array_transition@i+1,w,c
 19619  00BB14  6EDA               	movwf	fsr2h,c
 19620  00BB16  0E13               	movlw	low array_transition@d_numbers
 19621  00BB18  26D9               	addwf	fsr2l,f,c
 19622  00BB1A  0E00               	movlw	high array_transition@d_numbers
 19623  00BB1C  22DA               	addwfc	fsr2h,f,c
 19624  00BB1E  50DE               	movf	postinc2,w,c
 19625  00BB20  10DE               	iorwf	postinc2,w,c
 19626  00BB22  B4D8               	btfsc	status,2,c
 19627  00BB24  D083               	goto	u6200
 19628                           
 19629                           ;add_functions.c: 47: EEPROM_mat[i][0] = d_numbers[i];
 19630  00BB26  90D8               	bcf	status,0,c
 19631  00BB28  3427               	rlcf	array_transition@i,w,c
 19632  00BB2A  6ED9               	movwf	fsr2l,c
 19633  00BB2C  3428               	rlcf	array_transition@i+1,w,c
 19634  00BB2E  6EDA               	movwf	fsr2h,c
 19635  00BB30  0E13               	movlw	low array_transition@d_numbers
 19636  00BB32  26D9               	addwf	fsr2l,f,c
 19637  00BB34  0E00               	movlw	high array_transition@d_numbers
 19638  00BB36  22DA               	addwfc	fsr2h,f,c
 19639  00BB38  C027  F009         	movff	array_transition@i,??_array_transition
 19640  00BB3C  C028  F00A         	movff	array_transition@i+1,??_array_transition+1
 19641  00BB40  90D8               	bcf	status,0,c
 19642  00BB42  3609               	rlcf	??_array_transition,f,c
 19643  00BB44  360A               	rlcf	??_array_transition+1,f,c
 19644  00BB46  90D8               	bcf	status,0,c
 19645  00BB48  3609               	rlcf	??_array_transition,f,c
 19646  00BB4A  360A               	rlcf	??_array_transition+1,f,c
 19647  00BB4C  90D8               	bcf	status,0,c
 19648  00BB4E  3609               	rlcf	??_array_transition,f,c
 19649  00BB50  360A               	rlcf	??_array_transition+1,f,c
 19650  00BB52  0E60               	movlw	low _EEPROM_mat
 19651  00BB54  2409               	addwf	??_array_transition,w,c
 19652  00BB56  6EE1               	movwf	fsr1l,c
 19653  00BB58  0E03               	movlw	high _EEPROM_mat
 19654  00BB5A  200A               	addwfc	??_array_transition+1,w,c
 19655  00BB5C  6EE2               	movwf	fsr1h,c
 19656  00BB5E  CFDE FFE6          	movff	postinc2,postinc1
 19657  00BB62  CFDD FFE5          	movff	postdec2,postdec1
 19658                           
 19659                           ;add_functions.c: 48: for (j = 0; j < 3; j++){
 19660  00BB66  0E00               	movlw	0
 19661  00BB68  6E26               	movwf	array_transition@j+1,c
 19662  00BB6A  0E00               	movlw	0
 19663  00BB6C  6E25               	movwf	array_transition@j,c
 19664  00BB6E                     l6680:
 19665  00BB6E  BE26               	btfsc	array_transition@j+1,7,c
 19666  00BB70  D006               	goto	l1116
 19667  00BB72  5026               	movf	array_transition@j+1,w,c
 19668  00BB74  E15B               	bnz	l6690
 19669  00BB76  0E03               	movlw	3
 19670  00BB78  5C25               	subwf	array_transition@j,w,c
 19671  00BB7A  B0D8               	btfsc	status,0,c
 19672  00BB7C  D057               	goto	u6200
 19673  00BB7E                     l1116:
 19674                           
 19675                           ;add_functions.c: 49: EEPROM_mat[i][j+1] = mat[(d_numbers[i]-1)][j];}}}
 19676  00BB7E  90D8               	bcf	status,0,c
 19677  00BB80  3427               	rlcf	array_transition@i,w,c
 19678  00BB82  6ED9               	movwf	fsr2l,c
 19679  00BB84  3428               	rlcf	array_transition@i+1,w,c
 19680  00BB86  6EDA               	movwf	fsr2h,c
 19681  00BB88  0E13               	movlw	low array_transition@d_numbers
 19682  00BB8A  26D9               	addwf	fsr2l,f,c
 19683  00BB8C  0E00               	movlw	high array_transition@d_numbers
 19684  00BB8E  22DA               	addwfc	fsr2h,f,c
 19685  00BB90  CFDE F009          	movff	postinc2,??_array_transition
 19686  00BB94  CFDD F00A          	movff	postdec2,??_array_transition+1
 19687  00BB98  0EFF               	movlw	255
 19688  00BB9A  2409               	addwf	??_array_transition,w,c
 19689  00BB9C  6E01               	movwf	___wmul@multiplier,c
 19690  00BB9E  0EFF               	movlw	255
 19691  00BBA0  200A               	addwfc	??_array_transition+1,w,c
 19692  00BBA2  6E02               	movwf	___wmul@multiplier+1,c
 19693  00BBA4  0E00               	movlw	0
 19694  00BBA6  6E04               	movwf	___wmul@multiplicand+1,c
 19695  00BBA8  0E06               	movlw	6
 19696  00BBAA  6E03               	movwf	___wmul@multiplicand,c
 19697  00BBAC  ECB7  F051         	call	___wmul	;wreg free
 19698  00BBB0  C007  F00B         	movff	array_transition@mat,??_array_transition+2
 19699  00BBB4  C008  F00C         	movff	array_transition@mat+1,??_array_transition+3
 19700  00BBB8  5001               	movf	?___wmul,w,c
 19701  00BBBA  260B               	addwf	??_array_transition+2,f,c
 19702  00BBBC  5002               	movf	?___wmul+1,w,c
 19703  00BBBE  220C               	addwfc	??_array_transition+3,f,c
 19704  00BBC0  90D8               	bcf	status,0,c
 19705  00BBC2  3425               	rlcf	array_transition@j,w,c
 19706  00BBC4  6ED9               	movwf	fsr2l,c
 19707  00BBC6  3426               	rlcf	array_transition@j+1,w,c
 19708  00BBC8  6EDA               	movwf	fsr2h,c
 19709  00BBCA  500B               	movf	??_array_transition+2,w,c
 19710  00BBCC  26D9               	addwf	fsr2l,f,c
 19711  00BBCE  500C               	movf	??_array_transition+3,w,c
 19712  00BBD0  22DA               	addwfc	fsr2h,f,c
 19713  00BBD2  C027  F00D         	movff	array_transition@i,??_array_transition+4
 19714  00BBD6  C028  F00E         	movff	array_transition@i+1,??_array_transition+5
 19715  00BBDA  90D8               	bcf	status,0,c
 19716  00BBDC  360D               	rlcf	??_array_transition+4,f,c
 19717  00BBDE  360E               	rlcf	??_array_transition+5,f,c
 19718  00BBE0  90D8               	bcf	status,0,c
 19719  00BBE2  360D               	rlcf	??_array_transition+4,f,c
 19720  00BBE4  360E               	rlcf	??_array_transition+5,f,c
 19721  00BBE6  90D8               	bcf	status,0,c
 19722  00BBE8  360D               	rlcf	??_array_transition+4,f,c
 19723  00BBEA  360E               	rlcf	??_array_transition+5,f,c
 19724  00BBEC  C025  F00F         	movff	array_transition@j,??_array_transition+6
 19725  00BBF0  C026  F010         	movff	array_transition@j+1,??_array_transition+7
 19726  00BBF4  90D8               	bcf	status,0,c
 19727  00BBF6  360F               	rlcf	??_array_transition+6,f,c
 19728  00BBF8  3610               	rlcf	??_array_transition+7,f,c
 19729  00BBFA  0E02               	movlw	2
 19730  00BBFC  260F               	addwf	??_array_transition+6,f,c
 19731  00BBFE  0E00               	movlw	0
 19732  00BC00  2210               	addwfc	??_array_transition+7,f,c
 19733  00BC02  0E60               	movlw	low _EEPROM_mat
 19734  00BC04  6E11               	movwf	(??_array_transition+8)& (0+255),c
 19735  00BC06  0E03               	movlw	high _EEPROM_mat
 19736  00BC08  6E12               	movwf	(??_array_transition+9)& (0+255),c
 19737  00BC0A  500F               	movf	??_array_transition+6,w,c
 19738  00BC0C  2611               	addwf	??_array_transition+8,f,c
 19739  00BC0E  5010               	movf	??_array_transition+7,w,c
 19740  00BC10  2212               	addwfc	??_array_transition+9,f,c
 19741  00BC12  500D               	movf	??_array_transition+4,w,c
 19742  00BC14  2411               	addwf	??_array_transition+8,w,c
 19743  00BC16  6EE1               	movwf	fsr1l,c
 19744  00BC18  500E               	movf	??_array_transition+5,w,c
 19745  00BC1A  2012               	addwfc	??_array_transition+9,w,c
 19746  00BC1C  6EE2               	movwf	fsr1h,c
 19747  00BC1E  CFDE FFE6          	movff	postinc2,postinc1
 19748  00BC22  CFDD FFE5          	movff	postdec2,postdec1
 19749  00BC26  4A25               	infsnz	array_transition@j,f,c
 19750  00BC28  2A26               	incf	array_transition@j+1,f,c
 19751  00BC2A  D7A1               	goto	l6680
 19752  00BC2C                     u6200:
 19753  00BC2C                     l6690:
 19754  00BC2C  4A27               	infsnz	array_transition@i,f,c
 19755  00BC2E  2A28               	incf	array_transition@i+1,f,c
 19756  00BC30  BE28               	btfsc	array_transition@i+1,7,c
 19757  00BC32  D76C               	goto	l1113
 19758  00BC34  5028               	movf	array_transition@i+1,w,c
 19759  00BC36  E101               	bnz	l1118
 19760  00BC38  D763               	goto	L19
 19761  00BC3A                     l1118:
 19762  00BC3A  0012               	return		;funcret
 19763  00BC3C                     __end_of_array_transition:
 19764                           	opt stack 0
 19765                           tblptru	equ	0xFF8
 19766                           tblptrh	equ	0xFF7
 19767                           tblptrl	equ	0xFF6
 19768                           tablat	equ	0xFF5
 19769                           prodh	equ	0xFF4
 19770                           prodl	equ	0xFF3
 19771                           intcon	equ	0xFF2
 19772                           indf0	equ	0xFEF
 19773                           postinc0	equ	0xFEE
 19774                           fsr0h	equ	0xFEA
 19775                           fsr0l	equ	0xFE9
 19776                           wreg	equ	0xFE8
 19777                           postinc1	equ	0xFE6
 19778                           postdec1	equ	0xFE5
 19779                           plusw1	equ	0xFE3
 19780                           fsr1h	equ	0xFE2
 19781                           fsr1l	equ	0xFE1
 19782                           indf2	equ	0xFDF
 19783                           postinc2	equ	0xFDE
 19784                           postdec2	equ	0xFDD
 19785                           plusw2	equ	0xFDB
 19786                           fsr2h	equ	0xFDA
 19787                           fsr2l	equ	0xFD9
 19788                           status	equ	0xFD8
 19789                           
 19790 ;; *************** function ___wmul *****************
 19791 ;; Defined at:
 19792 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
 19793 ;; Parameters:    Size  Location     Type
 19794 ;;  multiplier      2    0[COMRAM] unsigned int 
 19795 ;;  multiplicand    2    2[COMRAM] unsigned int 
 19796 ;; Auto vars:     Size  Location     Type
 19797 ;;  product         2    4[COMRAM] unsigned int 
 19798 ;; Return value:  Size  Location     Type
 19799 ;;                  2    0[COMRAM] unsigned int 
 19800 ;; Registers used:
 19801 ;;		wreg, status,2, status,0, prodl, prodh
 19802 ;; Tracked objects:
 19803 ;;		On entry : 0/0
 19804 ;;		On exit  : 0/0
 19805 ;;		Unchanged: 0/0
 19806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19807 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19808 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19809 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19810 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19811 ;;Total ram usage:        6 bytes
 19812 ;; Hardware stack levels used:    1
 19813 ;; This function calls:
 19814 ;;		Nothing
 19815 ;; This function is called by:
 19816 ;;		_main
 19817 ;;		_package_food
 19818 ;;		_sensor_row_check
 19819 ;;		_load_mech
 19820 ;;		_initialize
 19821 ;;		_finalize
 19822 ;;		_array_transition
 19823 ;;		_set_total_init_time
 19824 ;;		_comp_time_difference
 19825 ;;		_comp_EEPROM_time
 19826 ;;		_printf
 19827 ;; This function uses a non-reentrant model
 19828 ;;
 19829                           
 19830                           	psect	text43
 19831  00A36E                     __ptext43:
 19832                           	opt stack 0
 19833  00A36E                     ___wmul:
 19834                           	opt stack 29
 19835                           
 19836                           ;incstack = 0
 19837  00A36E  5001               	movf	___wmul@multiplier,w,c
 19838  00A370  0203               	mulwf	___wmul@multiplicand,c
 19839  00A372  CFF3 F005          	movff	prodl,___wmul@product
 19840  00A376  CFF4 F006          	movff	prodh,___wmul@product+1
 19841  00A37A  5001               	movf	___wmul@multiplier,w,c
 19842  00A37C  0204               	mulwf	___wmul@multiplicand+1,c
 19843  00A37E  50F3               	movf	prodl,w,c
 19844  00A380  2606               	addwf	___wmul@product+1,f,c
 19845  00A382  5002               	movf	___wmul@multiplier+1,w,c
 19846  00A384  0203               	mulwf	___wmul@multiplicand,c
 19847  00A386  50F3               	movf	prodl,w,c
 19848  00A388  2606               	addwf	___wmul@product+1,f,c
 19849  00A38A  C005  F001         	movff	___wmul@product,?___wmul
 19850  00A38E  C006  F002         	movff	___wmul@product+1,?___wmul+1
 19851  00A392  0012               	return	
 19852  00A394                     __end_of___wmul:
 19853                           	opt stack 0
 19854                           tblptru	equ	0xFF8
 19855                           tblptrh	equ	0xFF7
 19856                           tblptrl	equ	0xFF6
 19857                           tablat	equ	0xFF5
 19858                           prodh	equ	0xFF4
 19859                           prodl	equ	0xFF3
 19860                           intcon	equ	0xFF2
 19861                           indf0	equ	0xFEF
 19862                           postinc0	equ	0xFEE
 19863                           fsr0h	equ	0xFEA
 19864                           fsr0l	equ	0xFE9
 19865                           wreg	equ	0xFE8
 19866                           postinc1	equ	0xFE6
 19867                           postdec1	equ	0xFE5
 19868                           plusw1	equ	0xFE3
 19869                           fsr1h	equ	0xFE2
 19870                           fsr1l	equ	0xFE1
 19871                           indf2	equ	0xFDF
 19872                           postinc2	equ	0xFDE
 19873                           postdec2	equ	0xFDD
 19874                           plusw2	equ	0xFDB
 19875                           fsr2h	equ	0xFDA
 19876                           fsr2l	equ	0xFD9
 19877                           status	equ	0xFD8
 19878                           
 19879 ;; *************** function _UART_Init *****************
 19880 ;; Defined at:
 19881 ;;		line 199 in file "../../AER201 Sample Codes/PIC DevBugger Sample Codes/10_PIC-Arduino/UART/PIC_UART_Arduino.X/UART_P
      +IC.c"
 19882 ;; Parameters:    Size  Location     Type
 19883 ;;  baud            4   14[COMRAM] long 
 19884 ;; Auto vars:     Size  Location     Type
 19885 ;;		None
 19886 ;; Return value:  Size  Location     Type
 19887 ;;                  1    wreg      void 
 19888 ;; Registers used:
 19889 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 19890 ;; Tracked objects:
 19891 ;;		On entry : 0/0
 19892 ;;		On exit  : 0/0
 19893 ;;		Unchanged: 0/0
 19894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19895 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19896 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19897 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19898 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19899 ;;Total ram usage:        8 bytes
 19900 ;; Hardware stack levels used:    1
 19901 ;; Hardware stack levels required when called:    1
 19902 ;; This function calls:
 19903 ;;		___aldiv
 19904 ;; This function is called by:
 19905 ;;		_main
 19906 ;; This function uses a non-reentrant model
 19907 ;;
 19908                           
 19909                           	psect	text44
 19910  00A768                     __ptext44:
 19911                           	opt stack 0
 19912  00A768                     _UART_Init:
 19913                           	opt stack 29
 19914                           
 19915                           ;UART_PIC.c: 212: SPBRG = (unsigned char)((40000000 / (64 * baud)) - 1);
 19916                           
 19917                           ;incstack = 0
 19918  00A768  0E00               	movlw	0
 19919  00A76A  6E01               	movwf	___aldiv@dividend,c
 19920  00A76C  0E5A               	movlw	90
 19921  00A76E  6E02               	movwf	___aldiv@dividend+1,c
 19922  00A770  0E62               	movlw	98
 19923  00A772  6E03               	movwf	___aldiv@dividend+2,c
 19924  00A774  0E02               	movlw	2
 19925  00A776  6E04               	movwf	___aldiv@dividend+3,c
 19926  00A778  C00F  F013         	movff	UART_Init@baud,??_UART_Init
 19927  00A77C  C010  F014         	movff	UART_Init@baud+1,??_UART_Init+1
 19928  00A780  C011  F015         	movff	UART_Init@baud+2,??_UART_Init+2
 19929  00A784  C012  F016         	movff	UART_Init@baud+3,??_UART_Init+3
 19930  00A788  0E06               	movlw	6
 19931  00A78A                     u5875:
 19932  00A78A  90D8               	bcf	status,0,c
 19933  00A78C  3613               	rlcf	??_UART_Init,f,c
 19934  00A78E  3614               	rlcf	??_UART_Init+1,f,c
 19935  00A790  3615               	rlcf	??_UART_Init+2,f,c
 19936  00A792  3616               	rlcf	??_UART_Init+3,f,c
 19937  00A794  2EE8               	decfsz	wreg,f,c
 19938  00A796  D7F9               	goto	u5875
 19939  00A798  C013  F005         	movff	??_UART_Init,___aldiv@divisor
 19940  00A79C  C014  F006         	movff	??_UART_Init+1,___aldiv@divisor+1
 19941  00A7A0  C015  F007         	movff	??_UART_Init+2,___aldiv@divisor+2
 19942  00A7A4  C016  F008         	movff	??_UART_Init+3,___aldiv@divisor+3
 19943  00A7A8  EC24  F055         	call	___aldiv	;wreg free
 19944  00A7AC  0401               	decf	?___aldiv,w,c
 19945  00A7AE  6EAF               	movwf	4015,c	;volatile
 19946                           
 19947                           ;UART_PIC.c: 215: TXSTAbits.TX9 = 0;
 19948  00A7B0  9CAC               	bcf	4012,6,c	;volatile
 19949                           
 19950                           ;UART_PIC.c: 216: TXSTAbits.SYNC = 0;
 19951  00A7B2  98AC               	bcf	4012,4,c	;volatile
 19952                           
 19953                           ;UART_PIC.c: 217: TXSTAbits.TXEN = 1;
 19954  00A7B4  8AAC               	bsf	4012,5,c	;volatile
 19955                           
 19956                           ;UART_PIC.c: 220: RCSTAbits.RX9 = 0;
 19957  00A7B6  9CAB               	bcf	4011,6,c	;volatile
 19958                           
 19959                           ;UART_PIC.c: 221: RCSTAbits.CREN = 1;
 19960  00A7B8  88AB               	bsf	4011,4,c	;volatile
 19961                           
 19962                           ;UART_PIC.c: 224: UART -> _stateTX = UART_STATE_READY;
 19963  00A7BA  0102               	movlb	2	; () banked
 19964  00A7BC  EE20 F008          	lfsr	2,8
 19965  00A7C0  5194               	movf	_UART& (0+255),w,b
 19966  00A7C2  26D9               	addwf	fsr2l,f,c
 19967  00A7C4  5195               	movf	(_UART+1)& (0+255),w,b
 19968  00A7C6  22DA               	addwfc	fsr2h,f,c
 19969  00A7C8  0E01               	movlw	1
 19970  00A7CA  6EDF               	movwf	indf2,c
 19971                           
 19972                           ; BSR set to: 2
 19973                           ;UART_PIC.c: 225: UART -> _stateRX = UART_STATE_READY;
 19974  00A7CC  EE20 F009          	lfsr	2,9
 19975  00A7D0  5194               	movf	_UART& (0+255),w,b
 19976  00A7D2  26D9               	addwf	fsr2l,f,c
 19977  00A7D4  5195               	movf	(_UART+1)& (0+255),w,b
 19978  00A7D6  22DA               	addwfc	fsr2h,f,c
 19979  00A7D8  0E01               	movlw	1
 19980  00A7DA  6EDF               	movwf	indf2,c
 19981                           
 19982                           ; BSR set to: 2
 19983                           ;UART_PIC.c: 228: uart._dataRX = arr_dataRX;
 19984  00A7DC  0ED0               	movlw	low _arr_dataRX
 19985  00A7DE  6FDC               	movwf	(_uart+4)& (0+255),b	;volatile
 19986  00A7E0  0E03               	movlw	high _arr_dataRX
 19987  00A7E2  6FDD               	movwf	(_uart+5)& (0+255),b	;volatile
 19988                           
 19989                           ; BSR set to: 2
 19990                           ;UART_PIC.c: 231: TRISC6 = 0;
 19991  00A7E4  9C94               	bcf	3988,6,c	;volatile
 19992                           
 19993                           ; BSR set to: 2
 19994                           ;UART_PIC.c: 232: TRISC7 = 1;
 19995  00A7E6  8E94               	bsf	3988,7,c	;volatile
 19996                           
 19997                           ; BSR set to: 2
 19998                           ;UART_PIC.c: 235: RCSTAbits.SPEN = 1;
 19999  00A7E8  8EAB               	bsf	4011,7,c	;volatile
 20000                           
 20001                           ; BSR set to: 2
 20002  00A7EA  0012               	return		;funcret
 20003  00A7EC                     __end_of_UART_Init:
 20004                           	opt stack 0
 20005                           tblptru	equ	0xFF8
 20006                           tblptrh	equ	0xFF7
 20007                           tblptrl	equ	0xFF6
 20008                           tablat	equ	0xFF5
 20009                           prodh	equ	0xFF4
 20010                           prodl	equ	0xFF3
 20011                           intcon	equ	0xFF2
 20012                           indf0	equ	0xFEF
 20013                           postinc0	equ	0xFEE
 20014                           fsr0h	equ	0xFEA
 20015                           fsr0l	equ	0xFE9
 20016                           wreg	equ	0xFE8
 20017                           postinc1	equ	0xFE6
 20018                           postdec1	equ	0xFE5
 20019                           plusw1	equ	0xFE3
 20020                           fsr1h	equ	0xFE2
 20021                           fsr1l	equ	0xFE1
 20022                           indf2	equ	0xFDF
 20023                           postinc2	equ	0xFDE
 20024                           postdec2	equ	0xFDD
 20025                           plusw2	equ	0xFDB
 20026                           fsr2h	equ	0xFDA
 20027                           fsr2l	equ	0xFD9
 20028                           status	equ	0xFD8
 20029                           
 20030 ;; *************** function ___aldiv *****************
 20031 ;; Defined at:
 20032 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\aldiv.c"
 20033 ;; Parameters:    Size  Location     Type
 20034 ;;  dividend        4    0[COMRAM] long 
 20035 ;;  divisor         4    4[COMRAM] long 
 20036 ;; Auto vars:     Size  Location     Type
 20037 ;;  quotient        4   10[COMRAM] long 
 20038 ;;  sign            1    9[COMRAM] unsigned char 
 20039 ;;  counter         1    8[COMRAM] unsigned char 
 20040 ;; Return value:  Size  Location     Type
 20041 ;;                  4    0[COMRAM] long 
 20042 ;; Registers used:
 20043 ;;		wreg, status,2, status,0
 20044 ;; Tracked objects:
 20045 ;;		On entry : 0/0
 20046 ;;		On exit  : 0/0
 20047 ;;		Unchanged: 0/0
 20048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20049 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20050 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20051 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20052 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20053 ;;Total ram usage:       14 bytes
 20054 ;; Hardware stack levels used:    1
 20055 ;; This function calls:
 20056 ;;		Nothing
 20057 ;; This function is called by:
 20058 ;;		_UART_Init
 20059 ;; This function uses a non-reentrant model
 20060 ;;
 20061                           
 20062                           	psect	text45
 20063  00AA48                     __ptext45:
 20064                           	opt stack 0
 20065  00AA48                     ___aldiv:
 20066                           	opt stack 29
 20067                           
 20068                           ; BSR set to: 2
 20069                           ;incstack = 0
 20070  00AA48  0E00               	movlw	0
 20071  00AA4A  6E0A               	movwf	___aldiv@sign,c
 20072  00AA4C  AE08               	btfss	___aldiv@divisor+3,7,c
 20073  00AA4E  D00A               	goto	l1487
 20074  00AA50  1E08               	comf	___aldiv@divisor+3,f,c
 20075  00AA52  1E07               	comf	___aldiv@divisor+2,f,c
 20076  00AA54  1E06               	comf	___aldiv@divisor+1,f,c
 20077  00AA56  6C05               	negf	___aldiv@divisor,c
 20078  00AA58  0E00               	movlw	0
 20079  00AA5A  2206               	addwfc	___aldiv@divisor+1,f,c
 20080  00AA5C  2207               	addwfc	___aldiv@divisor+2,f,c
 20081  00AA5E  2208               	addwfc	___aldiv@divisor+3,f,c
 20082  00AA60  0E01               	movlw	1
 20083  00AA62  6E0A               	movwf	___aldiv@sign,c
 20084  00AA64                     l1487:
 20085  00AA64  AE04               	btfss	___aldiv@dividend+3,7,c
 20086  00AA66  D00A               	goto	l1488
 20087  00AA68  1E04               	comf	___aldiv@dividend+3,f,c
 20088  00AA6A  1E03               	comf	___aldiv@dividend+2,f,c
 20089  00AA6C  1E02               	comf	___aldiv@dividend+1,f,c
 20090  00AA6E  6C01               	negf	___aldiv@dividend,c
 20091  00AA70  0E00               	movlw	0
 20092  00AA72  2202               	addwfc	___aldiv@dividend+1,f,c
 20093  00AA74  2203               	addwfc	___aldiv@dividend+2,f,c
 20094  00AA76  2204               	addwfc	___aldiv@dividend+3,f,c
 20095  00AA78  0E01               	movlw	1
 20096  00AA7A  1A0A               	xorwf	___aldiv@sign,f,c
 20097  00AA7C                     l1488:
 20098  00AA7C  0E00               	movlw	0
 20099  00AA7E  6E0B               	movwf	___aldiv@quotient,c
 20100  00AA80  0E00               	movlw	0
 20101  00AA82  6E0C               	movwf	___aldiv@quotient+1,c
 20102  00AA84  0E00               	movlw	0
 20103  00AA86  6E0D               	movwf	___aldiv@quotient+2,c
 20104  00AA88  0E00               	movlw	0
 20105  00AA8A  6E0E               	movwf	___aldiv@quotient+3,c
 20106  00AA8C  5005               	movf	___aldiv@divisor,w,c
 20107  00AA8E  1006               	iorwf	___aldiv@divisor+1,w,c
 20108  00AA90  1007               	iorwf	___aldiv@divisor+2,w,c
 20109  00AA92  1008               	iorwf	___aldiv@divisor+3,w,c
 20110  00AA94  B4D8               	btfsc	status,2,c
 20111  00AA96  D02A               	goto	l1495
 20112  00AA98  0E01               	movlw	1
 20113  00AA9A  6E09               	movwf	___aldiv@counter,c
 20114  00AA9C  D006               	goto	l1490
 20115  00AA9E  90D8               	bcf	status,0,c
 20116  00AAA0  3605               	rlcf	___aldiv@divisor,f,c
 20117  00AAA2  3606               	rlcf	___aldiv@divisor+1,f,c
 20118  00AAA4  3607               	rlcf	___aldiv@divisor+2,f,c
 20119  00AAA6  3608               	rlcf	___aldiv@divisor+3,f,c
 20120  00AAA8  2A09               	incf	___aldiv@counter,f,c
 20121  00AAAA                     l1490:
 20122  00AAAA  AE08               	btfss	___aldiv@divisor+3,7,c
 20123  00AAAC  D7F8               	goto	l1491
 20124  00AAAE                     u5820:
 20125  00AAAE  90D8               	bcf	status,0,c
 20126  00AAB0  360B               	rlcf	___aldiv@quotient,f,c
 20127  00AAB2  360C               	rlcf	___aldiv@quotient+1,f,c
 20128  00AAB4  360D               	rlcf	___aldiv@quotient+2,f,c
 20129  00AAB6  360E               	rlcf	___aldiv@quotient+3,f,c
 20130  00AAB8  5005               	movf	___aldiv@divisor,w,c
 20131  00AABA  5C01               	subwf	___aldiv@dividend,w,c
 20132  00AABC  5006               	movf	___aldiv@divisor+1,w,c
 20133  00AABE  5802               	subwfb	___aldiv@dividend+1,w,c
 20134  00AAC0  5007               	movf	___aldiv@divisor+2,w,c
 20135  00AAC2  5803               	subwfb	___aldiv@dividend+2,w,c
 20136  00AAC4  5008               	movf	___aldiv@divisor+3,w,c
 20137  00AAC6  5804               	subwfb	___aldiv@dividend+3,w,c
 20138  00AAC8  A0D8               	btfss	status,0,c
 20139  00AACA  D009               	goto	l1494
 20140  00AACC  5005               	movf	___aldiv@divisor,w,c
 20141  00AACE  5E01               	subwf	___aldiv@dividend,f,c
 20142  00AAD0  5006               	movf	___aldiv@divisor+1,w,c
 20143  00AAD2  5A02               	subwfb	___aldiv@dividend+1,f,c
 20144  00AAD4  5007               	movf	___aldiv@divisor+2,w,c
 20145  00AAD6  5A03               	subwfb	___aldiv@dividend+2,f,c
 20146  00AAD8  5008               	movf	___aldiv@divisor+3,w,c
 20147  00AADA  5A04               	subwfb	___aldiv@dividend+3,f,c
 20148  00AADC  800B               	bsf	___aldiv@quotient,0,c
 20149  00AADE                     l1494:
 20150  00AADE  90D8               	bcf	status,0,c
 20151  00AAE0  3208               	rrcf	___aldiv@divisor+3,f,c
 20152  00AAE2  3207               	rrcf	___aldiv@divisor+2,f,c
 20153  00AAE4  3206               	rrcf	___aldiv@divisor+1,f,c
 20154  00AAE6  3205               	rrcf	___aldiv@divisor,f,c
 20155  00AAE8  2E09               	decfsz	___aldiv@counter,f,c
 20156  00AAEA  D7E1               	goto	u5820
 20157  00AAEC                     l1495:
 20158  00AAEC  500A               	movf	___aldiv@sign,w,c
 20159  00AAEE  B4D8               	btfsc	status,2,c
 20160  00AAF0  D008               	goto	l1496
 20161  00AAF2  1E0E               	comf	___aldiv@quotient+3,f,c
 20162  00AAF4  1E0D               	comf	___aldiv@quotient+2,f,c
 20163  00AAF6  1E0C               	comf	___aldiv@quotient+1,f,c
 20164  00AAF8  6C0B               	negf	___aldiv@quotient,c
 20165  00AAFA  0E00               	movlw	0
 20166  00AAFC  220C               	addwfc	___aldiv@quotient+1,f,c
 20167  00AAFE  220D               	addwfc	___aldiv@quotient+2,f,c
 20168  00AB00  220E               	addwfc	___aldiv@quotient+3,f,c
 20169  00AB02                     l1496:
 20170  00AB02  C00B  F001         	movff	___aldiv@quotient,?___aldiv
 20171  00AB06  C00C  F002         	movff	___aldiv@quotient+1,?___aldiv+1
 20172  00AB0A  C00D  F003         	movff	___aldiv@quotient+2,?___aldiv+2
 20173  00AB0E  C00E  F004         	movff	___aldiv@quotient+3,?___aldiv+3
 20174  00AB12  0012               	return	
 20175  00AB14                     __end_of___aldiv:
 20176                           	opt stack 0
 20177                           tblptru	equ	0xFF8
 20178                           tblptrh	equ	0xFF7
 20179                           tblptrl	equ	0xFF6
 20180                           tablat	equ	0xFF5
 20181                           prodh	equ	0xFF4
 20182                           prodl	equ	0xFF3
 20183                           intcon	equ	0xFF2
 20184                           indf0	equ	0xFEF
 20185                           postinc0	equ	0xFEE
 20186                           fsr0h	equ	0xFEA
 20187                           fsr0l	equ	0xFE9
 20188                           wreg	equ	0xFE8
 20189                           postinc1	equ	0xFE6
 20190                           postdec1	equ	0xFE5
 20191                           plusw1	equ	0xFE3
 20192                           fsr1h	equ	0xFE2
 20193                           fsr1l	equ	0xFE1
 20194                           indf2	equ	0xFDF
 20195                           postinc2	equ	0xFDE
 20196                           postdec2	equ	0xFDD
 20197                           plusw2	equ	0xFDB
 20198                           fsr2h	equ	0xFDA
 20199                           fsr2l	equ	0xFD9
 20200                           status	equ	0xFD8
 20201                           tblptru	equ	0xFF8
 20202                           tblptrh	equ	0xFF7
 20203                           tblptrl	equ	0xFF6
 20204                           tablat	equ	0xFF5
 20205                           prodh	equ	0xFF4
 20206                           prodl	equ	0xFF3
 20207                           intcon	equ	0xFF2
 20208                           indf0	equ	0xFEF
 20209                           postinc0	equ	0xFEE
 20210                           fsr0h	equ	0xFEA
 20211                           fsr0l	equ	0xFE9
 20212                           wreg	equ	0xFE8
 20213                           postinc1	equ	0xFE6
 20214                           postdec1	equ	0xFE5
 20215                           plusw1	equ	0xFE3
 20216                           fsr1h	equ	0xFE2
 20217                           fsr1l	equ	0xFE1
 20218                           indf2	equ	0xFDF
 20219                           postinc2	equ	0xFDE
 20220                           postdec2	equ	0xFDD
 20221                           plusw2	equ	0xFDB
 20222                           fsr2h	equ	0xFDA
 20223                           fsr2l	equ	0xFD9
 20224                           status	equ	0xFD8
 20225                           
 20226                           	psect	rparam
 20227  0000                     tblptru	equ	0xFF8
 20228                           tblptrh	equ	0xFF7
 20229                           tblptrl	equ	0xFF6
 20230                           tablat	equ	0xFF5
 20231                           prodh	equ	0xFF4
 20232                           prodl	equ	0xFF3
 20233                           intcon	equ	0xFF2
 20234                           indf0	equ	0xFEF
 20235                           postinc0	equ	0xFEE
 20236                           fsr0h	equ	0xFEA
 20237                           fsr0l	equ	0xFE9
 20238                           wreg	equ	0xFE8
 20239                           postinc1	equ	0xFE6
 20240                           postdec1	equ	0xFE5
 20241                           plusw1	equ	0xFE3
 20242                           fsr1h	equ	0xFE2
 20243                           fsr1l	equ	0xFE1
 20244                           indf2	equ	0xFDF
 20245                           postinc2	equ	0xFDE
 20246                           postdec2	equ	0xFDD
 20247                           plusw2	equ	0xFDB
 20248                           fsr2h	equ	0xFDA
 20249                           fsr2l	equ	0xFD9
 20250                           status	equ	0xFD8


Data Sizes:
    Strings     1091
    Constant    58
    Data        152
    BSS         528
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127    126     127
    BANK0           128    128     128
    BANK1           256    256     256
    BANK2           256     23     254
    BANK3           256      0     224
    BANK4           256      0     224
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    finalize@mat	PTR int [3] size(2) Largest target is 96
		 -> main@mat(BANK0[96]), 

    printf@cp	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_127(CODE[7]), printRTC@month(COMRAM[4]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 41
		 -> STR_126(CODE[17]), STR_125(CODE[16]), STR_124(CODE[16]), STR_123(CODE[9]), 
		 -> STR_122(CODE[19]), STR_121(CODE[16]), STR_120(CODE[17]), STR_119(CODE[11]), 
		 -> STR_118(CODE[17]), STR_117(CODE[11]), STR_116(CODE[17]), STR_115(CODE[11]), 
		 -> STR_114(CODE[17]), STR_113(CODE[11]), STR_112(CODE[17]), STR_111(CODE[11]), 
		 -> STR_110(CODE[17]), STR_109(CODE[11]), STR_108(CODE[17]), STR_107(CODE[11]), 
		 -> STR_106(CODE[17]), STR_105(CODE[11]), STR_104(CODE[14]), STR_103(CODE[11]), 
		 -> STR_102(CODE[24]), STR_89(CODE[14]), STR_88(CODE[20]), STR_87(CODE[20]), 
		 -> STR_86(CODE[14]), STR_85(CODE[16]), STR_84(CODE[16]), STR_83(CODE[16]), 
		 -> STR_82(CODE[9]), STR_81(CODE[19]), STR_80(CODE[16]), STR_79(CODE[17]), 
		 -> STR_78(CODE[11]), STR_77(CODE[17]), STR_76(CODE[11]), STR_75(CODE[17]), 
		 -> STR_74(CODE[11]), STR_73(CODE[17]), STR_72(CODE[11]), STR_71(CODE[17]), 
		 -> STR_70(CODE[11]), STR_69(CODE[17]), STR_68(CODE[11]), STR_67(CODE[17]), 
		 -> STR_66(CODE[11]), STR_65(CODE[17]), STR_64(CODE[11]), STR_63(CODE[14]), 
		 -> STR_62(CODE[11]), STR_61(CODE[14]), STR_60(CODE[12]), STR_59(CODE[17]), 
		 -> STR_58(CODE[14]), STR_57(CODE[15]), STR_56(CODE[12]), STR_55(CODE[13]), 
		 -> STR_54(CODE[17]), STR_53(CODE[14]), STR_52(CODE[5]), STR_51(CODE[16]), 
		 -> STR_50(CODE[17]), STR_49(CODE[5]), STR_48(CODE[16]), STR_47(CODE[15]), 
		 -> STR_46(CODE[9]), STR_45(CODE[10]), STR_44(CODE[13]), STR_43(CODE[10]), 
		 -> STR_42(CODE[31]), STR_41(CODE[25]), STR_40(CODE[15]), STR_39(CODE[7]), 
		 -> STR_38(CODE[15]), STR_37(CODE[14]), STR_36(CODE[9]), STR_35(CODE[10]), 
		 -> STR_34(CODE[12]), STR_33(CODE[10]), STR_32(CODE[30]), STR_31(CODE[33]), 
		 -> STR_30(CODE[14]), STR_29(CODE[17]), STR_28(CODE[12]), STR_27(CODE[12]), 
		 -> STR_26(CODE[11]), STR_25(CODE[9]), STR_24(CODE[9]), STR_23(CODE[10]), 
		 -> STR_22(CODE[8]), STR_21(CODE[15]), STR_20(CODE[17]), STR_19(CODE[15]), 
		 -> STR_18(CODE[16]), STR_17(CODE[15]), STR_16(CODE[12]), STR_15(CODE[2]), 
		 -> STR_14(CODE[14]), STR_13(CODE[11]), STR_12(CODE[11]), STR_11(CODE[2]), 
		 -> STR_10(CODE[14]), STR_9(CODE[15]), STR_8(CODE[16]), STR_7(CODE[23]), 
		 -> STR_6(CODE[38]), STR_5(CODE[39]), STR_4(CODE[35]), STR_3(CODE[41]), 
		 -> STR_2(CODE[6]), STR_1(CODE[11]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), 

    uartTransmitBlocking@data	PTR unsigned char  size(2) Largest target is 1
		 -> unload_reservoir@pill_unload(COMRAM[1]), data(COMRAM[1]), man_cont_data(BANK2[1]), 

    UART._dataRX	PTR unsigned char  size(2) Largest target is 16
		 -> arr_dataRX(BANK3[16]), 

    UART._dataTX	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    UART	PTR volatile struct . size(2) Largest target is 14
		 -> uart(BANK2[12]), 

    S21$_dataRX	PTR unsigned char  size(2) Largest target is 16
		 -> arr_dataRX(BANK3[16]), 

    uart._dataRX	PTR unsigned char  size(2) Largest target is 16
		 -> arr_dataRX(BANK3[16]), 

    S21$_dataTX	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    uart._dataTX	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    array_transition@mat	PTR int [3] size(2) Largest target is 96
		 -> main@mat(BANK0[96]), 

    compare_arrays@array2	PTR int  size(2) Largest target is 8
		 -> main@s(BANK1[8]), main@r(BANK1[8]), main@q(BANK1[8]), main@p(BANK1[8]), 
		 -> main@o(BANK1[8]), main@n(BANK1[8]), main@m(BANK1[8]), main@l(BANK1[8]), 
		 -> main@z(BANK1[8]), main@y(BANK1[8]), main@x(BANK1[8]), main@h(BANK0[8]), 
		 -> main@g(BANK0[8]), main@f(BANK0[8]), main@e(BANK0[8]), main@d(COMRAM[8]), 
		 -> main@c(COMRAM[8]), main@b(COMRAM[8]), main@a(COMRAM[8]), 

    compare_arrays@array1	PTR int  size(2) Largest target is 8
		 -> main@row_check(BANK2[8]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 4
		 -> printRTC@month(COMRAM[4]), 

    initialize@mat	PTR int [3] size(2) Largest target is 96
		 -> main@mat(BANK0[96]), 

    package_food@mat	PTR int [3] size(2) Largest target is 96
		 -> main@mat(BANK0[96]), 


Critical Paths under _main in COMRAM

    _main->_operation_summary
    _store_EEPROM->_write_EEPROM
    _shift_EEPROM->_write_EEPROM
    _set_total_init_time->_I2C_Master_Init
    _package_food->_finalize
    _sensor_row_check->___wmul
    _load_mech->___wmul
    _initialize->___wmul
    _height_mech->_hook_mech
    _finalize->_unload_reservoir
    _unload_reservoir->_comp_time_difference
    _servo_slide->_uartTransmitBlocking
    _receive_data_RX->_uartReceiveBlocking
    _receive_data_RX->_uartTransmitBlocking
    _comp_time_difference->_I2C_Master_Init
    _I2C_Master_Read->_I2C_Master_Wait
    _hook_mech->_uartTransmitBlocking
    _operation_summary->_printf
    _printf->___lwmod
    _putch->_lcdNibble
    ___lwmod->___lwdiv
    _loadRTC->_I2C_Master_Init
    _I2C_Master_Write->_I2C_Master_Wait
    _I2C_Master_Stop->_I2C_Master_Wait
    _I2C_Master_Start->_I2C_Master_Wait
    _I2C_Master_Init->___lldiv
    _lcd_shift_display->_lcdInst
    _lcd_set_cursor->_lcd_shift_cursor
    _lcd_shift_cursor->_lcdInst
    _initLCD->_lcdInst
    _lcdInst->_lcdNibble
    _comp_EEPROM_time->___wmul
    _array_transition->___wmul
    _UART_Init->___aldiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               447   447      0  207244
                                             86 COMRAM    40    40      0
                                              0 BANK0    128   128      0
                                              0 BANK1    256   256      0
                                              0 BANK2     23    23      0
                    _I2C_Master_Init
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                          _UART_Init
                             ___wmul
                   _array_transition
                   _comp_EEPROM_time
               _comp_time_difference
                     _compare_arrays
                        _height_mech
                            _initLCD
                           _initTime
                            _lcdInst
                     _lcd_set_cursor
                  _lcd_shift_display
                            _loadRTC
                  _operation_summary
                       _package_food
                             _printf
                              _putch
                        _read_EEPROM
                _set_total_init_time
                       _shift_EEPROM
                       _store_EEPROM
               _uartTransmitBlocking
 ---------------------------------------------------------------------------------
 (1) _store_EEPROM                                         8     8      0     860
                                              2 COMRAM     8     8      0
                       _write_EEPROM
 ---------------------------------------------------------------------------------
 (1) _shift_EEPROM                                         5     5      0     636
                                              2 COMRAM     5     5      0
                        _read_EEPROM
                       _write_EEPROM
 ---------------------------------------------------------------------------------
 (2) _write_EEPROM                                         2     1      1     500
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (1) _set_total_init_time                                  9     9      0    7015
                                             21 COMRAM     9     9      0
                    _I2C_Master_Init
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _package_food                                        14    12      2  107313
                                             48 COMRAM    14    12      2
                             ___wmul
                           _finalize
                        _height_mech
                          _hook_mech
                         _initialize
                          _load_mech
                   _sensor_row_check
                        _servo_slide
 ---------------------------------------------------------------------------------
 (2) _sensor_row_check                                    22    18      4   11425
                                              6 COMRAM    22    18      4
                             ___wmul
                    _receive_data_RX
 ---------------------------------------------------------------------------------
 (2) _load_mech                                           10     6      4   15881
                                              6 COMRAM    10     6      4
                             ___wmul
                    _receive_data_RX
               _uartTransmitBlocking
 ---------------------------------------------------------------------------------
 (2) _initialize                                          10     8      2    5135
                                              6 COMRAM    10     8      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _height_mech                                         12     8      4   11754
                                              7 COMRAM    12     8      4
                          _hook_mech
               _uartTransmitBlocking
 ---------------------------------------------------------------------------------
 (2) _finalize                                            10     6      4   45927
                                             38 COMRAM    10     6      4
                             ___wmul
                          _hook_mech
                        _servo_slide
               _uartTransmitBlocking
                   _unload_reservoir
 ---------------------------------------------------------------------------------
 (3) _unload_reservoir                                     8     8      0   23784
                                             30 COMRAM     8     8      0
               _comp_time_difference
                    _receive_data_RX
                        _servo_slide
               _uartTransmitBlocking
 ---------------------------------------------------------------------------------
 (2) _servo_slide                                          4     2      2    6020
                                              5 COMRAM     4     2      2
               _uartTransmitBlocking
 ---------------------------------------------------------------------------------
 (3) _receive_data_RX                                      0     0      0    5327
                _uartReceiveBlocking
               _uartTransmitBlocking
 ---------------------------------------------------------------------------------
 (4) _uartReceiveBlocking                                  5     5      0      69
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (4) _comp_time_difference                                 9     9      0    7015
                                             21 COMRAM     9     9      0
                    _I2C_Master_Init
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Read                                      2     2      0      45
                                              1 COMRAM     2     2      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _hook_mech                                            2     0      2    5834
                                              5 COMRAM     2     0      2
               _uartTransmitBlocking
 ---------------------------------------------------------------------------------
 (1) _uartTransmitBlocking                                 5     2      3    5258
                                              0 COMRAM     5     2      3
 ---------------------------------------------------------------------------------
 (1) _operation_summary                                   44    44      0   17411
                                             42 COMRAM    44    44      0
                            _lcdInst
                             _printf
                        _read_EEPROM
 ---------------------------------------------------------------------------------
 (2) _read_EEPROM                                          1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _printf                                              34    22     12   15588
                                             12 COMRAM    30    18     12
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
                              _putch
                        _read_EEPROM (ARG)
 ---------------------------------------------------------------------------------
 (1) _putch                                                1     1      0     135
                                              2 COMRAM     1     1      0
                          _lcdNibble
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              3     3      0      68
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     311
                                              7 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     466
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _loadRTC                                              3     3      0    2250
                                             21 COMRAM     3     3      0
                    _I2C_Master_Init
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Write                                     2     0      2    1314
                                              1 COMRAM     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Wait                                      1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     868
                                             13 COMRAM     8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     314
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (1) _lcd_shift_display                                    3     2      1     833
                                              3 COMRAM     3     2      1
                            _lcdInst
 ---------------------------------------------------------------------------------
 (1) _lcd_set_cursor                                       4     3      1    1286
                                              6 COMRAM     4     3      1
                            _lcdInst
                   _lcd_shift_cursor
 ---------------------------------------------------------------------------------
 (2) _lcd_shift_cursor                                     3     2      1     301
                                              3 COMRAM     3     2      1
                            _lcdInst
 ---------------------------------------------------------------------------------
 (1) _initTime                                             7     1      6     610
                                              0 COMRAM     7     1      6
 ---------------------------------------------------------------------------------
 (1) _initLCD                                              1     1      0     135
                                              3 COMRAM     1     1      0
                            _lcdInst
 ---------------------------------------------------------------------------------
 (2) _lcdInst                                              1     1      0     135
                                              2 COMRAM     1     1      0
                          _lcdNibble
 ---------------------------------------------------------------------------------
 (2) _lcdNibble                                            2     2      0     113
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _compare_arrays                                      10     6      4    3023
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (1) _comp_EEPROM_time                                    10    10      0    4788
                                              6 COMRAM    10    10      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _array_transition                                    34    32      2    5652
                                              6 COMRAM    34    32      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    4719
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                            8     4      4     550
                                             14 COMRAM     8     4      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             14     6      8     452
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Init
     ___lldiv
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   _UART_Init
     ___aldiv
   ___wmul
   _array_transition
     ___wmul
   _comp_EEPROM_time
     ___wmul
   _comp_time_difference
     _I2C_Master_Init
       ___lldiv
     _I2C_Master_Read
       _I2C_Master_Wait
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
     ___wmul
   _compare_arrays
   _height_mech
     _hook_mech
       _uartTransmitBlocking
     _uartTransmitBlocking
   _initLCD
     _lcdInst
       _lcdNibble
   _initTime
   _lcdInst
     _lcdNibble
   _lcd_set_cursor
     _lcdInst
       _lcdNibble
     _lcd_shift_cursor
       _lcdInst
         _lcdNibble
   _lcd_shift_display
     _lcdInst
       _lcdNibble
   _loadRTC
     _I2C_Master_Init
       ___lldiv
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
   _operation_summary
     _lcdInst
       _lcdNibble
     _printf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul
       _isdigit
       _putch
         _lcdNibble
       _read_EEPROM (ARG)
     _read_EEPROM
   _package_food
     ___wmul
     _finalize
       ___wmul
       _hook_mech
         _uartTransmitBlocking
       _servo_slide
         _uartTransmitBlocking
       _uartTransmitBlocking
       _unload_reservoir
         _comp_time_difference
           _I2C_Master_Init
             ___lldiv
           _I2C_Master_Read
             _I2C_Master_Wait
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Master_Write
             _I2C_Master_Wait
           ___wmul
         _receive_data_RX
           _uartReceiveBlocking
           _uartTransmitBlocking
         _servo_slide
           _uartTransmitBlocking
         _uartTransmitBlocking
     _height_mech
       _hook_mech
         _uartTransmitBlocking
       _uartTransmitBlocking
     _hook_mech
       _uartTransmitBlocking
     _initialize
       ___wmul
     _load_mech
       ___wmul
       _receive_data_RX
         _uartReceiveBlocking
         _uartTransmitBlocking
       _uartTransmitBlocking
     _sensor_row_check
       ___wmul
       _receive_data_RX
         _uartReceiveBlocking
         _uartTransmitBlocking
     _servo_slide
       _uartTransmitBlocking
   _printf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     ___wmul
     _isdigit
     _putch
       _lcdNibble
     _read_EEPROM (ARG)
   _putch
     _lcdNibble
   _read_EEPROM
   _set_total_init_time
     _I2C_Master_Init
       ___lldiv
     _I2C_Master_Read
       _I2C_Master_Wait
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
     ___wmul
   _shift_EEPROM
     _read_EEPROM
     _write_EEPROM
   _store_EEPROM
     _write_EEPROM
   _uartTransmitBlocking

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      E0      13       87.5%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      E0      11       87.5%
BITBANK2           100      0       0       8        0.0%
BANK2              100     17      FE       9       99.2%
BITBANK1           100      0       0       6        0.0%
BANK1              100    100     100       7      100.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     80      80       5      100.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     7E      7F       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     4BD      34        0.0%
DATA                 0      0     4BD       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Wed Apr 11 14:41:59 2018

                ?_receive_data_RX 0001                       __CFG_CPD$ON 000000  
                   height_mech@dy 0008               ___wmul@multiplicand 0003  
                     __CFG_BORV$3 000000       sensor_row_check@drawer_bool 0015  
                    __CFG_CP0$OFF 000000                      __CFG_CP1$OFF 000000  
                    __CFG_CP2$OFF 000000                      __CFG_CP3$OFF 000000  
                             l200 D284                               l203 D292  
                             l221 D3FC                               l205 D2D6  
                             l302 F120                               l206 D33E  
                             l231 D534                               l223 D442  
                             l215 D372                               l320 DE5E  
                             l312 DCB0                               l304 DC12  
                             l224 D4AA                               l216 D3A4  
                             l208 D2EE                               l241 DB82  
                             l330 DF56                               l314 DD04  
                             l306 DC6A                               l250 D8B6  
                             l226 D45A                               l218 D3EE  
                             l411 ED6A                               l315 E08C  
                             l251 D812                               l420 F052  
                             l404 EBD0                               l340 E14A  
                             l332 DF6E                               l324 DED6  
                             l244 D6D4                               l236 D638  
                             l501 FB22                               l421 EEF8  
                             l317 DE50                               l309 DCA2  
                             l229 D51C                               l502 FB0A  
                             l414 EE0E                               l406 EC3E  
                             l350 E304                               l342 E1F6  
                             l334 DFD6                               l270 D8EC  
                             l190 D062                               l503 FA0E  
                             l423 EF10                               l327 DEE4  
                             l255 D876                               l247 D6E2  
                             l239 D646                               l504 FA6C  
                             l416 EE38                               l408 ECAA  
                             l344 E22E                               l336 DFEE  
                             l280 DB2A                               l264 D95A  
                             l272 D92E                               l192 D0DC  
                             l433 F0CE                               l425 EF78  
                             l417 EEAC                               l361 E37E  
                             l329 DF3E                               l281 D98A  
                             l265 D8DE                               l249 D7D4  
                             l450 F2A4                               l442 F184  
                             l370 E42E                               l346 E27C  
                             l290 DA76                               l258 D896  
                             l194 D156                               l427 EF90  
                             l339 EED6                               l363 E3A4  
                             l275 D94E                               l187 CF76  
                             l700 C0DC                               l356 E312  
                             l348 E28E                               l292 DB1E  
                             l196 D1D0                               l188 CFE8  
                             l461 F406                               l453 F2B2  
                             l445 F192                               l437 F12C  
                             l381 E8F2                               l373 E4F8  
                             l349 E4C6                               l293 DAEE  
                             l285 DA2C                               l710 C212  
                             l702 C0FC                               l390 EAD6  
                             l358 E358                               l286 D9FE  
                             l198 D23A                               l711 C2C2  
                             l447 F9CE                               l471 F5BA  
                             l455 F306                               l391 EA90  
                             l383 E944                               l375 E7E8  
                             l367 E422                               l720 AB50  
                             l800 ADF6                               l704 C170  
                             l464 F414                               l456 F346  
                             l392 EA84                               l368 E4C0  
                             l801 ADCA                               l713 C244  
                             l481 F7F4                               l473 F62C  
                             l385 E998                               l369 E490  
                             l289 DAA4                               l730 ABEE  
                             l722 AB70                               l802 ADD0  
                             l810 B128                               l466 F962  
                             l378 E7F4                               l715 C2A8  
                             l491 F95A                               l483 F872  
                             l475 F69E                               l467 F4D8  
                             l459 F402                               l395 EAD6  
                             l387 E9EA                               l379 E8A2  
                             l724 AB90                               l812 B160  
                             l708 C1AA                               l492 F90C  
                             l484 F81C                               l388 EA3A  
                             l821 B3DE                               l477 F710  
                             l469 F548                               l726 ABB0  
                             l718 AB32                               l822 B408  
                             l750 BF16                               l734 BF08  
                             l814 B180                               l806 B078  
                             l743 BE9C                               l735 BCCE  
                             l487 F8E4                               l479 F782  
                             l399 EAE4                               l760 A412  
                             l728 ABD0                               l824 B432  
                             l752 BF3E                               l744 BE40  
                             l808 B090                               l680 B8DC  
                             l488 F89A                               l825 B45C  
                             l817 B30C                               l737 BDC6  
                             l681 B8CE                               l673 B714  
                             l497 F9B8                               l754 BF4C  
                             l738 BD42                               l770 B520  
                             l690 BFA0                               l819 B324  
                             l739 BCE6                               l771 B4E2  
                             l588 A456                               l756 BF5A  
                             l772 B50A                               l692 C088  
                             l676 B8FE                               l589 A44E  
                             l749 BF1E                               l693 BFF0  
                             l766 B690                               l694 C07E  
                             l775 B5E2                               l767 B47C  
                             l695 C010                               l679 B7FC  
                             l792 AD24                               l784 B676  
                             l768 B538                               l785 B638  
                             l777 B5CA                               l697 C06A  
                             l689 BFBE                               l794 AD48  
                             l786 B660                               l778 B58C  
                             l779 B5B4                               l797 ADE6  
                             l798 AD6E                               l799 AD88  
                             l899 A6BE                      __CFG_CPB$OFF 000000  
          __end_of_compare_arrays A674                       finalize@mat 0029  
   __size_of_comp_time_difference 0162                               prod 000FF3  
                             wreg 000FE8      uartTransmitBlocking@numBytes 0003  
      sensor_row_check@marked_row 000D                      servo_slide@x 0006  
                 ?_lcd_set_cursor 0007                      __CFG_LVP$OFF 000000  
                    __CFG_WDT$OFF 000000                              l1101 B94C  
                            l1110 BA9A                              l1103 B97E  
                            l1112 BADC                              l1113 BB0C  
                            l1105 B9EA                              l1131 C780  
                            l1116 BB7E                              l1141 C918  
                            l1118 BC3A                              l1134 C78C  
                            l1151 CB3E                              l1143 C986  
                            l1400 C55A                              l1136 CCA8  
                            l1312 AA2C                              l1401 C4EE  
                            l1161 CCA4                              l1153 CBBC  
                            l1145 C9F4                              l1137 C83E  
                            l1129 C778                              l1313 A9E4  
                            l1410 C584                              l1162 CC58  
                            l1154 CB68                              l1330 ACDE  
                            l1411 C5A8                              l1147 CA62  
                            l1139 C8AA                              l1331 AC58  
                            l1412 C5B0                              l1244 A3B6  
                            l1260 AE10                              l1093 A628  
                            l1413 C5DC                              l1405 C56A  
                            l1165 CCBA                              l1157 CC2E  
                            l1149 CAD0                              l1173 B1E6  
                            l1422 C60A                              l1414 C5C6  
                            l1406 C524                              l1158 CBE6  
                            l1262 AE28                              l1095 A664  
                            l1423 C6C2                              l1335 AC72  
                            l1168 AF72                              l1264 AE98  
                            l1425 C6AC                              l1337 ACCA  
                            l1178 A918                              l1426 C610  
    __end_of_uartTransmitBlocking AA48                              l1338 ACDC  
                            l1266 AEE8                              l1179 A914  
                            l1427 C6BC                              l1428 C65A  
                            l1268 AF0C                              l1381 C4A6  
                            l1365 C2D6                              l1390 C422  
                            l1382 C38E                              l1374 C32C  
                            l1366 C2E6                              l1391 C41C  
                            l1383 C392                              l1376 C470  
                            l1384 C3BA                              l1368 C2FA  
                            l1393 C45E                              l1385 C3C8  
                            l1369 C2F4                              l1490 AAAA  
                            l1394 C434                              l1386 C3C4  
                            l1491 AA9E                              l1388 C412  
                            l1397 C4D4                              l1494 AADE  
                            l1495 AAEC                              l1487 AA64  
                            l1496 AB02                              l1488 AA7C  
                            l1840 A51C                              l1841 A514  
                            l1761 A322                              l1850 A486  
                            l1851 A47E                              l6012 A2BE  
                            l1844 A53C                              l6100 C058  
                            l1845 A546                              l1854 A49E  
                            l6030 B080                              l1791 A748  
                            l1855 A4A8                              l1792 A756  
                            l6040 B10A                              l6024 B068  
                            l1787 A714                              l1788 A708  
                            l6044 B110                              l5502 B200  
                            l6046 B118                              l6056 B148  
                            l7104 D052                              l6058 B150  
                            l6162 C19A                              l6138 C0EC  
                            l6090 C000                              l5428 AC08  
                            l6172 C1F2                              l6148 C144  
                            l7116 D08A                              l6270 B6A0  
                            l6078 BFCE                              l8102 EF00  
                            l8030 ECBA                              l7126 D0CC  
                            l6176 C200                              l6520 AF62  
                            l6336 A396                              l8112 EF5A  
                            l7312 D524                              l7160 D17E  
                            l5386 A9E4                              l6282 B314  
                            l6186 C234                              l6530 AF8C  
                            l8042 ED1A                              l7322 D57A  
                            l7306 D50C                              l7170 D1C0  
                            l7138 D104                              l7082 CFD8  
                            l6436 A6AE                              l5492 B1D6  
                            l5644 AD6E                              l6292 B368  
                            l6276 B2FC                              l8124 EF80  
                            l8116 EF60                              l7404 D7D4  
                            l7148 D146                              l6446 A6DE  
                            l6198 C2AE                              l8134 EFD6  
                            l8118 EF68                              l7326 D580  
                            l7182 D1F8                              l7094 D010  
                            l6624 B96E                              l6616 B93C  
                            l5808 C528                              l6296 B36E  
                            l6634 B9C8                              l6730 AE88  
                            l6714 AE18                              l8138 EFDC  
                            l7602 DC5A                              l6652 BA8A  
                            l6492 A2DA                              l5764 C41C  
                            l5916 BD42                              l6740 AEBC  
                            l6724 AE7A                              l6708 AE00  
                            l8420 F88A                              l6638 B9CE  
                            l6590 B8DC                              l8430 F8B8  
                            l8262 F306                              l7614 DC92  
                            l6680 BB6E                              l6664 BAE2  
                            l5768 C434                              l6584 B8AE  
                            l6744 AED8                              l6728 AE80  
                            l8504 FA88                              l8408 F83A  
                            l8096 EEE8                              l8088 EEC0  
                            l6690 BC2C                              l5794 C4F2  
                            l6906 CC02                              l8442 F8FC  
                            l7810 E172                              l7730 DF5E  
                            l6668 BAF0                              l6940 A618  
                            l8452 F92A                              l7740 DFB8  
                            l7724 DF46                              l7628 DD04  
                            l6918 CC48                              l6598 B90C  
                            l6928 CC74                              l6696 A3CE  
                            l7904 E4D8                              l7752 DFDE  
                            l7744 DFBE                              l6954 A66A  
                            l6874 CB58                              l7762 E034  
                            l7746 DFC6                              l7586 DC02  
                            l5996 A2A6                              l6884 CB84  
                            l7908 E4E8                              l8494 FA5C  
                            l8398 F80C                              l7918 E558  
                            l7766 E03A                              l7598 DC3A  
                            l6896 CBD6                              l7974 E9FA  
                            l7798 E13A                              STR_1 FF19  
                            STR_2 FFBC                              STR_3 FBBB  
                            STR_4 FC31                              STR_5 FBE4  
                            STR_6 FC0B                              STR_7 FCE3  
                            STR_8 FDBD                              STR_9 FE3D  
                            _LATA 000F89                              _LATB 000F8A  
                            _LATC 000F8B                              _LATD 000F8C  
                            _LATE 000F8D                              u5010 C5E4  
                            u5020 C5F8                              u5040 C6CA  
                            u5120 BDD4                              u6000 B8AE  
                            u6010 B8DC                              u4340 A718  
                            u4500 B200                              u5060 BC5A  
                            u6020 B90C                              u4405 AA28  
                            u4406 AA2A                              u6200 BC2C  
                            u6120 BA82                              u5400 C0DA  
                            u6041 B92C                              u4425 A366  
                            u5321 BF96                              u4426 A368  
                            u4515 A82A                              u4516 A82C  
                            u4380 A9EC                              u5260 B10A  
                            u5420 C144                              u4525 A86E  
                            u4365 A584                              u6150 BAE2  
                            u6070 B9C8                              u4526 A870  
                            u4710 A520                              u4390 A9F8  
                            u4382 A9EE                              u5270 B110  
                            u6160 BAF0                              u6080 B9CE  
                            u4800 C3F6                              u6320 C742  
                            u4392 A9FA                              u8000 ECFA  
                            u7040 D57A                              u4465 ACBE  
                            u6170 BB0A                              u6090 B9E8  
                            u4466 ACC0                              u5290 B148  
                            u5370 C058                              u8010 ED0A  
                            u7050 D580                              u6331 C76E  
                            _RCIE 007CED                              u4740 A48A  
                            u6500 CC02                              u5540 C2AE  
                            u6260 AE7A                              u8020 ED1A  
                            u7060 D5EE                              _RCIF 007CF5  
                            u5710 B368                              u5550 C2C2  
                            u5390 C07E                              u6270 AE80  
                            u4807 C3EC                              u4840 C456  
                            u5720 B36E                              u5480 C1F2  
                            u8120 EF5A                              u6601 CD64  
                            u6530 CC74                              u5730 B37C  
                            u5490 C200                              u6290 AEBC  
                            u8210 F13A                              u8130 EF60  
                            u7090 D672                              u6611 CD76  
         sensor_row_check@row_ind 0007                              u5820 AAAE  
                            u5740 B3FA                              u7420 DCF0  
                            u6701 CE18                              u6621 CD88  
                            u6470 CB84                              u5750 B424  
                            u5670 B68C                              u7430 DCFE  
                            u7350 DB8E                              u4847 C44C  
                            u9007 D4EE                              u6711 CE2A  
                            u6631 CD9A                              u6560 A65A  
                            u5760 B44E                              u8240 F1DC  
                            u8160 EFD6                              u8080 EEC0  
                            u7600 E0B2                              u7601 E0AE  
                            u7441 DD2C                              u9017 D5A8  
                            u6801 CECC                              u6721 CE3C  
                            u6641 CDAC                              u6570 A66A  
                            u5930 AF8C                              u8170 EFDC  
                            u7610 E0C6                              u7530 DFB8  
                            u7370 DC3A                              u7611 E0C2  
                            u9107 D728                              u9027 D5C2  
                            u6811 CEDE                              u6731 CE4E  
                            u6651 CDBE                              u5860 A6DE  
                            u5940 B712                              u7540 DFBE  
                            u6900 D17E                              u9117 D79C  
                            u9037 D5D8                              u6821 CEF0  
                            u6741 CE60                              u6661 CDD0  
                            u8510 F9CC                              u8430 F83A  
                            u8270 F2F0                              u7630 E172  
                            u7390 DC92                              u9207 DB0E  
                            u9127 D7B4                              u9047 D5FA  
                            u6751 CE72                              u6671 CDE2  
                            u8280 F300                              u7640 E1F2  
                            u6920 D1F8                              u6840 D010  
                            u9217 DB3E                              u9137 D7CA  
                            u9057 D610                              u6761 CE84  
                            u6681 CDF4                              u7650 E22C  
                            u7570 E034                              u5875 A78A  
                            u9307 DD0E                              u9227 DB54  
                            u9147 D82A                              u9067 D67E  
                            u6771 CE96                              u6691 CE06  
                            u5980 B832                              u8540 FA88  
                            u8460 F8B8                              u7820 E8A0  
                            u7580 E03A                              u6860 D08A  
                            u9317 DD3A                              u9237 DB74  
                            u9157 D9F2                              u9077 D694  
                            u6781 CEA8                              u5990 B870  
                            u8550 FB1E                              u7670 E28C  
                            u7590 E0A0                              u9407 E06A  
                            u9327 DD50                              u9247 DB9A  
                            u9167 DA1E                              u9087 D6C6  
                            u6791 CEBA                              u6880 D104  
                            u9417 E080                              u9337 DDB0  
                            u9257 DBB0                              u9177 DA6A  
                            u9097 D712                              u8490 F92A  
                            u7770 E4D8                              u9507 E2C2  
                            u9427 E0D2                              u9347 DDC6  
                            u9267 DBEA                              u9187 DA96  
                            u8707 D01C                              u8627 CF14  
                            u9517 E7A6                              u9437 E0E8  
                            u9357 DDF8                              u9277 DC1C  
                            u9197 DAE2                              u8717 D032  
                            u8637 CF3E                              u7870 E9FA  
                            u7790 E558                              u9607 ED5C  
                            u9527 E7BC                              u9447 E122  
                            u9367 DE12                              u9287 DC44  
                            u8807 D1A0                              u8727 D076  
                            u8647 CF56                              u7880 EA38  
                            u9617 EE56                              u9537 E7DC  
                            u9457 E15E                              u9377 DE28  
                            u9297 DC74                              u8817 D1E4  
                            u8737 D096                              u8657 CF6C  
                            u9707 F0DA                              u9627 EE6C  
                            u9547 E834                              u9467 E17C  
                            u9387 DE98                              u8907 D354  
                            u8827 D202                              u8747 D0AC  
                            u8667 CF82                              u7980 ECBA  
                            u9717 F0F0                              u9637 EE9E  
                            u9557 E84A                              u9477 E194  
                            u9397 DEAE                              u8917 D384  
                            u8837 D21A                              u8757 D0F0  
                            u8677 CF98                              u7990 ECEA  
                            u9807 F26C                              u9727 F110  
                            u9647 F00C                              u9567 EAC6  
                            u9487 E1AA                              u8927 D39A  
                            u8847 D230                              u8767 D110  
                            u8687 CFC2                              u9817 F310  
                            u9737 F146                              u9657 F022  
                            u9577 EB58                              u9497 E2AC  
                            u8937 D3B0                              u8857 D246  
                            u8777 D126                              u8697 CFFC  
                            u9907 F976                              u9827 F336  
                            u9747 F15C                              u9667 F042  
                            u9587 ED26                              u8947 D3C6  
                            u8867 D25C                              u8787 D16A  
                            _UART 0294                              u9917 F98C  
                            u9837 F352                              u9757 F1C0  
                            u9677 F076                              u9597 ED3C  
                            u8957 D466                              u8877 D2FA  
                            u8797 D18A                              u9927 F9AC  
                            u9847 F368                              u9767 F1F4  
                            u9687 F08C                              u8967 D486  
                            u8887 D31A                              u9937 F9E2  
                            u9857 F39A                              u9777 F20A  
                            u9697 F0BE                              u8977 D49E  
                            u8897 D332                              u9947 F9F8  
                            u9867 F3C2                              u9787 F23C  
                            u8987 D4C0                              u9957 FAA2  
                            u9877 F3D8                              u9797 F256  
                            u8997 D4D8                              u9967 FAF8  
                            u9887 F44C                              u9977 FB3A  
                            u9897 F462                              u9987 FB50  
                            u9997 FB70                              _TRMT 007D61  
                            _TXIE 007CEC                              _TXIF 007CF4  
                            _data 007F             __size_of_store_EEPROM 0116  
                            _main CCBC                              _keys FB92  
                            _time 02B7                              _uart 02D8  
                            fsr0h 000FEA                              fsr1h 000FE2  
                            indf0 000FEF                              fsr2h 000FDA  
                            fsr0l 000FE9                              indf2 000FDF  
                            fsr1l 000FE1                              fsr2l 000FD9  
                            prodh 000FF4                              prodl 000FF3  
                            start 0000                       main@row_sum 01ED  
                   __CFG_IESO$OFF 000000                      ?_read_EEPROM 0001  
                 _reservoir_count 02BE                     __CFG_MCLRE$ON 000000  
                    ___param_bank 000000                  __end_of_LCD_LEFT FBB6  
               sensor_row_check@i 001B                 sensor_row_check@j 0019  
                   _man_cont_data 02E6             I2C_Master_Read@ackBit 0002  
                ?_I2C_Master_Init 000E                  ?_I2C_Master_Read 0001  
                ?_I2C_Master_Wait 0001                  ?_I2C_Master_Stop 0001  
             package_food@row_ind 003B                  _total_difference 02C4  
                 __end_of___aldiv AB14                             ?_main 0001  
                           _EEADR 000FA9                             STR_10 FEC1  
                           STR_11 FFFC                             STR_12 FF24  
                           STR_20 FD79                             STR_13 FF3A  
                           STR_21 FE5B                             STR_30 FEC1  
                           STR_14 FEC1                             STR_22 FFA6  
                           STR_15 FFFC                             STR_23 FF65  
                           STR_31 FC54                             STR_40 FE4C  
                           STR_24 FF82                             STR_16 FF01  
                           STR_32 FC94                             STR_25 FF8B  
                           STR_33 FF6F                             STR_17 FE79  
                           STR_41 FCB2                             STR_26 FF2F  
                           STR_34 FF0D                             STR_18 FDCD  
                           STR_50 FD68                             STR_42 FC75  
                           STR_35 FF6F                             STR_43 FF5B  
                           STR_27 FEE9                             STR_19 FE4C  
                           STR_51 FE1D                             STR_60 FF01  
                           STR_52 FFC7                             STR_36 FF9D  
                           STR_28 FEF5                             STR_44 FEDC  
                           STR_45 FF5B                             STR_61 FEB3  
                           STR_53 FEC1                             STR_37 FE97  
                           STR_29 FD8A                             STR_38 FE4C  
                           STR_70 FF45                             STR_46 FF79  
                           STR_62 FF50                             STR_54 FD9B  
                           STR_71 FDAC                             STR_39 FFB5  
                           STR_55 FECF                             STR_63 FEA5  
                           STR_47 FE88                             STR_72 FF45  
                           STR_56 FF01                             STR_64 FF45  
                           STR_48 FE0D                             STR_80 FDDD  
                           STR_73 FDAC                             STR_49 FFC2  
                           STR_57 FE6A                             STR_65 FDAC  
                           STR_81 FD22                             STR_74 FF45  
                           STR_66 FF45                             STR_90 FFDC  
                           STR_82 FF94                             STR_58 FEB3  
                           STR_75 FDAC                             STR_67 FDAC  
                           STR_91 FFCC                             STR_83 FDFD  
                           STR_59 FD57                             STR_76 FF45  
                           STR_68 FF45                             STR_92 FFE8  
                           STR_84 FE2D                             STR_77 FDAC  
                           STR_69 FDAC                             STR_93 FFEC  
                           STR_85 FDED                             STR_78 FF45  
                           STR_86 FEC1                             STR_94 FFF8  
                           STR_79 FDAC                             STR_95 FFE0  
                           STR_87 FCFA                             STR_96 FFD8  
                           STR_88 FD0E                             STR_89 FEC1  
                           STR_97 FFD4                             STR_98 FFE4  
                           STR_99 FFF0                   __end_of___lldiv A768  
                           u10007 B7D8                             u10017 B8E6  
                           u10107 BD20                             u10027 B514  
                           u10117 BD36                             u10037 B5BE  
                           u10207 BE90                             u10127 BD8C  
                           u10047 B66A                             u10217 BECE  
                           u10137 BDA2                             u10057 B6B4  
                           u10307 C6F2                             u10227 BEE4  
                           u10147 BDB8                             u10067 BC94  
                           u10317 C708                             u10237 BEFA  
                           u10157 BDFA                             u10077 BCAA  
                           u10407 A81A                             u10327 C7BA  
                           u10247 B39A                             u10167 BE10  
                           u10087 BCC0                             u10417 A854  
                           u10337 C7D0                             u10257 B3B0  
                           u10177 BE26                             u10097 BD0A  
                           u10427 A85E                             u10347 A29C  
                           u10267 B3C6                             u10187 BE64  
                           u10357 A43E                             u10277 ADDA  
                           u10197 BE7A                             u10367 A4B8  
                           u10287 ABF8                             u10377 A4EC  
                           u10297 A9D8                             u10387 A288  
                           u10397 A810                   __end_of___lwdiv A550  
                 __end_of___lwmod A4B2                             _RCREG 000FAE  
                 ?_compare_arrays 0001                             _SPBRG 000FAF  
                           _PORTB 000F81                             _TRISA 000F92  
                           _TRISB 000F93                             _TRISC 000F94  
                           _TRISD 000F95                             _TRISE 000F96  
                           _TXREG 000FAD                     __CFG_PWRT$OFF 000000  
                   __CFG_WRT0$OFF 000000                     __CFG_WRT1$OFF 000000  
                   __CFG_WRT2$OFF 000000                     __CFG_WRT3$OFF 000000  
                 __end_of_lcdInst A290                    __CFG_EBTR0$OFF 000000  
                  __CFG_FCMEN$OFF 000000                    __CFG_EBTR1$OFF 000000  
                  __CFG_EBTR2$OFF 000000                      main@keypress 02F7  
                  __CFG_EBTR3$OFF 000000                __size_of_UART_Init 0084  
           array_transition@F3190 03B0                     __CFG_WRTB$OFF 000000  
                   __CFG_WRTC$OFF 000000                      _store_EEPROM ADF8  
                   __CFG_WRTD$OFF 000000                   __end_of_initLCD A4FE  
                  __CFG_EBTRB$OFF 000000                   __end_of_loadRTC A6E6  
                 __end_of_dpowers FBAD                   __end_of_isdigit A32A  
                   ?_package_food 0031                             _putch A290  
                           main@a 005F                             main@b 0067  
                           main@c 006F                             main@d 0077  
                           main@e 00E0                             main@f 00E8  
                    main@temp_int 02F3                             main@g 00F0  
                           main@h 00F8                             main@i 02FC  
                           main@j 02F9                             main@k 02EF  
                           main@l 0198                             main@m 01A0  
                           main@n 01A8                             main@o 01B0  
                           main@p 01B8                             main@q 01C0  
                           main@r 01C8                             main@s 01D0  
                           main@x 0180                             main@y 0188  
                           main@z 0190             __size_of_write_EEPROM 002A  
                _total_final_time 02C8                             tablat 000FF5  
               _LCDinterruptState 02D6             comp_time_difference@i 001D  
               ?_comp_EEPROM_time 0001                             plusw1 000FE3  
                           plusw2 000FDB                             status 000FD8  
     I2C_Master_Read@receivedByte 0003                ??_comp_EEPROM_time 0007  
                  __CFG_PBADEN$ON 000000                 array_transition@i 0027  
               array_transition@j 0025                 array_transition@k 0023  
                 __initialization A5AC                      __end_of_main FB80  
                    __end_of_keys FBA3                 ?_lcd_shift_cursor 0004  
                  __CFG_OSC$HSPLL 000000                 __end_of_LCD_RIGHT FBB7  
                          ??_main 0057                ??_lcd_shift_cursor 0005  
                   __activetblptr 000003                      _write_EEPROM A394  
               ?_I2C_Master_Start 0001                 ?_I2C_Master_Write 0002  
            package_food@row_used 0037                ??_I2C_Master_Start 0002  
                          _ADCON0 000FC2                            _ADCON1 000FC1  
              ??_I2C_Master_Write 0004                    ??_package_food 0033  
         main@manual_unload_slide 01F7                            STR_100 FFF4  
                          STR_101 FFD0                            STR_110 FDAC  
                          STR_102 FCCB                            STR_111 FF45  
                          STR_103 FF50                            STR_104 FEA5  
                          STR_120 FDAC                            STR_112 FDAC  
                          STR_121 FDDD                            STR_113 FF45  
                          STR_105 FF45                            STR_114 FDAC  
                          STR_106 FDAC                            STR_122 FD22  
                          STR_115 FF45                            STR_107 FF45  
                          STR_123 FF94                            STR_116 FDAC  
                          STR_108 FDAC                            STR_124 FDFD  
                          STR_117 FF45                            STR_109 FF45  
                          STR_125 FE2D                            STR_118 FDAC  
                          STR_126 FD46                            STR_119 FF45  
                          STR_127 FFAE                            STR_128 FD35  
                          _EEDATA 000FA8                  _run_time_minutes 02D4  
                _run_time_seconds 02D2                            _EECON2 000FA7  
                          ?_putch 0001          __end_of_unload_reservoir ADF8  
                main@EEPROM_print 01D8                            _SSPADD 000FC8  
                          _TRISC6 007CA6                            _TRISC7 007CA7  
                          _SSPBUF 000FC9          __end_of_array_transition BC3C  
            __size_of_height_mech 0330                 ?_sensor_row_check 0007  
                   main@mode_bool 01F9                    __CFG_XINST$OFF 000000  
              ??_sensor_row_check 000B                  __end_of_finalize B46A  
               __end_of_UART_Init A7EC                         ??___aldiv 0009  
               height_mech@dy_cpy 0012                            ___wmul A36E  
                  __CFG_STVREN$ON 000000                         ??___lldiv 0009  
                 load_mech@pieces 000D                         ??___lwdiv 0005  
                       ??___lwmod 000C                  __end_of_initTime A34A  
     __end_of_set_total_init_time B036              _uartTransmitBlocking A9A8  
                          clear_0 A5E4                            clear_1 A5F0  
                          clear_2 A5FC                         ??_lcdInst 0003  
                          _printf C2CC                         ??_initLCD 0004  
                       ??_loadRTC 0016                      __pdataCOMRAM 007F  
                       ??_isdigit 0001      __size_of_uartReceiveBlocking 00F4  
                    __mediumconst FB80                            tblptrh 000FF7  
                          tblptrl 000FF6                            tblptru 000FF8  
                   main@row_check 02E7                       initialize@i 000F  
                     initialize@j 000D             sensor_row_check@F3197 0297  
                    ?_servo_slide 0006                        __accesstop 0080  
         __end_of__initialization A602             sensor_row_check@count 0009  
                   ___rparam_used 000001    uartReceiveBlocking@numReceives 0005  
               package_food@count 0035              compare_arrays@array1 0001  
            compare_arrays@array2 0003                    __pcstackCOMRAM 0001  
                    __pidataBANK2 A873              __size_of_read_EEPROM 0014  
           ?_uartTransmitBlocking 0001                 _lcd_shift_display A2D4  
                   __end_of_putch A2A4                ?_lcd_shift_display 0004  
    unload_reservoir@unload_count 0024                  ??_lcd_set_cursor 0008  
              __size_of_lcdNibble 0086                read_EEPROM@address 0001  
             ??_lcd_shift_display 0005                  write_EEPROM@data 0001  
                         ??_putch 0003                        __pbssBANK2 0297  
                      __pbssBANK3 0300                        __pbssBANK4 0400  
                 package_food@mat 0031      __end_of_comp_time_difference B2E4  
              __size_of_load_mech 025A                __size_of_hook_mech 003C  
              operation_summary@i 0053            operation_summary@F3203 03A0  
       __end_of_lcd_shift_display A2F0            operation_summary@F3196 FB81  
                 shift_EEPROM@val 0004                           ?___wmul 0001  
            __end_of_package_food B922                  ??_compare_arrays 0005  
                         ?_printf 000D          __size_of_receive_data_RX 001C  
                  main@legit_diet 01FE                        _arr_dataRX 03D0  
                   ?_shift_EEPROM 0001                           _SSPCON1 000FC6  
                         _SSPCON2 000FC5                         ?_finalize 0027  
                         _SSPSTAT 000FC7                         ?_initTime 0001  
         uartReceiveBlocking@temp 0003                 __end_of_lcdNibble A872  
                         __Hparam 0000                           __Lparam 0000  
                    load_mech@row 0007                           ___aldiv AA48  
          ??_uartTransmitBlocking 0004                           ___lldiv A6E6  
                 __size_of___wmul 0026                           ___lwdiv A4FE  
                         ___lwmod A470         __size_of_comp_EEPROM_time 009E  
                         _data_RX 0296                           __pcinit A5AC  
                         __ramtop 1000                        _initialize B036  
                         _lcdInst A27C                           __ptext0 CCBC  
                         __ptext1 ADF8                           __ptext2 A3BE  
                         __ptext3 A394                           __ptext4 AF0E  
                         __ptext5 B6C4                           __ptext6 BF6C  
                         __ptext7 B46A                           __ptext8 B036  
                         __ptext9 BC3C                   __size_of_printf 041A  
      height_mech@lower_row_count 0010                    ??_shift_EEPROM 0003  
                         _initLCD A4B2                 __end_of_hexpowers FBB5  
                         _loadRTC A674                 __end_of_load_mech B6C4  
                         _dpowers FBA3                           _p_count 02D0  
               __end_of_hook_mech A430                           _isdigit A30C  
                  _marked_drawers 02AF                  ___aldiv@dividend 0001  
                       _LCD_RIGHT FBB6          __size_of_I2C_Master_Init 005C  
        __size_of_I2C_Master_Read 0024          __size_of_I2C_Master_Wait 0012  
        __size_of_I2C_Master_Stop 0008                  main@legit_pieces 01EF  
                         main@mat 0080                        ??_finalize 002B  
                         main@row 02F5         __size_of_lcd_shift_cursor 001C  
            end_of_initialization A602                 ?_unload_reservoir 0001  
           __end_of_LCD_SIZE_HORZ FBB9             __end_of_LCD_SIZE_VERT FBB8  
             write_EEPROM@address 0002              __size_of_servo_slide 00F2  
                      ??_initTime 0007                ??_unload_reservoir 001F  
               ?_array_transition 0007         __size_of_I2C_Master_Start 0008  
       __size_of_I2C_Master_Write 000A                   ___lldiv@divisor 0005  
             _uartReceiveBlocking AC06                   ___lldiv@counter 000D  
              ??_array_transition 0009                         _RCSTAbits 000FAB  
                         printf@c 002A                           printf@f 000D  
                ___aldiv@quotient 000B        __size_of_lcd_shift_display 001C  
                         postdec1 000FE5                           postdec2 000FDD  
                         postinc0 000FEE                           postinc1 000FE6  
                         postinc2 000FDE                         _UART_Init A768  
                       _PORTBbits 000F81         operation_summary@keypress 0050  
       __size_of_sensor_row_check 0360              _comp_time_difference B182  
            ?_uartReceiveBlocking 0001                         _TRISCbits 000F94  
               ??_receive_data_RX 0006                     ??_height_mech 000C  
          sensor_row_check@pieces 0017       operation_summary@EEPROM_ind 0055  
     unload_reservoir@pill_unload 0023                       printf@width 0028  
                       _TXSTAbits 000FAC         lcd_shift_cursor@direction 0004  
                      main@letter 01FB             __size_of_package_food 025E  
             array_transition@mat 0007               finalize@curr_height 0027  
              main@past_run_count 02F1         array_transition@d_numbers 0013  
                  __end_of___wmul A394                        ?_UART_Init 000F  
                   __pidataCOMRAM A872                       ?_initialize 0007  
           ?_comp_time_difference 0001                    __end_of_printf C6E6  
           ??_uartReceiveBlocking 0001               start_initialization A5AC  
    __size_of_set_total_init_time 0128                      _package_food B6C4  
                   package_food@i 0039                     package_food@j 003D  
                 _total_init_time 02CC                 ??_I2C_Master_Init 0012  
               ??_I2C_Master_Read 0002                     shift_EEPROM@i 0006  
               ??_I2C_Master_Wait 0001                 ??_I2C_Master_Stop 0002  
            __end_of_shift_EEPROM A3F4                        initTime@DD 0004  
                      initTime@MM 0005                        initTime@YY 0006  
                   ??_read_EEPROM 0001                        load_mech@i 000F  
                      load_mech@j 0009               __end_of_height_mech BF6C  
                        ??___wmul 0005                        hook_mech@z 0006  
        I2C_Master_Init@clockFreq 000E                       __pdataBANK2 0200  
                __CFG_LPT1OSC$OFF 000000            height_mech@curr_height 000A  
                _comp_EEPROM_time A90A                          ??_printf 0019  
uartTransmitBlocking@numTransmits 0005                       _changed_mat 0300  
                   __pcstackBANK0 0080                     __pcstackBANK1 0100  
                   __pcstackBANK2 02E7                     ?_store_EEPROM 0001  
                    _isdigit$1786 0002                  _lcd_shift_cursor A2B8  
               __size_of_finalize 0186    __end_ofoperation_summary@F3196 FB92  
             __size_of_initialize 014C                  _I2C_Master_Start A250  
                _I2C_Master_Write A260                 __size_of_initTime 0020  
                ___lwdiv@dividend 0001                 __CFG_CCP2MX$PORTC 000000  
              _UARTinterruptState 02D7                     __pmediumconst FB80  
                   UART_Init@baud 000F                         _lcdNibble A7EC  
                        ?___aldiv 0001                 _operation_summary C6E6  
                        ?___lldiv 0001                     store_EEPROM@i 0009  
                   store_EEPROM@j 0007                          ?___lwdiv 0001  
                        ?___lwmod 0008             operation_summary@keys 002E  
                     ??_UART_Init 0013                ?_operation_summary 0001  
           operation_summary@temp 004F               __end_of_read_EEPROM A2B8  
                        ?_lcdInst 0001            ??_comp_time_difference 0016  
       unload_reservoir@res_index 0021                  _sensor_row_check BF6C  
                        ?_initLCD 0001                          ?_loadRTC 0001  
                 main@drawer_used 01EB                     ?_write_EEPROM 0001  
                        ?_isdigit 0001         lcd_shift_display@numChars 0005  
                  ??_store_EEPROM 0003               ??_operation_summary 002B  
                       _hexpowers FBAD                         _load_mech B46A  
                ___lwdiv@quotient 0005                         _hook_mech A3F4  
                  __size_of_putch 0014       uartReceiveBlocking@numBytes 0004  
                        _LCD_LEFT FBB5           __size_of_lcd_set_cursor 0040  
                 ___aldiv@divisor 0005                       _height_mech BC3C  
                 ___aldiv@counter 0009                    ___wmul@product 0005  
                        _LATDbits 000F8C              unload_reservoir@pill 0026  
                 lcd_set_cursor@i 0009                   lcd_set_cursor@x 000A  
                 lcd_set_cursor@y 0007         __end_of_operation_summary CCBC  
                __CFG_WDTPS$32768 000000                         main@F3210 0400  
                       main@F3212 02A7                         main@F3220 0270  
                       main@F3214 0288                         main@F3222 0268  
                       main@F3230 0248               main@copy_EEPROM_ind 01EA  
                       main@F3207 0480                        ?_lcdNibble 0001  
                       main@F3216 0280                         main@F3224 0260  
                       main@F3232 0240                         main@F3240 0220  
                       main@F3250 029F                         main@F3218 0278  
                       main@F3226 0258                         main@F3234 0238  
                       main@F3242 0218                         main@F3228 0250  
                       main@F3236 0230                         main@F3244 0210  
                       main@F3254 03C0                         main@F3238 0228  
                       main@F3246 0208                         main@F3248 0200  
       __size_of_unload_reservoir 00FE     __size_of_uartTransmitBlocking 00A0  
                 _receive_data_RX A2F0         __size_of_array_transition 031A  
               ___wmul@multiplier 0001                    ??_write_EEPROM 0002  
                       finalize@i 002D                         finalize@j 002F  
                   lcdNibble@data 0002                lcd_shift_display@n 0006  
                      printf@flag 0027                     lcdNibble@temp 0001  
                      printf@prec 001E              set_total_init_time@i 001D  
         __size_of_compare_arrays 006C                        ?_load_mech 0007  
                  _LCD_HORZ_LIMIT FBBA                 comp_EEPROM_time@i 000F  
                      ?_hook_mech 0006                     ??_servo_slide 0008  
                       copy_data0 A5C0             __size_of_shift_EEPROM 0036  
                      _EECON1bits 000FA6                    main@EEPROM_ind 02F8  
                        __Hrparam 0000                         initTime@h 0002  
                       initTime@m 0001                         initTime@s 0007  
                       initTime@w 0003               _set_total_init_time AF0E  
                     _read_EEPROM A2A4                          __Lrparam 0000  
              __CFG_BOREN$SBORDIS 000000                  __size_of___aldiv 00CC  
                __size_of___lldiv 0082   operation_summary@past_run_count 0051  
                __size_of___lwdiv 0052                  __size_of___lwmod 0042  
                    ??_initialize 0009                       _curr_height 02E4  
                __size_of_lcdInst 0014                   _I2C_Master_Init A550  
                 _I2C_Master_Read A34A                  __size_of_initLCD 004C  
                __size_of_loadRTC 0072                        _EEPROM_mat 0360  
                 _I2C_Master_Wait A26A                      _shift_EEPROM A3BE  
                 _I2C_Master_Stop A258            __end_of_LCD_HORZ_LIMIT FBBB  
            ?_set_total_init_time 0001                  __size_of_isdigit 001E  
                 ___lwdiv@divisor 0003                   ___lwdiv@counter 0007  
                        __ptext10 B2E4                          __ptext11 ACFA  
                        __ptext20 A2A4                          __ptext12 AB14  
                        __ptext21 C2CC                          __ptext13 A2F0  
                        __ptext30 A26A                          __ptext22 A290  
                        __ptext14 AC06                          __ptext31 A550  
                        __ptext23 A30C                          __ptext15 B182  
                        __ptext40 A608                          __ptext32 A6E6  
                        __ptext24 A470                          __ptext16 A34A  
                        __ptext41 A90A                          __ptext33 A2D4  
                        __ptext25 A4FE                          __ptext17 A3F4  
                        __ptext42 B922                          __ptext34 A430  
                        __ptext26 A674                          __ptext18 A9A8  
                        __ptext43 A36E                          __ptext35 A2B8  
                        __ptext27 A260                          __ptext19 C6E6  
                        __ptext44 A768                          __ptext36 A32A  
                        __ptext28 A258                          __ptext45 AA48  
                        __ptext37 A4B2                          __ptext29 A250  
                        __ptext38 A27C                          __ptext39 A7EC  
                        _finalize B2E4                    _LCD_VERT_LIMIT FBB9  
        __end_of_comp_EEPROM_time A9A8                          _initTime A32A  
                   __size_of_main 2EC4     operation_summary@EEPROM_print 003F  
             __end_of_servo_slide AC06                __end_of_initialize B182  
      __size_of_operation_summary 05D6              __end_of_store_EEPROM AF0E  
         __end_of_receive_data_RX A30C                       ??_lcdNibble 0001  
        __end_of_lcd_shift_cursor A2D4       __end_of_uartReceiveBlocking ACFA  
                        main@amtF 01F3                          main@amtL 01F5  
                        main@amtR 01F1                         printf@idx 001D  
                       printf@len 0023                          main@diet 0100  
                       printf@val 0025                          main@temp 02FB  
     I2C_Master_Write@byteToWrite 0002                          loadRTC@i 0017  
               lcd_shift_cursor@n 0006                         putch@data 0003  
        __end_of_I2C_Master_Start A258          __end_of_I2C_Master_Write A26A  
                      _INTCONbits 000FF2             ??_set_total_init_time 0016  
          __end_of_LCD_VERT_LIMIT FBBA                   main@timer_count 01E8  
                        isdigit@c 0003                       ??_load_mech 000B  
                     ??_hook_mech 0008                    _lcd_set_cursor A430  
                   _LCD_SIZE_HORZ FBB8                  ___lwmod@dividend 0008  
                   _LCD_SIZE_VERT FBB7                  ___lldiv@dividend 0001  
        __end_of_sensor_row_check C2CC              __end_of_write_EEPROM A3BE  
      lcd_shift_display@direction 0004                     initialize@mat 0007  
                        printf@ap 0021                          printf@cp 001F  
                _unload_reservoir ACFA           __end_of_I2C_Master_Init A5AC  
         __end_of_I2C_Master_Read A36E                   compare_arrays@i 0009  
         __end_of_I2C_Master_Wait A27C           __end_of_I2C_Master_Stop A260  
                     lcdInst@data 0003                     printRTC@F3193 0290  
                _array_transition B922          uartTransmitBlocking@data 0001  
                ___lldiv@quotient 0009                   ___lwmod@divisor 000A  
                 ___lwmod@counter 000C                   main@tot_drawers 01FC  
                    ___aldiv@sign 000A                    _compare_arrays A608  
                     _SSPCON1bits 000FC6                       _SSPCON2bits 000FC5  
          __end_of_lcd_set_cursor A470                       _servo_slide AB14  
                    ?_height_mech 0008          lcd_shift_cursor@numChars 0005  
